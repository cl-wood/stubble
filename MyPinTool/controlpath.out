START: 0xb7fdf1d0
mov eax, esp	
call 0xb7fe2c80	.text
START: 0xb7fe2c80
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
sub esp, 0x5c	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe2c8e
add ebx, 0x1c366	
mov dword ptr [ebp-0x48], eax	
rdtsc 	
mov dword ptr [ebx-0x17c], eax	
mov eax, dword ptr [ebx-0xd8]	
lea esi, ptr [ebx-0xd8]	
mov dword ptr [ebx-0x178], edx	
mov edx, esi	
sub edx, dword ptr [ebx]	
mov dword ptr [ebx+0x550], esi	
test eax, eax	
mov dword ptr [ebx+0x548], edx	
jz 0xb7fe2d26	
mov edx, esi	
lea edi, ptr [ebx-0xd0]	
jmp 0xb7fe2d05	
START: 0xb7fe2d05
cmp eax, 0x21	
jnbe 0xb7fe2cd8	
mov dword ptr [ebx+eax*4+0x568], edx	
add edx, 0x8	
mov eax, edx	
sub eax, esi	
mov eax, dword ptr [edi+eax*1-0x8]	
test eax, eax	
jnz 0xb7fe2d05	
mov edx, dword ptr [ebx+0x548]	
test edx, edx	
jz 0xb7fe2d92	
START: 0xb7fe2cd8
mov ecx, 0x6fffffff	
sub ecx, eax	
cmp ecx, 0xf	
jnbe 0xb7fe2f28	
mov ecx, 0x7000016d	
sub ecx, eax	
mov dword ptr [ebx+ecx*4+0x38], edx	
add edx, 0x8	
mov eax, edx	
sub eax, esi	
mov eax, dword ptr [edi+eax*1-0x8]	
test eax, eax	
jz 0xb7fe2d20	
cmp eax, 0x21	
jnbe 0xb7fe2cd8	
START: 0xb7fe2f28
lea ecx, ptr [eax+eax*1]	
sar ecx, 0x1	
cmp ecx, 0xfffffffc	
jbe 0xb7fe2f40	
not ecx	
mov dword ptr [ebx+ecx*4+0x630], edx	
jmp 0xb7fe2cf6	
START: 0xb7fe2f40
mov ecx, 0x6ffffdff	
sub ecx, eax	
cmp ecx, 0xb	
jnbe 0xb7fe3098	
add eax, 0x100001cc	
neg eax	
mov dword ptr [ebx+eax*4+0x568], edx	
jmp 0xb7fe2cf6	
START: 0xb7fe3098
mov ecx, 0x6ffffeff	
sub ecx, eax	
cmp ecx, 0xa	
jnbe 0xb7fe2cf6	
add eax, 0x100000c0	
neg eax	
mov dword ptr [ebx+eax*4+0x568], edx	
jmp 0xb7fe2d11	
START: 0xb7fe2d11
add edx, 0x8	
mov eax, edx	
sub eax, esi	
mov eax, dword ptr [edi+eax*1-0x8]	
test eax, eax	
jnz 0xb7fe2d05	
mov edx, dword ptr [ebx+0x548]	
test edx, edx	
jz 0xb7fe2d92	
mov eax, dword ptr [ebx+0x578]	
test eax, eax	
jz 0xb7fe2d37	
START: 0xb7fe2d20
mov edx, dword ptr [ebx+0x548]	
test edx, edx	
jz 0xb7fe2d92	
mov eax, dword ptr [ebx+0x578]	
test eax, eax	
jz 0xb7fe2d37	
add dword ptr [eax+0x4], edx	
mov eax, dword ptr [ebx+0x574]	
test eax, eax	
jz 0xb7fe2d44	
START: 0xb7fe2d41
add dword ptr [eax+0x4], edx	
mov eax, dword ptr [ebx+0x57c]	
test eax, eax	
jz 0xb7fe2d51	
add dword ptr [eax+0x4], edx	
mov eax, dword ptr [ebx+0x580]	
test eax, eax	
jz 0xb7fe2d5e	
add dword ptr [eax+0x4], edx	
mov eax, dword ptr [ebx+0x5ac]	
test eax, eax	
jz 0xb7fe2d6b	
START: 0xb7fe2d68
add dword ptr [eax+0x4], edx	
mov eax, dword ptr [ebx+0x5c4]	
test eax, eax	
jz 0xb7fe2d78	
add dword ptr [eax+0x4], edx	
mov eax, dword ptr [ebx+0x62c]	
test eax, eax	
jz 0xb7fe2d85	
add dword ptr [eax+0x4], edx	
mov eax, dword ptr [ebx+0x694]	
test eax, eax	
jz 0xb7fe2d92	
START: 0xb7fe2d8f
add dword ptr [eax+0x4], edx	
mov edx, dword ptr [ebx+0x5b8]	
test edx, edx	
jz 0xb7fe2da6	
cmp dword ptr [edx+0x4], 0x11	
jnz 0xb7fe32f2	
mov eax, dword ptr [ebx+0x5ac]	
test eax, eax	
jz 0xb7fe2dc0	
START: 0xb7fe2db0
mov ecx, dword ptr [ebx+0x5b4]	
cmp dword ptr [ecx+0x4], 0x8	
jnz 0xb7fe324a	
mov ecx, dword ptr [ebx+0x600]	
test ecx, ecx	
jz 0xb7fe2dd7	
test dword ptr [ecx+0x4], 0xfffffffe	
jnz 0xb7fe3220	
START: 0xb7fe2dd7
mov ecx, dword ptr [ebx+0x5e0]	
test ecx, ecx	
jz 0xb7fe2dee	
test dword ptr [ecx+0x4], 0xfffffff7	
jnz 0xb7fe329e	
mov edi, dword ptr [ebx+0x5dc]	
test edi, edi	
jnz 0xb7fe3274	
START: 0xb7fe2dee
mov edi, dword ptr [ebx+0x5dc]	
test edi, edi	
jnz 0xb7fe3274	
mov esi, dword ptr [ebx+0x5a4]	
test esi, esi	
jnz 0xb7fe31f6	
mov edi, dword ptr [ebx+0x548]	
test edi, edi	
jnz 0xb7fe2f68	
START: 0xb7fe2f68
test eax, eax	
jz 0xb7fe3154	
mov esi, dword ptr [ebx+0x604]	
mov ecx, dword ptr [ebx+0x5b0]	
mov eax, dword ptr [eax+0x4]	
test esi, esi	
mov ecx, dword ptr [ecx+0x4]	
mov dword ptr [ebp-0x38], esi	
jz 0xb7fe316b	
mov esi, ecx	
shr esi, 0x3	
mov dword ptr [ebp-0x30], esi	
mov esi, dword ptr [ebp-0x38]	
mov esi, dword ptr [esi+0x4]	
cmp dword ptr [ebp-0x30], esi	
cmovbe esi, dword ptr [ebp-0x30]	
mov dword ptr [ebp-0x30], esi	
lea esi, ptr [ecx+eax*1]	
mov dword ptr [ebp-0x38], esi	
test edx, edx	
jz 0xb7fe2fd1	
START: 0xb7fe2faf
mov edx, dword ptr [ebx+0x5c4]	
mov esi, dword ptr [ebp-0x38]	
cmp esi, dword ptr [edx+0x4]	
jnz 0xb7fe32c8	
mov edx, dword ptr [ebx+0x570]	
add ecx, eax	
mov esi, dword ptr [edx+0x4]	
add ecx, esi	
mov dword ptr [ebp-0x38], ecx	
mov edx, dword ptr [ebx+0x580]	
mov edx, dword ptr [edx+0x4]	
mov dword ptr [ebp-0x3c], edx	
mov edx, dword ptr [ebp-0x30]	
lea esi, ptr [eax+edx*8]	
cmp eax, esi	
jnb 0xb7fe3019	
cmp byte ptr [eax+0x4], 0x8	
mov edx, dword ptr [eax]	
jnz 0xb7fe317d	
START: 0xb7fe2ff3
add edx, edi	
mov ecx, 0x8	
jmp 0xb7fe3010	
START: 0xb7fe3010
add eax, 0x8	
add dword ptr [edx], edi	
cmp esi, eax	
jnbe 0xb7fe3000	
mov eax, dword ptr [ebx+0x62c]	
test eax, eax	
jz 0xb7fe31bf	
cmp dword ptr [ebp-0x38], esi	
lea ecx, ptr [0x548]	
lea edx, ptr [ebx-0x9f74]	
mov dword ptr [ebp-0x40], ecx	
mov dword ptr [ebp-0x4c], edx	
jbe 0xb7fe2e26	
START: 0xb7fe3000
mov edx, dword ptr [eax+ecx*1-0x8]	
add edx, edi	
cmp byte ptr [eax+0x4], 0x8	
jnz 0xb7fe317d	
add eax, 0x8	
add dword ptr [edx], edi	
cmp esi, eax	
jnbe 0xb7fe3000	
mov eax, dword ptr [ebx+0x62c]	
test eax, eax	
jz 0xb7fe31bf	
START: 0xb7fe3027
cmp dword ptr [ebp-0x38], esi	
lea ecx, ptr [0x548]	
lea edx, ptr [ebx-0x9f74]	
mov dword ptr [ebp-0x40], ecx	
mov dword ptr [ebp-0x4c], edx	
jbe 0xb7fe2e26	
mov dword ptr [ebp-0x44], edi	
lea esi, ptr [esi]	
mov eax, dword ptr [esi+0x4]	
mov ecx, dword ptr [ebp-0x40]	
mov edx, dword ptr [ebp-0x44]	
add edx, dword ptr [esi]	
mov edi, eax	
and eax, 0xff	
shr edi, 0x8	
shl edi, 0x4	
add edi, dword ptr [ebp-0x3c]	
mov dword ptr [ebp-0x30], eax	
mov eax, dword ptr [edi+0x4]	
add eax, dword ptr [ecx+ebx*1]	
movzx ecx, byte ptr [edi+0xc]	
and ecx, 0xf	
cmp ecx, 0xa	
jz 0xb7fe31a7	
mov ecx, dword ptr [ebp-0x30]	
sub ecx, 0x6	
cmp ecx, 0x23	
jnbe 0xb7fe30c2	
START: 0xb7fe3087
mov ecx, dword ptr [ebx+ecx*4-0x83d8]	
add ecx, ebx	
jmp ecx	
START: 0xb7fe30c0
mov dword ptr [edx], eax	
add esi, 0x8	
cmp dword ptr [ebp-0x38], esi	
jnbe 0xb7fe3048	
jmp 0xb7fe2e26	
START: 0xb7fe3048
mov eax, dword ptr [esi+0x4]	
mov ecx, dword ptr [ebp-0x40]	
mov edx, dword ptr [ebp-0x44]	
add edx, dword ptr [esi]	
mov edi, eax	
and eax, 0xff	
shr edi, 0x8	
shl edi, 0x4	
add edi, dword ptr [ebp-0x3c]	
mov dword ptr [ebp-0x30], eax	
mov eax, dword ptr [edi+0x4]	
add eax, dword ptr [ecx+ebx*1]	
movzx ecx, byte ptr [edi+0xc]	
and ecx, 0xf	
cmp ecx, 0xa	
jz 0xb7fe31a7	
mov ecx, dword ptr [ebp-0x30]	
sub ecx, 0x6	
cmp ecx, 0x23	
jnbe 0xb7fe30c2	
mov ecx, dword ptr [ebx+ecx*4-0x83d8]	
add ecx, ebx	
jmp ecx	
START: 0xb7fe2e26
mov eax, dword ptr [ebx-0x1d0]	
or byte ptr [ebx+0x6dc], 0x4	
or eax, dword ptr [ebx-0x1d4]	
jnz 0xb7fe2e97	
mov ecx, 0x5	
mov esi, 0xffffffff	
mov edi, 0xffffffff	
mov dword ptr [ebp-0x30], 0xffffffff	
mov dword ptr [ebp-0x2c], 0xffffffff	
jmp 0xb7fe2e66	
START: 0xb7fe2e66
rdtsc 	
mov dword ptr [ebp-0x38], eax	
mov dword ptr [ebp-0x34], edx	
rdtsc 	
sub eax, dword ptr [ebp-0x38]	
sbb edx, dword ptr [ebp-0x34]	
cmp dword ptr [ebp-0x2c], edx	
jnbe 0xb7fe2e82	
jb 0xb7fe2e86	
cmp dword ptr [ebp-0x30], eax	
jbe 0xb7fe2e86	
START: 0xb7fe2e82
mov esi, eax	
mov edi, edx	
sub ecx, 0x1	
jnz 0xb7fe2e60	
mov dword ptr [ebx-0x1d4], esi	
mov dword ptr [ebx-0x1d0], edi	
lea eax, ptr [ebx+0x548]	
call 0xb7fe8c30	_dl_rtld_di_serinfo
START: 0xb7fe2e60
mov dword ptr [ebp-0x30], esi	
mov dword ptr [ebp-0x2c], edi	
rdtsc 	
mov dword ptr [ebp-0x38], eax	
mov dword ptr [ebp-0x34], edx	
rdtsc 	
sub eax, dword ptr [ebp-0x38]	
sbb edx, dword ptr [ebp-0x34]	
cmp dword ptr [ebp-0x2c], edx	
jnbe 0xb7fe2e82	
jb 0xb7fe2e86	
cmp dword ptr [ebp-0x30], eax	
jbe 0xb7fe2e86	
START: 0xb7fe2e86
sub ecx, 0x1	
jnz 0xb7fe2e60	
mov dword ptr [ebx-0x1d4], esi	
mov dword ptr [ebx-0x1d0], edi	
lea eax, ptr [ebx+0x548]	
call 0xb7fe8c30	_dl_rtld_di_serinfo
START: 0xb7fe8c30
sub esp, 0x2c	
mov edx, dword ptr [eax+0x14c]	
mov dword ptr [esp+0x1c], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe8c42
add ebx, 0x163b2	
mov dword ptr [esp+0x20], esi	
test edx, edx	
mov dword ptr [esp+0x24], edi	
mov dword ptr [esp+0x28], ebp	
jz 0xb7fe8cb3	
mov edx, dword ptr [edx+0x4]	
mov edi, dword ptr [edx]	
mov dword ptr [eax+0x178], edi	
mov ecx, dword ptr [edx+0x8]	
mov esi, dword ptr [edx+0x4]	
lea ebp, ptr [ecx-0x1]	
test ebp, ecx	
jnz 0xb7fe8cd9	
mov dword ptr [eax+0x17c], ebp	
mov ebp, dword ptr [edx+0xc]	
add edx, 0x10	
mov dword ptr [eax+0x184], edx	
lea edx, ptr [edx+ecx*4]	
mov dword ptr [eax+0x188], edx	
shl esi, 0x2	
lea edx, ptr [edx+edi*4]	
sub edx, esi	
mov dword ptr [eax+0x180], ebp	
mov dword ptr [eax+0x18c], edx	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb7fe2ea2
lea eax, ptr [ebx+0x548]	
mov dword ptr [ebx+0x55c], eax	
lea eax, ptr [ebx-0x20ff4]	
mov dword ptr [ebx+0x6f4], eax	
lea eax, ptr [ebx+0x924]	
mov dword ptr [ebx+0x6f8], eax	
lea eax, ptr [ebx-0x8445]	
mov dword ptr [ebx+0x6fc], eax	
rdtsc 	
mov dword ptr [ebx+0x52c], eax	
lea eax, ptr [ebx-0x1f014]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [ebp-0x48]	
mov dword ptr [ebx+0x530], edx	
mov dword ptr [ebx-0xe4], ebp	
mov dword ptr [esp], eax	
call 0xb7ff2780	_dl_make_stack_executable
START: 0xb7ff2780
push ebp	
push edi	
push esi	
push ebx	
sub esp, 0x6c	
mov eax, dword ptr [esp+0x80]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff2793
add ebx, 0xc861	
mov edx, dword ptr [eax]	
mov dword ptr [ebx-0xe4], eax	
add eax, 0x4	
mov dword ptr [ebx-0x184], edx	
lea edx, ptr [eax+edx*4+0x4]	
mov dword ptr [ebx-0x188], eax	
mov dword ptr [ebx+0x908], edx	
mov esi, dword ptr [edx]	
test esi, esi	
jz 0xb7ff27c9	
add edx, 0x4	
mov ecx, dword ptr [edx]	
test ecx, ecx	
jnz 0xb7ff27c0	
mov ecx, dword ptr [edx+0x4]	
lea eax, ptr [edx+0x4]	
xor edi, edi	
lea esi, ptr [ebx-0x1fe24]	
mov dword ptr [ebx-0xdc], eax	
mov dword ptr [esp+0x5c], esi	
test ecx, ecx	
mov dword ptr [ebx-0x34c], 0x0	
mov dword ptr [esp+0x24], 0x0	
jz 0xb7ff2912	
START: 0xb7ff27c0
add edx, 0x4	
mov ecx, dword ptr [edx]	
test ecx, ecx	
jnz 0xb7ff27c0	
mov ecx, dword ptr [edx+0x4]	
lea eax, ptr [edx+0x4]	
xor edi, edi	
lea esi, ptr [ebx-0x1fe24]	
mov dword ptr [ebx-0xdc], eax	
mov dword ptr [esp+0x5c], esi	
test ecx, ecx	
mov dword ptr [ebx-0x34c], 0x0	
mov dword ptr [esp+0x24], 0x0	
jz 0xb7ff2912	
mov edi, dword ptr [ebx-0x344]	
mov ebp, dword ptr [ebx-0xe0]	
mov dword ptr [esp+0x38], esi	
mov esi, dword ptr [ebx-0x318]	
mov dword ptr [esp+0x30], 0x0	
mov dword ptr [esp+0x3c], edi	
mov edi, dword ptr [ebx-0x314]	
mov dword ptr [esp+0x34], ebp	
movzx ebp, word ptr [ebx-0x320]	
mov dword ptr [esp+0x28], esi	
mov esi, dword ptr [ebx-0x1c8]	
mov dword ptr [esp+0x2c], edi	
mov edi, dword ptr [ebx-0x338]	
mov word ptr [esp+0x46], bp	
xor ebp, ebp	
mov dword ptr [esp+0x48], esi	
lea esi, ptr [edx+0xc]	
mov dword ptr [esp+0x1c], ebp	
mov dword ptr [esp+0x40], edi	
mov edi, dword ptr [ebx-0xe8]	
mov dword ptr [esp+0x4c], edi	
xor edi, edi	
mov dword ptr [esp+0x20], edi	
sub ecx, 0x3	
cmp ecx, 0x1e	
jnbe 0xb7ff2888	
START: 0xb7ff2870
mov ecx, dword ptr [ebx+ecx*4-0x7af4]	
add ecx, ebx	
jmp ecx	
START: 0xb7ff29f8
mov edi, dword ptr [eax+0x4]	
add eax, 0x8	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
mov dword ptr [esp+0x1c], edi	
test ecx, ecx	
jnz 0xb7ff2868	
jmp 0xb7ff2898	
START: 0xb7ff2868
sub ecx, 0x3	
cmp ecx, 0x1e	
jnbe 0xb7ff2888	
mov ecx, dword ptr [ebx+ecx*4-0x7af4]	
add ecx, ebx	
jmp ecx	
START: 0xb7ff2998
mov ebp, dword ptr [eax+0x4]	
add eax, 0x8	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
mov dword ptr [esp+0x48], ebp	
test ecx, ecx	
jnz 0xb7ff2868	
jmp 0xb7ff2898	
START: 0xb7ff2a60
mov edi, dword ptr [eax+0x4]	
add eax, 0x8	
xor ebp, ebp	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
mov dword ptr [esp+0x28], edi	
mov dword ptr [esp+0x2c], ebp	
test ecx, ecx	
jnz 0xb7ff2868	
jmp 0xb7ff2898	
START: 0xb7ff2ac8
mov edi, dword ptr [eax+0x4]	
add eax, 0x8	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
mov dword ptr [esp+0x3c], edi	
test ecx, ecx	
jnz 0xb7ff2868	
jmp 0xb7ff2898	
START: 0xb7ff2a40
mov ebp, dword ptr [eax+0x4]	
add eax, 0x8	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
mov dword ptr [esp+0x40], ebp	
test ecx, ecx	
jnz 0xb7ff2868	
jmp 0xb7ff2898	
START: 0xb7ff2880
mov ebp, dword ptr [eax+0x4]	
mov dword ptr [esp+0x24], ebp	
nop 	
add eax, 0x8	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
test ecx, ecx	
jnz 0xb7ff2868	
nop 	
mov eax, dword ptr [esp+0x38]	
mov edx, dword ptr [esp+0x34]	
mov esi, dword ptr [esp+0x3c]	
mov ecx, dword ptr [esp+0x30]	
mov dword ptr [esp+0x5c], eax	
mov eax, dword ptr [esp+0x28]	
mov dword ptr [ebx-0xe0], edx	
mov edx, dword ptr [esp+0x2c]	
mov ebp, dword ptr [esp+0x1c]	
mov dword ptr [ebx-0x344], esi	
mov esi, dword ptr [esp+0x48]	
mov dword ptr [ebx-0x34c], ecx	
movzx ecx, word ptr [esp+0x46]	
mov dword ptr [ebx-0x318], eax	
mov eax, dword ptr [esp+0x4c]	
mov dword ptr [ebx-0x314], edx	
mov edx, dword ptr [esp+0x40]	
test ebp, ebp	
mov edi, dword ptr [esp+0x20]	
mov word ptr [ebx-0x320], cx	
mov dword ptr [ebx-0x1c8], esi	
mov dword ptr [ebx-0x338], edx	
mov dword ptr [ebx-0xe8], eax	
jz 0xb7ff2912	
test esi, esi	
jz 0xb7ff2912	
START: 0xb7ff2888
add eax, 0x8	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
test ecx, ecx	
jnz 0xb7ff2868	
nop 	
mov eax, dword ptr [esp+0x38]	
mov edx, dword ptr [esp+0x34]	
mov esi, dword ptr [esp+0x3c]	
mov ecx, dword ptr [esp+0x30]	
mov dword ptr [esp+0x5c], eax	
mov eax, dword ptr [esp+0x28]	
mov dword ptr [ebx-0xe0], edx	
mov edx, dword ptr [esp+0x2c]	
mov ebp, dword ptr [esp+0x1c]	
mov dword ptr [ebx-0x344], esi	
mov esi, dword ptr [esp+0x48]	
mov dword ptr [ebx-0x34c], ecx	
movzx ecx, word ptr [esp+0x46]	
mov dword ptr [ebx-0x318], eax	
mov eax, dword ptr [esp+0x4c]	
mov dword ptr [ebx-0x314], edx	
mov edx, dword ptr [esp+0x40]	
test ebp, ebp	
mov edi, dword ptr [esp+0x20]	
mov word ptr [ebx-0x320], cx	
mov dword ptr [ebx-0x1c8], esi	
mov dword ptr [ebx-0x338], edx	
mov dword ptr [ebx-0xe8], eax	
jz 0xb7ff2912	
test esi, esi	
jz 0xb7ff2912	
START: 0xb7ff2ae8
mov ecx, dword ptr [eax+0x4]	
add eax, 0x8	
mov dword ptr [esp+0x20], ecx	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
test ecx, ecx	
jnz 0xb7ff2868	
jmp 0xb7ff2898	
START: 0xb7ff2aa8
mov ebp, dword ptr [eax+0x4]	
add eax, 0x8	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
mov dword ptr [esp+0x38], ebp	
test ecx, ecx	
jnz 0xb7ff2868	
jmp 0xb7ff2898	
START: 0xb7ff29d8
mov ecx, dword ptr [eax+0x4]	
add eax, 0x8	
mov dword ptr [esp+0x34], ecx	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
test ecx, ecx	
jnz 0xb7ff2868	
jmp 0xb7ff2898	
START: 0xb7ff29b8
mov ecx, dword ptr [eax+0x4]	
add eax, 0x8	
mov dword ptr [esp+0x4c], ecx	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
test ecx, ecx	
jnz 0xb7ff2868	
jmp 0xb7ff2898	
START: 0xb7ff2a88
mov edi, dword ptr [eax+0x4]	
add eax, 0x8	
mov ecx, eax	
sub ecx, edx	
mov ecx, dword ptr [esi+ecx*1-0xc]	
mov dword ptr [esp+0x30], edi	
test ecx, ecx	
jnz 0xb7ff2868	
jmp 0xb7ff2898	
START: 0xb7ff2898
mov eax, dword ptr [esp+0x38]	
mov edx, dword ptr [esp+0x34]	
mov esi, dword ptr [esp+0x3c]	
mov ecx, dword ptr [esp+0x30]	
mov dword ptr [esp+0x5c], eax	
mov eax, dword ptr [esp+0x28]	
mov dword ptr [ebx-0xe0], edx	
mov edx, dword ptr [esp+0x2c]	
mov ebp, dword ptr [esp+0x1c]	
mov dword ptr [ebx-0x344], esi	
mov esi, dword ptr [esp+0x48]	
mov dword ptr [ebx-0x34c], ecx	
movzx ecx, word ptr [esp+0x46]	
mov dword ptr [ebx-0x318], eax	
mov eax, dword ptr [esp+0x4c]	
mov dword ptr [ebx-0x314], edx	
mov edx, dword ptr [esp+0x40]	
test ebp, ebp	
mov edi, dword ptr [esp+0x20]	
mov word ptr [ebx-0x320], cx	
mov dword ptr [ebx-0x1c8], esi	
mov dword ptr [ebx-0x338], edx	
mov dword ptr [ebx-0xe8], eax	
jz 0xb7ff2912	
test esi, esi	
jz 0xb7ff2912	
mov dword ptr [ebx-0x1cc], ebp	
mov dword ptr [esp], 0x0	
call 0xb7ff3f80	realloc
START: 0xb7ff3f80
sub esp, 0x8	
mov edx, dword ptr [esp+0xc]	
mov dword ptr [esp], ebx	
mov dword ptr [esp+0x4], esi	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff3f93
add ebx, 0xb061	
mov ecx, edx	
xchg ebx, ecx	
mov eax, 0x2d	
int 0x80	
START: 0xb7ff3fa4
xchg ebx, ecx	
mov esi, eax	
mov dword ptr [ebx+0x8f4], eax	
xor eax, eax	
cmp edx, esi	
jnbe 0xb7ff3fc0	
mov ebx, dword ptr [esp]	
mov esi, dword ptr [esp+0x4]	
add esp, 0x8	
ret 	
START: 0xb7ff291e
mov eax, dword ptr [ebx-0x34c]	
test eax, eax	
jz 0xb7ff293b	
cmp byte ptr [eax], 0x0	
jnz 0xb7ff2b08	
mov dword ptr [ebx-0x34c], 0x0	
mov dword ptr [esp], 0x0	
call 0xb7ff3fe0	realloc
START: 0xb7ff2b08
mov dword ptr [esp], eax	
call 0xb7ff62e0	realloc
START: 0xb7ff62e0
mov eax, dword ptr [esp+0x4]	
mov edx, 0x3	
and edx, eax	
jz 0xb7ff6311	
jp 0xb7ff6306	
cmp byte ptr [eax], dh	
jz 0xb7ff6396	
START: 0xb7ff6306
cmp byte ptr [eax], dh	
jz 0xb7ff6396	
inc eax	
xor edx, edx	
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
xor edx, ecx	
and edx, 0x1010100	
jnz 0xb7ff6379	
START: 0xb7ff6379
sub eax, 0x4	
sub ecx, 0xfefefeff	
cmp cl, 0x0	
jz 0xb7ff6396	
inc eax	
test ch, ch	
jz 0xb7ff6396	
shr ecx, 0x10	
inc eax	
cmp cl, 0x0	
jz 0xb7ff6396	
START: 0xb7ff6395
inc eax	
sub eax, dword ptr [esp+0x4]	
ret 	
START: 0xb7ff2b10
mov dword ptr [ebx-0x348], eax	
jmp 0xb7ff293b	
START: 0xb7ff293b
mov dword ptr [esp], 0x0	
call 0xb7ff3fe0	realloc
START: 0xb7ff3fe0
sub esp, 0x1c	
mov dword ptr [esp+0x10], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff3fec
add ebx, 0xb008	
mov dword ptr [esp+0x14], esi	
mov dword ptr [esp+0x18], edi	
mov edi, dword ptr [esp+0x20]	
mov esi, dword ptr [ebx+0x8f4]	
test esi, esi	
jz 0xb7ff4048	
mov eax, dword ptr [ebx+0x8e4]	
test eax, eax	
jnz 0xb7ff4048	
cmp edi, 0x0	
jz 0xb7ff4034	
START: 0xb7ff4034
mov eax, esi	
mov ebx, dword ptr [esp+0x10]	
mov esi, dword ptr [esp+0x14]	
mov edi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb7ff2947
lea edx, ptr [ebx+0x924]	
cmp eax, edx	
jz 0xb7ff2b1b	
mov eax, dword ptr [ebx-0xe0]	
test eax, eax	
jnz 0xb7ff2b35	
mov eax, dword ptr [ebx-0xdc]	
mov edx, dword ptr [esp+0x24]	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [esp+0x5c]	
mov dword ptr [esp+0x8], eax	
mov dword ptr [esp], edx	
call dword ptr [esp+0x84]	
START: 0xb7fdffe0
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fdffeb
add ebx, 0x1f009	
sub esp, 0x10c	
lea eax, ptr [ebx-0x1fdd4]	
mov dword ptr [ebx+0x544], eax	
lea eax, ptr [ebx-0x15da4]	
mov dword ptr [ebx+0x854], eax	
lea eax, ptr [ebx-0x1fdb4]	
mov dword ptr [ebx+0x820], eax	
lea eax, ptr [ebx-0x1fda4]	
mov dword ptr [ebx+0x824], eax	
lea eax, ptr [ebx-0xed44]	
mov dword ptr [ebx+0x828], eax	
lea eax, ptr [ebp-0x2c]	
call 0xb7fdf720	.text
START: 0xb7fdf720
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fdf72b
add ebx, 0x1f8c9	
sub esp, 0x5c	
mov dword ptr [ebp-0x2c], eax	
mov ecx, dword ptr [ebx-0xe0]	
lea edx, ptr [ebx-0x8434]	
mov eax, dword ptr [ebx+0x908]	
test ecx, ecx	
mov dword ptr [ebp-0x20], eax	
lea eax, ptr [ebx-0x842b]	
cmovz eax, edx	
xor esi, esi	
lea edx, ptr [ebx-0x75c8]	
xor edi, edi	
mov dword ptr [ebx-0x1e4], eax	
mov dword ptr [ebp-0x34], edx	
lea esi, ptr [esi]	
lea eax, ptr [ebp-0x20]	
call 0xb7ff3700	_dl_make_stack_executable
START: 0xb7ff3700
push esi	
mov ecx, dword ptr [eax]	
xor esi, esi	
mov edx, dword ptr [ecx]	
test edx, edx	
jz 0xb7ff3720	
nop 	
lea esi, ptr [esi]	
cmp byte ptr [edx], 0x4c	
jz 0xb7ff3724	
add ecx, 0x4	
mov edx, dword ptr [ecx]	
test edx, edx	
jnz 0xb7ff3710	
START: 0xb7ff3710
cmp byte ptr [edx], 0x4c	
jz 0xb7ff3724	
add ecx, 0x4	
mov edx, dword ptr [ecx]	
test edx, edx	
jnz 0xb7ff3710	
xor esi, esi	
mov eax, esi	
pop esi	
ret 	
START: 0xb7ff3724
cmp byte ptr [edx+0x1], 0x44	
jnz 0xb7ff3715	
cmp byte ptr [edx+0x2], 0x5f	
jnz 0xb7ff3715	
add ecx, 0x4	
lea esi, ptr [edx+0x3]	
mov dword ptr [eax], ecx	
jmp 0xb7ff3720	
START: 0xb7ff3715
add ecx, 0x4	
mov edx, dword ptr [ecx]	
test edx, edx	
jnz 0xb7ff3710	
xor esi, esi	
mov eax, esi	
pop esi	
ret 	
START: 0xb7fdf778
test eax, eax	
mov ecx, eax	
jz 0xb7fdf7b6	
movzx eax, byte ptr [eax]	
cmp al, 0x3d	
jz 0xb7fdf7e0	
xor edx, edx	
test al, al	
jnz 0xb7fdf794	
START: 0xb7fdf7b6
mov eax, dword ptr [ebp-0x2c]	
mov dword ptr [eax], edi	
mov eax, dword ptr [ebx-0xe0]	
test eax, eax	
jnz 0xb7fdfe80	
test esi, esi	
jnz 0xb7fdfc40	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe003b
mov edx, dword ptr [ebp+0x10]	
lea eax, ptr [ebx-0x1fe24]	
cmp dword ptr [edx], eax	
jnz 0xb7fe0213	
mov eax, dword ptr [ebx-0x188]	
lea edi, ptr [ebx-0x7564]	
mov dword ptr [ebp-0x9c], edi	
lea edi, ptr [ebx-0x755d]	
mov dword ptr [ebp-0x98], edi	
lea edi, ptr [ebx-0x7554]	
mov dword ptr [ebp-0xa8], edi	
lea edi, ptr [ebx-0x7545]	
mov eax, dword ptr [eax]	
mov dword ptr [ebp-0xb0], edi	
lea edi, ptr [ebx-0x7535]	
mov dword ptr [ebp-0xb4], edi	
mov dword ptr [ebx+0x54c], eax	
mov eax, dword ptr [ebx-0x184]	
cmp eax, 0x1	
jle 0xb7fe00f4	
mov edx, dword ptr [ebx-0x188]	
mov ecx, 0x7	
mov edi, dword ptr [ebp-0x9c]	
mov esi, dword ptr [edx+0x4]	
mov dword ptr [ebp-0x7c], edx	
mov dword ptr [ebp-0x88], esi	
rep cmpsb byte ptr [esi], byte ptr [edi]	
START: 0xb7fe0213
lea edx, ptr [ebx-0x742f]	
xor ecx, ecx	
mov eax, edx	
mov dword ptr [esp+0x8], 0x0	
mov dword ptr [esp+0x4], 0x20000000	
mov dword ptr [esp], 0x0	
call 0xb7fe8dc0	_dl_rtld_di_serinfo
START: 0xb7fe8dc0
push ebp	
push edi	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe8dc9
add ebx, 0x1622b	
sub esp, 0x3c	
mov dword ptr [esp], edx	
mov edi, dword ptr [esp+0x50]	
mov dword ptr [esp+0x2c], ecx	
mov dword ptr [esp+0x24], eax	
mov dword ptr [esp+0x20], edx	
call 0xb7ff62e0	realloc
START: 0xb7ff6396
sub eax, dword ptr [esp+0x4]	
ret 	
START: 0xb7fe8dea
mov ebp, dword ptr [ebx-0x198]	
test ebp, ebp	
mov ecx, eax	
jz 0xb7fe8ff0	
lea edx, ptr [ebp*8]	
lea eax, ptr [edx+ecx*1+0x269]	
mov dword ptr [esp+0x18], edx	
mov dword ptr [esp+0x1c], ecx	
mov dword ptr [esp+0x4], 0x1	
mov dword ptr [esp], eax	
call 0xb7fde7e0	.plt
START: 0xb7fe8ff0
mov eax, dword ptr [esp+0x54]	
and eax, 0x20000000	
cmp eax, 0x1	
sbb edx, edx	
not edx	
and edx, 0x80	
test eax, eax	
mov eax, 0x10	
cmovnz ebp, eax	
jmp 0xb7fe8e01	
START: 0xb7fe8e01
lea eax, ptr [edx+ecx*1+0x269]	
mov dword ptr [esp+0x18], edx	
mov dword ptr [esp+0x1c], ecx	
mov dword ptr [esp+0x4], 0x1	
mov dword ptr [esp], eax	
call 0xb7fde7e0	.plt
START: 0xb7fde7e0
jmp dword ptr [ebx+0x14]	
START: 0xb7ff3900
sub esp, 0x1c	
mov dword ptr [esp+0x18], edi	
mov edi, dword ptr [esp+0x24]	
mov ecx, dword ptr [esp+0x20]	
mov dword ptr [esp+0x14], esi	
mov dword ptr [esp+0x10], ebx	
mov eax, edi	
mov esi, edi	
or eax, ecx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff3922
add ebx, 0xb6d2	
imul esi, ecx	
cmp eax, 0xffff	
jbe 0xb7ff3944	
test edi, edi	
jz 0xb7ff3944	
xor edx, edx	
mov eax, esi	
div edi	
mov edi, eax	
xor eax, eax	
cmp edi, ecx	
jnz 0xb7ff394c	
START: 0xb7ff3944
mov dword ptr [esp], esi	
call 0xb7fde7d0	.plt
START: 0xb7fde7d0
jmp dword ptr [ebx+0x10]	
START: 0xb7ff38d0
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff38d6
add ebx, 0xb71e	
sub esp, 0x18	
mov eax, dword ptr [esp+0x20]	
mov dword ptr [esp], 0x8	
mov dword ptr [esp+0x4], eax	
call 0xb7fde7c0	.plt
START: 0xb7fde7c0
jmp dword ptr [ebx+0xc]	
START: 0xb7ff37c0
sub esp, 0x2c	
mov dword ptr [esp+0x20], ebx	
mov eax, dword ptr [esp+0x30]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff37d0
add ebx, 0xb824	
mov dword ptr [esp+0x24], esi	
mov esi, dword ptr [esp+0x34]	
mov dword ptr [esp+0x28], edi	
mov ecx, dword ptr [ebx+0x8e8]	
mov edx, dword ptr [ebx+0x8ec]	
test ecx, ecx	
jz 0xb7ff3898	
lea edx, ptr [edx+eax*1-0x1]	
neg eax	
and edx, eax	
lea eax, ptr [edx+esi*1]	
cmp eax, ecx	
mov dword ptr [ebx+0x8ec], edx	
jnb 0xb7ff3813	
mov ecx, edx	
neg ecx	
cmp esi, ecx	
jb 0xb7ff3878	
START: 0xb7ff3898
mov edi, dword ptr [ebx-0x344]	
lea edx, ptr [ebx+0x924]	
lea ecx, ptr [edi+edx*1-0x1]	
neg edi	
and ecx, edi	
mov dword ptr [ebx+0x8e8], ecx	
jmp 0xb7ff37f6	
START: 0xb7ff37f6
lea edx, ptr [edx+eax*1-0x1]	
neg eax	
and edx, eax	
lea eax, ptr [edx+esi*1]	
cmp eax, ecx	
mov dword ptr [ebx+0x8ec], edx	
jnb 0xb7ff3813	
mov ecx, edx	
neg ecx	
cmp esi, ecx	
jb 0xb7ff3878	
mov eax, dword ptr [ebx-0x344]	
mov edx, eax	
lea edi, ptr [eax+esi*1-0x1]	
neg edx	
and edi, edx	
jz 0xb7ff38bc	
START: 0xb7ff3878
mov dword ptr [ebx+0x8f0], edx	
mov dword ptr [ebx+0x8ec], eax	
mov eax, edx	
mov ebx, dword ptr [esp+0x20]	
mov esi, dword ptr [esp+0x24]	
mov edi, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb7ff38f3
add esp, 0x18	
pop ebx	
ret 	
START: 0xb7ff394c
mov ebx, dword ptr [esp+0x10]	
mov esi, dword ptr [esp+0x14]	
mov edi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb7fe8e20
mov edx, dword ptr [esp+0x18]	
mov ecx, dword ptr [esp+0x1c]	
test eax, eax	
mov esi, eax	
jz 0xb7fe8fe0	
lea edx, ptr [eax+edx*1+0x258]	
add ecx, 0x1	
mov dword ptr [eax+0x164], edx	
mov dword ptr [esi+0x14], eax	
lea eax, ptr [edx+0x4]	
mov dword ptr [esi+0x1c], eax	
lea eax, ptr [edx+0x10]	
mov dword ptr [esp+0x8], ecx	
mov ecx, dword ptr [esp+0x20]	
mov dword ptr [esp+0x18], edx	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x4], ecx	
call 0xb7ff6a30	realloc
START: 0xb7ff6a30
mov eax, edi	
mov edi, dword ptr [esp+0x4]	
mov edx, esi	
mov esi, dword ptr [esp+0x8]	
mov ecx, edi	
xor ecx, esi	
and ecx, 0x3	
mov ecx, dword ptr [esp+0xc]	
cld 	
jnz 0xb7ff6a86	
cmp ecx, 0x3	
jbe 0xb7ff6a86	
test esi, 0x3	
jz 0xb7ff6a6d	
START: 0xb7ff6a86
shr ecx, 0x1	
jnb 0xb7ff6a8b	
movsb byte ptr [edi], byte ptr [esi]	
shr ecx, 0x1	
jnb 0xb7ff6a91	
movsw word ptr [edi], word ptr [esi]	
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff6a91
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff6a93
jmp 0xb7ff6a7d	
START: 0xb7ff6a7d
mov edi, eax	
mov esi, edx	
mov eax, dword ptr [esp+0x4]	
ret 	
START: 0xb7fe8e66
mov edx, dword ptr [esp+0x18]	
mov dword ptr [edx+0xc], 0x1	
mov dword ptr [edx+0x4], eax	
mov eax, dword ptr [esp+0x24]	
movzx edx, byte ptr [esp+0x2c]	
mov dword ptr [esi+0x4], eax	
movzx eax, byte ptr [esi+0x194]	
and edx, 0x3	
and eax, 0xfffffffc	
or eax, edx	
mov byte ptr [esi+0x194], al	
test byte ptr [ebx-0x353], 0x1	
jz 0xb7fe9040	
mov edx, dword ptr [esp+0x58]	
test ebp, ebp	
mov dword ptr [esi+0x16c], edi	
mov dword ptr [esi+0x18], edx	
jz 0xb7fe8ec6	
xor eax, eax	
lea esi, ptr [esi]	
mov dword ptr [esi+eax*8+0x258], esi	
add eax, 0x1	
cmp eax, ebp	
jnz 0xb7fe8eb8	
START: 0xb7fe9040
mov dword ptr [esi+0x1fc], 0x1	
jmp 0xb7fe8ea2	
START: 0xb7fe8ea2
mov edx, dword ptr [esp+0x58]	
test ebp, ebp	
mov dword ptr [esi+0x16c], edi	
mov dword ptr [esi+0x18], edx	
jz 0xb7fe8ec6	
xor eax, eax	
lea esi, ptr [esi]	
mov dword ptr [esi+eax*8+0x258], esi	
add eax, 0x1	
cmp eax, ebp	
jnz 0xb7fe8eb8	
lea eax, ptr [esi+0x1b8]	
xor edx, edx	
mov dword ptr [esi+0x1cc], eax	
imul eax, dword ptr [esp+0x58], 0x4c	
mov dword ptr [esi+0x1c8], 0x4	
mov eax, dword ptr [ebx+eax*1+0x2c]	
test eax, eax	
jz 0xb7fe8efb	
START: 0xb7fe8eb8
mov dword ptr [esi+eax*8+0x258], esi	
add eax, 0x1	
cmp eax, ebp	
jnz 0xb7fe8eb8	
lea eax, ptr [esi+0x1b8]	
xor edx, edx	
mov dword ptr [esi+0x1cc], eax	
imul eax, dword ptr [esp+0x58], 0x4c	
mov dword ptr [esi+0x1c8], 0x4	
mov eax, dword ptr [ebx+eax*1+0x2c]	
test eax, eax	
jz 0xb7fe8efb	
add eax, 0x15c	
mov dl, 0x1	
mov dword ptr [esi+0x1b8], eax	
test edi, edi	
jnz 0xb7fe8f0a	
START: 0xb7fe8efb
test edi, edi	
jnz 0xb7fe8f0a	
jmp 0xb7fe904f	
START: 0xb7fe904f
mov edi, esi	
xor eax, eax	
test edx, edx	
lea ecx, ptr [edi+0x15c]	
jz 0xb7fe8f24	
jmp 0xb7fe9018	
START: 0xb7fe8f24
mov dword ptr [esi+eax*1+0x1b8], ecx	
lea eax, ptr [esi+0x15c]	
mov dword ptr [esi+0x1d0], eax	
mov eax, dword ptr [esp+0x24]	
movzx edx, byte ptr [eax]	
test dl, dl	
jz 0xb7fe8fe0	
mov dword ptr [esp], eax	
mov byte ptr [esp+0x18], dl	
call 0xb7ff62e0	realloc
START: 0xb7fe8fe0
add esp, 0x3c	
mov eax, esi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0xc	
START: 0xb7fe0239
sub esp, 0xc	
test eax, eax	
mov dword ptr [ebp-0x7c], eax	
jz 0xb7fe22ec	
mov eax, dword ptr [ebp-0x7c]	
mov edx, dword ptr [ebp+0x8]	
movzx ecx, word ptr [ebp+0xc]	
mov esi, dword ptr [ebp+0x10]	
mov edi, dword ptr [ebp-0x7c]	
mov dword ptr [eax+0x150], edx	
xor edx, edx	
mov word ptr [eax+0x158], cx	
mov eax, dword ptr [esi]	
mov dword ptr [edi+0x154], eax	
mov eax, edi	
call 0xb7fe8d10	_dl_rtld_di_serinfo
START: 0xb7fe8d10
sub esp, 0x2c	
mov dword ptr [esp+0x1c], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe8d1c
add ebx, 0x162d8	
mov dword ptr [esp+0x24], edi	
mov dword ptr [esp+0x28], ebp	
mov ebp, edx	
mov dword ptr [esp+0x20], esi	
mov esi, eax	
lea edi, ptr [ebx+0x508]	
mov dword ptr [esp], edi	
call dword ptr [ebx+0x820]	
START: 0xb7fdf240
mov eax, dword ptr [esp+0x4]	
add dword ptr [eax+0x4], 0x1	
ret 	
START: 0xb7fe8d41
imul eax, ebp, 0x4c	
lea eax, ptr [ebx+eax*1+0x2c]	
mov ecx, dword ptr [eax]	
test ecx, ecx	
jnz 0xb7fe8d5a	
jmp 0xb7fe8db9	
START: 0xb7fe8db9
mov dword ptr [eax], esi	
jmp 0xb7fe8d67	
START: 0xb7fe8d67
imul edx, ebp, 0x4c	
mov eax, dword ptr [ebx+0x520]	
mov dword ptr [esp], edi	
add dword ptr [ebx+edx*1+0x30], 0x1	
mov edx, dword ptr [ebx+0x524]	
mov dword ptr [esi+0x250], eax	
add eax, 0x1	
mov dword ptr [esi+0x254], edx	
adc edx, 0x0	
mov dword ptr [ebx+0x520], eax	
mov dword ptr [ebx+0x524], edx	
call dword ptr [ebx+0x824]	
START: 0xb7fdf250
mov eax, dword ptr [esp+0x4]	
sub dword ptr [eax+0x4], 0x1	
ret 	
START: 0xb7fe8da5
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb7fe0275
cmp dword ptr [ebx+0x2c], edi	
jnz 0xb7fe2316	
mov byte ptr [ebp-0x98], 0x0	
mov eax, dword ptr [ebp-0x7c]	
mov ecx, dword ptr [ebp+0xc]	
add dword ptr [eax+0x190], 0x1	
shl ecx, 0x5	
add ecx, dword ptr [ebp+0x8]	
cmp dword ptr [ebp+0x8], ecx	
mov dword ptr [eax+0x1b0], 0x0	
mov dword ptr [eax+0x1b4], 0x0	
mov dword ptr [eax+0x1ac], 0xffffffff	
jnb 0xb7fe2881	
mov edx, dword ptr [ebx-0x344]	
lea esi, ptr [ebx+0x864]	
lea edi, ptr [ebx+0x870]	
mov eax, dword ptr [ebp+0x8]	
mov byte ptr [ebp-0x9c], 0x0	
mov dword ptr [ebp-0x80], esi	
neg edx	
mov dword ptr [ebp-0x88], edx	
mov edx, dword ptr [ebp-0x7c]	
mov dword ptr [ebp-0xa8], edi	
jmp 0xb7fe031a	
START: 0xb7fe031a
mov esi, dword ptr [eax]	
cmp esi, 0x6	
jz 0xb7fe04d2	
jbe 0xb7fe02f4	
cmp esi, 0x6474e551	
jz 0xb7fe04c4	
START: 0xb7fe04d2
mov esi, dword ptr [ebp+0x8]	
sub esi, dword ptr [eax+0x8]	
mov dword ptr [edx], esi	
jmp 0xb7fe030f	
START: 0xb7fe030f
add eax, 0x20	
cmp eax, ecx	
jnb 0xb7fe039f	
mov esi, dword ptr [eax]	
cmp esi, 0x6	
jz 0xb7fe04d2	
jbe 0xb7fe02f4	
START: 0xb7fe02f4
cmp esi, 0x2	
jz 0xb7fe055c	
cmp esi, 0x3	
jz 0xb7fe052e	
cmp esi, 0x1	
jz 0xb7fe04df	
START: 0xb7fe052e
mov edi, dword ptr [ebp-0x80]	
mov esi, dword ptr [eax+0x8]	
add esi, dword ptr [edx]	
mov dword ptr [ebx+0x564], edi	
mov edi, dword ptr [ebx+0x550]	
mov dword ptr [ebx+0x864], esi	
test edi, edi	
jz 0xb7fe1554	
mov byte ptr [ebp-0x9c], 0x1	
jmp 0xb7fe030f	
START: 0xb7fe04df
mov edi, dword ptr [eax+0x8]	
mov esi, dword ptr [ebp-0x88]	
and esi, edi	
add esi, dword ptr [edx]	
cmp esi, dword ptr [edx+0x1ac]	
jnb 0xb7fe04fa	
mov dword ptr [edx+0x1ac], esi	
add edi, dword ptr [eax+0x14]	
add edi, dword ptr [edx]	
cmp edi, dword ptr [edx+0x1b0]	
jbe 0xb7fe050d	
mov dword ptr [edx+0x1b0], edi	
test byte ptr [eax+0x18], 0x1	
jz 0xb7fe030f	
START: 0xb7fe0517
cmp edi, dword ptr [edx+0x1b4]	
jbe 0xb7fe030f	
mov dword ptr [edx+0x1b4], edi	
jmp 0xb7fe030f	
START: 0xb7fe04fa
add edi, dword ptr [eax+0x14]	
add edi, dword ptr [edx]	
cmp edi, dword ptr [edx+0x1b0]	
jbe 0xb7fe050d	
mov dword ptr [edx+0x1b0], edi	
test byte ptr [eax+0x18], 0x1	
jz 0xb7fe030f	
cmp edi, dword ptr [edx+0x1b4]	
jbe 0xb7fe030f	
START: 0xb7fe055c
mov esi, dword ptr [eax+0x8]	
add esi, dword ptr [edx]	
mov dword ptr [edx+0x8], esi	
jmp 0xb7fe030f	
START: 0xb7fe0327
cmp esi, 0x6474e551	
jz 0xb7fe04c4	
cmp esi, 0x6474e552	
jz 0xb7fe04ad	
cmp esi, 0x7	
jnz 0xb7fe030f	
START: 0xb7fe04c4
mov esi, dword ptr [eax+0x18]	
mov dword ptr [ebx+0x82c], esi	
jmp 0xb7fe030f	
START: 0xb7fe04ad
mov esi, dword ptr [eax+0x8]	
mov dword ptr [edx+0x248], esi	
mov esi, dword ptr [eax+0x14]	
mov dword ptr [edx+0x24c], esi	
jmp 0xb7fe030f	
START: 0xb7fe039f
mov eax, dword ptr [ebp-0x7c]	
mov edx, dword ptr [eax+0x1b0]	
mov eax, dword ptr [eax+0x1b4]	
mov esi, dword ptr [ebp-0x7c]	
mov ecx, dword ptr [esi+0x22c]	
test ecx, ecx	
jz 0xb7fe03c3	
add ecx, dword ptr [esi]	
mov dword ptr [esi+0x22c], ecx	
test edx, edx	
jnz 0xb7fe03d4	
mov edi, dword ptr [ebp-0x7c]	
mov dword ptr [edi+0x1b0], 0xffffffff	
test eax, eax	
jnz 0xb7fe03e5	
START: 0xb7fe03c3
test edx, edx	
jnz 0xb7fe03d4	
mov edi, dword ptr [ebp-0x7c]	
mov dword ptr [edi+0x1b0], 0xffffffff	
test eax, eax	
jnz 0xb7fe03e5	
mov eax, dword ptr [ebp-0x7c]	
mov dword ptr [eax+0x1b4], 0xffffffff	
mov eax, dword ptr [ebx+0x564]	
test eax, eax	
jz 0xb7fe152f	
START: 0xb7fe03d4
test eax, eax	
jnz 0xb7fe03e5	
mov eax, dword ptr [ebp-0x7c]	
mov dword ptr [eax+0x1b4], 0xffffffff	
mov eax, dword ptr [ebx+0x564]	
test eax, eax	
jz 0xb7fe152f	
mov eax, dword ptr [ebx+0x5a0]	
test eax, eax	
jz 0xb7fe0425	
START: 0xb7fe03e5
mov eax, dword ptr [ebx+0x564]	
test eax, eax	
jz 0xb7fe152f	
mov eax, dword ptr [ebx+0x5a0]	
test eax, eax	
jz 0xb7fe0425	
mov edx, dword ptr [ebx+0x57c]	
mov edi, dword ptr [ebx+0x564]	
mov esi, dword ptr [edx+0x4]	
add esi, dword ptr [eax+0x4]	
mov dword ptr [esp+0x4], esi	
mov eax, dword ptr [edi]	
mov dword ptr [esp], eax	
call 0xb7ff6220	realloc
START: 0xb7ff6220
mov ecx, dword ptr [esp+0x4]	
mov edx, dword ptr [esp+0x8]	
mov al, byte ptr [ecx]	
cmp al, byte ptr [edx]	
jnz 0xb7ff6237	
inc ecx	
inc edx	
test al, al	
jnz 0xb7ff6228	
xor eax, eax	
ret 	
START: 0xb7ff6237
mov eax, 0x1	
mov ecx, 0xffffffff	
cmovb eax, ecx	
ret 	
START: 0xb7fe041d
test eax, eax	
jnz 0xb7fe10db	
test byte ptr [ebx+0x6dc], 0x4	
jz 0xb7fe1116	
cmp byte ptr [ebp-0x98], 0x0	
jnz 0xb7fe06a5	
START: 0xb7fe10db
mov dword ptr [ebx+0x880], 0x0	
mov eax, dword ptr [edi+0x4]	
mov dword ptr [ebx+0x87c], esi	
mov dword ptr [ebx+0x884], 0x1	
test eax, eax	
jnz 0xb7fe26f1	
lea eax, ptr [ebx+0x87c]	
mov dword ptr [edi+0x4], eax	
test byte ptr [ebx+0x6dc], 0x4	
jnz 0xb7fe0432	
lea eax, ptr [ebx-0x7246]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [ebx-0x758d]	
mov dword ptr [esp+0x4], eax	
lea eax, ptr [ebx-0x5c10]	
mov dword ptr [esp+0x8], 0x518	
mov dword ptr [esp], eax	
call 0xb7ff39d0	free
START: 0xb7fe0432
cmp byte ptr [ebp-0x98], 0x0	
jnz 0xb7fe06a5	
mov eax, dword ptr [ebp-0x7c]	
mov ecx, dword ptr [eax+0x8]	
test ecx, ecx	
jz 0xb7fe069d	
mov edi, eax	
mov eax, dword ptr [ecx]	
add edi, 0x20	
test eax, eax	
jz 0xb7fe0569	
START: 0xb7fe045c
lea esi, ptr [ecx+0x8]	
mov edx, ecx	
mov dword ptr [ebp-0x90], esi	
jmp 0xb7fe0489	
START: 0xb7fe0489
cmp eax, 0x21	
jbe 0xb7fe0469	
mov esi, 0x6fffffff	
sub esi, eax	
cmp esi, 0xf	
jnbe 0xb7fe11b8	
mov esi, 0x70000029	
sub esi, eax	
mov eax, dword ptr [ebp-0x7c]	
mov dword ptr [eax+esi*4], edx	
jmp 0xb7fe0470	
START: 0xb7fe0469
mov esi, dword ptr [ebp-0x7c]	
mov dword ptr [esi+eax*4+0x20], edx	
mov esi, dword ptr [ebp-0x90]	
add edx, 0x8	
mov eax, edx	
sub eax, ecx	
mov eax, dword ptr [esi+eax*1-0x8]	
test eax, eax	
jz 0xb7fe0569	
cmp eax, 0x21	
jbe 0xb7fe0469	
mov esi, 0x6fffffff	
sub esi, eax	
cmp esi, 0xf	
jnbe 0xb7fe11b8	
START: 0xb7fe11b8
lea esi, ptr [eax+eax*1]	
sar esi, 0x1	
cmp esi, 0xfffffffc	
jbe 0xb7fe1428	
not esi	
mov dword ptr [edi+esi*4+0xc8], edx	
jmp 0xb7fe0470	
START: 0xb7fe1428
mov esi, 0x6ffffdff	
sub esi, eax	
cmp esi, 0xb	
jnbe 0xb7fe1510	
add eax, 0x100001cc	
neg eax	
mov dword ptr [edi+eax*4], edx	
jmp 0xb7fe0470	
START: 0xb7fe1510
mov esi, 0x6ffffeff	
sub esi, eax	
cmp esi, 0xa	
jnbe 0xb7fe0470	
add eax, 0x100000c0	
neg eax	
mov dword ptr [edi+eax*4], edx	
jmp 0xb7fe0470	
START: 0xb7fe0470
mov esi, dword ptr [ebp-0x90]	
add edx, 0x8	
mov eax, edx	
sub eax, ecx	
mov eax, dword ptr [esi+eax*1-0x8]	
test eax, eax	
jz 0xb7fe0569	
cmp eax, 0x21	
jbe 0xb7fe0469	
mov esi, 0x6fffffff	
sub esi, eax	
cmp esi, 0xf	
jnbe 0xb7fe11b8	
START: 0xb7fe049e
mov esi, 0x70000029	
sub esi, eax	
mov eax, dword ptr [ebp-0x7c]	
mov dword ptr [eax+esi*4], edx	
jmp 0xb7fe0470	
START: 0xb7fe0569
mov edi, dword ptr [ebp-0x7c]	
mov eax, dword ptr [edi]	
test eax, eax	
jz 0xb7fe05ea	
mov edx, dword ptr [edi+0x30]	
test edx, edx	
jz 0xb7fe057c	
add dword ptr [edx+0x4], eax	
mov ecx, dword ptr [ebp-0x7c]	
mov edx, dword ptr [ecx+0x2c]	
test edx, edx	
jz 0xb7fe0589	
START: 0xb7fe05ea
mov edi, dword ptr [ebp-0x7c]	
mov eax, dword ptr [edi+0x70]	
test eax, eax	
jz 0xb7fe0600	
mov eax, dword ptr [eax+0x4]	
cmp eax, 0x7	
jnz 0xb7fe2537	
mov eax, dword ptr [ebp-0x7c]	
mov esi, dword ptr [eax+0x3c]	
test esi, esi	
jz 0xb7fe0617	
START: 0xb7fe2537
cmp eax, 0x11	
jz 0xb7fe0600	
jmp 0xb7fe205b	
START: 0xb7fe0600
mov eax, dword ptr [ebp-0x7c]	
mov esi, dword ptr [eax+0x3c]	
test esi, esi	
jz 0xb7fe0617	
mov eax, dword ptr [eax+0x44]	
cmp dword ptr [eax+0x4], 0xc	
jnz 0xb7fe2891	
mov eax, dword ptr [ebp-0x7c]	
mov ecx, dword ptr [eax+0x64]	
test ecx, ecx	
jz 0xb7fe062e	
START: 0xb7fe0617
mov eax, dword ptr [ebp-0x7c]	
mov ecx, dword ptr [eax+0x64]	
test ecx, ecx	
jz 0xb7fe062e	
mov eax, dword ptr [eax+0x6c]	
cmp dword ptr [eax+0x4], 0x8	
jnz 0xb7fe28bb	
mov ecx, dword ptr [ebp-0x7c]	
mov eax, dword ptr [ecx+0x98]	
test eax, eax	
jz 0xb7fe0665	
START: 0xb7fe0665
mov edx, dword ptr [ebp-0x7c]	
mov eax, dword ptr [edx+0xb8]	
test eax, eax	
jz 0xb7fe0689	
mov edx, dword ptr [eax+0x4]	
mov ecx, dword ptr [ebp-0x7c]	
mov dword ptr [ecx+0x204], edx	
and edx, 0x1	
jz 0xb7fe0689	
mov dword ptr [ecx+0x80], eax	
mov eax, dword ptr [ebp-0x7c]	
mov edx, dword ptr [eax+0x94]	
test edx, edx	
jz 0xb7fe069d	
START: 0xb7fe0689
mov eax, dword ptr [ebp-0x7c]	
mov edx, dword ptr [eax+0x94]	
test edx, edx	
jz 0xb7fe069d	
mov dword ptr [eax+0x5c], 0x0	
mov eax, dword ptr [ebp-0x7c]	
call 0xb7fe8c30	_dl_rtld_di_serinfo
START: 0xb7fe069d
mov eax, dword ptr [ebp-0x7c]	
call 0xb7fe8c30	_dl_rtld_di_serinfo
START: 0xb7fe06a5
cmp dword ptr [ebp-0x2c], 0x2	
jz 0xb7fe276f	
mov ecx, dword ptr [ebx-0x1c8]	
test ecx, ecx	
jz 0xb7fe14ff	
lea edx, ptr [ebx-0x742f]	
mov ecx, 0x1	
mov eax, edx	
mov dword ptr [esp+0x8], 0x0	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp], 0x0	
call 0xb7fe8dc0	_dl_rtld_di_serinfo
START: 0xb7fe8ec6
lea eax, ptr [esi+0x1b8]	
xor edx, edx	
mov dword ptr [esi+0x1cc], eax	
imul eax, dword ptr [esp+0x58], 0x4c	
mov dword ptr [esi+0x1c8], 0x4	
mov eax, dword ptr [ebx+eax*1+0x2c]	
test eax, eax	
jz 0xb7fe8efb	
add eax, 0x15c	
mov dl, 0x1	
mov dword ptr [esi+0x1b8], eax	
test edi, edi	
jnz 0xb7fe8f0a	
jmp 0xb7fe904f	
START: 0xb7fe9018
mov edx, dword ptr [esi+0x1b8]	
cmp edx, ecx	
jz 0xb7fe8f2b	
test byte ptr [esp+0x54], 0x8	
jz 0xb7fe90eb	
mov dword ptr [esi+0x1bc], edx	
jmp 0xb7fe8f24	
START: 0xb7fe90eb
mov eax, 0x4	
jmp 0xb7fe8f24	
START: 0xb7fe06e6
sub esp, 0xc	
test eax, eax	
mov esi, eax	
jz 0xb7fe27e9	
mov edi, dword ptr [ebx-0x1c8]	
mov edx, dword ptr [edi+0x1c]	
add edx, edi	
mov dword ptr [eax+0x150], edx	
movzx eax, word ptr [edi+0x2c]	
test ax, ax	
mov word ptr [esi+0x158], ax	
jz 0xb7fe076d	
xor eax, eax	
jmp 0xb7fe073e	
START: 0xb7fe073e
mov ecx, eax	
shl ecx, 0x5	
add ecx, edx	
mov edx, dword ptr [ecx]	
cmp edx, 0x2	
jnz 0xb7fe0718	
mov edx, dword ptr [ecx+0x8]	
add eax, 0x1	
mov dword ptr [esi+0x8], edx	
mov edx, dword ptr [ecx+0x14]	
shr edx, 0x3	
mov word ptr [esi+0x15a], dx	
movzx edx, word ptr [esi+0x158]	
cmp edx, eax	
jnbe 0xb7fe0738	
mov edx, dword ptr [esi+0x8]	
mov dword ptr [esi+0x1ac], edi	
sub edi, dword ptr [esi]	
add dword ptr [esi+0x1b0], edi	
add dword ptr [esi+0x1b4], edi	
add edx, edi	
test edx, edx	
mov dword ptr [esi], edi	
mov dword ptr [esi+0x8], edx	
jz 0xb7fe0a7a	
START: 0xb7fe0718
cmp edx, 0x1	
jz 0xb7fe1045	
cmp edx, 0x7	
jz 0xb7fe27fa	
movzx edx, word ptr [esi+0x158]	
add eax, 0x1	
cmp edx, eax	
jbe 0xb7fe076d	
START: 0xb7fe1045
mov edx, dword ptr [esi]	
test edx, edx	
mov edx, dword ptr [ecx+0x8]	
jnz 0xb7fe1050	
mov dword ptr [esi], edx	
add edx, dword ptr [ecx+0x14]	
cmp edx, dword ptr [esi+0x1b0]	
jb 0xb7fe1061	
mov dword ptr [esi+0x1b0], edx	
test byte ptr [ecx+0x18], 0x1	
jz 0xb7fe072a	
START: 0xb7fe106b
cmp edx, dword ptr [esi+0x1b4]	
jb 0xb7fe072a	
mov dword ptr [esi+0x1b4], edx	
jmp 0xb7fe072a	
START: 0xb7fe072a
movzx edx, word ptr [esi+0x158]	
add eax, 0x1	
cmp edx, eax	
jbe 0xb7fe076d	
mov edx, dword ptr [esi+0x150]	
mov ecx, eax	
shl ecx, 0x5	
add ecx, edx	
mov edx, dword ptr [ecx]	
cmp edx, 0x2	
jnz 0xb7fe0718	
mov edx, dword ptr [ecx+0x8]	
add eax, 0x1	
mov dword ptr [esi+0x8], edx	
mov edx, dword ptr [ecx+0x14]	
shr edx, 0x3	
mov word ptr [esi+0x15a], dx	
movzx edx, word ptr [esi+0x158]	
cmp edx, eax	
jnbe 0xb7fe0738	
START: 0xb7fe0738
mov edx, dword ptr [esi+0x150]	
mov ecx, eax	
shl ecx, 0x5	
add ecx, edx	
mov edx, dword ptr [ecx]	
cmp edx, 0x2	
jnz 0xb7fe0718	
mov edx, dword ptr [ecx+0x8]	
add eax, 0x1	
mov dword ptr [esi+0x8], edx	
mov edx, dword ptr [ecx+0x14]	
shr edx, 0x3	
mov word ptr [esi+0x15a], dx	
movzx edx, word ptr [esi+0x158]	
cmp edx, eax	
jnbe 0xb7fe0738	
mov edx, dword ptr [esi+0x8]	
mov dword ptr [esi+0x1ac], edi	
sub edi, dword ptr [esi]	
add dword ptr [esi+0x1b0], edi	
add dword ptr [esi+0x1b4], edi	
add edx, edi	
test edx, edx	
mov dword ptr [esi], edi	
mov dword ptr [esi+0x8], edx	
jz 0xb7fe0a7a	
START: 0xb7fe076d
mov edx, dword ptr [esi+0x8]	
mov dword ptr [esi+0x1ac], edi	
sub edi, dword ptr [esi]	
add dword ptr [esi+0x1b0], edi	
add dword ptr [esi+0x1b4], edi	
add edx, edi	
test edx, edx	
mov dword ptr [esi], edi	
mov dword ptr [esi+0x8], edx	
jz 0xb7fe0a7a	
mov eax, dword ptr [edx]	
lea ecx, ptr [esi+0x20]	
mov dword ptr [ebp-0x90], ecx	
test eax, eax	
jz 0xb7fe07e4	
mov edi, 0x8	
jmp 0xb7fe07b8	
START: 0xb7fe07b8
cmp eax, 0x21	
jbe 0xb7fe07a9	
mov ecx, 0x6fffffff	
sub ecx, eax	
cmp ecx, 0xf	
jnbe 0xb7fe1082	
mov ecx, 0x70000029	
sub ecx, eax	
mov dword ptr [esi+ecx*4], edx	
add edx, 0x8	
mov eax, dword ptr [edx+edi*1-0x8]	
test eax, eax	
jnz 0xb7fe07b8	
START: 0xb7fe07a9
mov dword ptr [esi+eax*4+0x20], edx	
add edx, 0x8	
mov eax, dword ptr [edx+edi*1-0x8]	
test eax, eax	
jz 0xb7fe07e2	
cmp eax, 0x21	
jbe 0xb7fe07a9	
mov ecx, 0x6fffffff	
sub ecx, eax	
cmp ecx, 0xf	
jnbe 0xb7fe1082	
START: 0xb7fe07cd
mov ecx, 0x70000029	
sub ecx, eax	
mov dword ptr [esi+ecx*4], edx	
add edx, 0x8	
mov eax, dword ptr [edx+edi*1-0x8]	
test eax, eax	
jnz 0xb7fe07b8	
mov edi, dword ptr [esi]	
test edi, edi	
jz 0xb7fe09e6	
mov edx, dword ptr [esi+0x30]	
xor eax, eax	
test edx, edx	
jz 0xb7fe0816	
START: 0xb7fe07e2
mov edi, dword ptr [esi]	
test edi, edi	
jz 0xb7fe09e6	
mov edx, dword ptr [esi+0x30]	
xor eax, eax	
test edx, edx	
jz 0xb7fe0816	
mov eax, dword ptr [edx]	
mov dword ptr [ebx-0x154], eax	
mov eax, dword ptr [edx+0x4]	
add eax, edi	
mov dword ptr [ebx-0x150], eax	
lea eax, ptr [ebx-0x154]	
mov dword ptr [esi+0x30], eax	
mov eax, 0x1	
mov edx, dword ptr [esi+0x2c]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe084e	
START: 0xb7fe084e
mov edx, dword ptr [esi+0x34]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe0886	
mov edx, dword ptr [edx]	
lea ecx, ptr [ebx+eax*8-0x154]	
add eax, 0x1	
mov dword ptr [ebp-0x88], ecx	
mov dword ptr [ecx], edx	
mov ecx, dword ptr [ebp-0x90]	
mov edx, edi	
add edx, dword ptr [ecx+0x4]	
mov ecx, dword ptr [ebp-0x88]	
mov dword ptr [ecx+0x4], edx	
mov dword ptr [esi+0x34], ecx	
mov edx, dword ptr [esi+0x38]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe08be	
mov edx, dword ptr [edx]	
lea ecx, ptr [ebx+eax*8-0x154]	
add eax, 0x1	
mov dword ptr [ebp-0x88], ecx	
mov dword ptr [ecx], edx	
mov ecx, dword ptr [ebp-0x90]	
mov edx, edi	
add edx, dword ptr [ecx+0x4]	
mov ecx, dword ptr [ebp-0x88]	
mov dword ptr [ecx+0x4], edx	
mov dword ptr [esi+0x38], ecx	
mov edx, dword ptr [esi+0x3c]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe08f6	
START: 0xb7fe08f6
mov edx, dword ptr [esi+0x64]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe092e	
mov edx, dword ptr [edx]	
lea ecx, ptr [ebx+eax*8-0x154]	
add eax, 0x1	
mov dword ptr [ebp-0x88], ecx	
mov dword ptr [ecx], edx	
mov ecx, dword ptr [ebp-0x90]	
mov edx, edi	
add edx, dword ptr [ecx+0x4]	
mov ecx, dword ptr [ebp-0x88]	
mov dword ptr [ecx+0x4], edx	
mov dword ptr [esi+0x64], ecx	
mov edx, dword ptr [esi+0x7c]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe0966	
mov edx, dword ptr [edx]	
lea ecx, ptr [ebx+eax*8-0x154]	
add eax, 0x1	
mov dword ptr [ebp-0x88], ecx	
mov dword ptr [ecx], edx	
mov ecx, dword ptr [ebp-0x90]	
mov edx, edi	
add edx, dword ptr [ecx+0x4]	
mov ecx, dword ptr [ebp-0x88]	
mov dword ptr [ecx+0x4], edx	
mov dword ptr [esi+0x7c], ecx	
mov edx, dword ptr [esi+0xe4]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe09a4	
START: 0xb7fe092e
mov edx, dword ptr [esi+0x7c]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe0966	
mov edx, dword ptr [edx]	
lea ecx, ptr [ebx+eax*8-0x154]	
add eax, 0x1	
mov dword ptr [ebp-0x88], ecx	
mov dword ptr [ecx], edx	
mov ecx, dword ptr [ebp-0x90]	
mov edx, edi	
add edx, dword ptr [ecx+0x4]	
mov ecx, dword ptr [ebp-0x88]	
mov dword ptr [ecx+0x4], edx	
mov dword ptr [esi+0x7c], ecx	
mov edx, dword ptr [esi+0xe4]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe09a4	
mov edx, dword ptr [edx]	
lea ecx, ptr [ebx+eax*8-0x154]	
add eax, 0x1	
mov dword ptr [ebp-0x88], ecx	
mov dword ptr [ecx], edx	
mov ecx, dword ptr [ebp-0x90]	
mov edx, edi	
add edx, dword ptr [ecx+0x4]	
mov ecx, dword ptr [ebp-0x88]	
mov dword ptr [ecx+0x4], edx	
mov dword ptr [esi+0xe4], ecx	
mov edx, dword ptr [esi+0x14c]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe09e6	
START: 0xb7fe0966
mov edx, dword ptr [esi+0xe4]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe09a4	
mov edx, dword ptr [edx]	
lea ecx, ptr [ebx+eax*8-0x154]	
add eax, 0x1	
mov dword ptr [ebp-0x88], ecx	
mov dword ptr [ecx], edx	
mov ecx, dword ptr [ebp-0x90]	
mov edx, edi	
add edx, dword ptr [ecx+0x4]	
mov ecx, dword ptr [ebp-0x88]	
mov dword ptr [ecx+0x4], edx	
mov dword ptr [esi+0xe4], ecx	
mov edx, dword ptr [esi+0x14c]	
test edx, edx	
mov dword ptr [ebp-0x90], edx	
jz 0xb7fe09e6	
mov edx, dword ptr [edx]	
lea ecx, ptr [ebx+eax*8-0x154]	
mov dword ptr [ebp-0x88], ecx	
mov dword ptr [ecx], edx	
mov ecx, dword ptr [ebp-0x90]	
mov edx, dword ptr [ebp-0x88]	
add edi, dword ptr [ecx+0x4]	
cmp eax, 0x8	
mov dword ptr [edx+0x4], edi	
mov dword ptr [esi+0x14c], edx	
jz 0xb7fe271b	
START: 0xb7fe09e6
mov eax, dword ptr [esi+0x70]	
test eax, eax	
jz 0xb7fe09f9	
mov eax, dword ptr [eax+0x4]	
cmp eax, 0x7	
jnz 0xb7fe2052	
mov eax, dword ptr [esi+0x3c]	
test eax, eax	
jz 0xb7fe0a0d	
START: 0xb7fe09f9
mov eax, dword ptr [esi+0x3c]	
test eax, eax	
jz 0xb7fe0a0d	
mov eax, dword ptr [esi+0x44]	
cmp dword ptr [eax+0x4], 0xc	
jnz 0xb7fe2891	
mov edi, dword ptr [esi+0x64]	
test edi, edi	
jz 0xb7fe0a21	
START: 0xb7fe0a0d
mov edi, dword ptr [esi+0x64]	
test edi, edi	
jz 0xb7fe0a21	
mov eax, dword ptr [esi+0x6c]	
cmp dword ptr [eax+0x4], 0x8	
jnz 0xb7fe28bb	
mov eax, dword ptr [esi+0x98]	
test eax, eax	
jz 0xb7fe0a4d	
START: 0xb7fe0a21
mov eax, dword ptr [esi+0x98]	
test eax, eax	
jz 0xb7fe0a4d	
mov edx, dword ptr [eax+0x4]	
test dl, 0x2	
mov dword ptr [esi+0x208], edx	
jz 0xb7fe0a3c	
mov dword ptr [esi+0x60], eax	
test dl, 0x4	
jz 0xb7fe0a44	
START: 0xb7fe0a4d
mov eax, dword ptr [esi+0xb8]	
test eax, eax	
jz 0xb7fe0a69	
mov edx, dword ptr [eax+0x4]	
mov dword ptr [esi+0x204], edx	
and edx, 0x1	
jnz 0xb7fe10c5	
mov ecx, dword ptr [esi+0x94]	
test ecx, ecx	
jz 0xb7fe0a7a	
START: 0xb7fe0a69
mov ecx, dword ptr [esi+0x94]	
test ecx, ecx	
jz 0xb7fe0a7a	
mov dword ptr [esi+0x5c], 0x0	
mov eax, esi	
call 0xb7fe8c30	_dl_rtld_di_serinfo
START: 0xb7fe0a7a
mov eax, esi	
call 0xb7fe8c30	_dl_rtld_di_serinfo
START: 0xb7fe8cb3
mov edx, dword ptr [eax+0x30]	
test edx, edx	
jz 0xb7fe8c9f	
mov edx, dword ptr [edx+0x4]	
mov ecx, dword ptr [edx]	
add edx, 0x8	
mov dword ptr [eax+0x18c], edx	
lea edx, ptr [edx+ecx*4]	
mov dword ptr [eax+0x178], ecx	
mov dword ptr [eax+0x188], edx	
jmp 0xb7fe8c9f	
START: 0xb7fe8c9f
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb7fe0a81
mov eax, dword ptr [esi+0x1d0]	
lea edx, ptr [esi+0x14]	
or byte ptr [esi+0x194], 0x4	
mov dword ptr [eax+0x4], 0x1	
mov dword ptr [eax], edx	
mov eax, dword ptr [esi+0x58]	
test eax, eax	
jz 0xb7fe0b0a	
mov edx, dword ptr [esi+0x34]	
mov edi, dword ptr [edx+0x4]	
add edi, dword ptr [eax+0x4]	
mov dword ptr [esp], edi	
call 0xb7ff62e0	realloc
START: 0xb7ff6311
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
xor edx, ecx	
and edx, 0x1010100	
jnz 0xb7ff6379	
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
START: 0xb7ff633b
xor edx, ecx	
and edx, 0x1010100	
jnz 0xb7ff6379	
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
xor edx, ecx	
and edx, 0x1010100	
jnz 0xb7ff6379	
START: 0xb7ff635f
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
xor edx, ecx	
and edx, 0x1010100	
jz 0xb7ff6311	
sub eax, 0x4	
sub ecx, 0xfefefeff	
cmp cl, 0x0	
jz 0xb7ff6396	
START: 0xb7fe0ab2
mov dword ptr [esp], eax	
mov dword ptr [ebp-0xcc], eax	
call 0xb7fde7d0	.plt
START: 0xb7fe0ac0
mov ecx, dword ptr [ebp-0xcc]	
test eax, eax	
mov edx, eax	
jz 0xb7fe114f	
mov eax, dword ptr [esi+0x1c]	
mov dword ptr [esp+0x8], ecx	
mov dword ptr [esp], edx	
mov dword ptr [ebp-0xd0], edx	
mov dword ptr [ebp-0x90], eax	
mov dword ptr [esp+0x4], edi	
call 0xb7ff6a30	realloc
START: 0xb7ff6a6d
push eax	
mov eax, ecx	
shr ecx, 0x2	
and eax, 0x3	
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff6a76
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff6a78
mov ecx, eax	
rep movsb byte ptr [edi], byte ptr [esi]	
START: 0xb7ff6a7a
rep movsb byte ptr [edi], byte ptr [esi]	
START: 0xb7ff6a7c
pop eax	
mov edi, eax	
mov esi, edx	
mov eax, dword ptr [esp+0x4]	
ret 	
START: 0xb7fe0aef
mov edx, dword ptr [ebx-0x354]	
mov ecx, dword ptr [ebp-0x90]	
test edx, edx	
mov edx, dword ptr [ebp-0xd0]	
mov dword ptr [ecx], eax	
jz 0xb7fe0b0a	
mov dword ptr [esi+0x4], edx	
xor edx, edx	
mov eax, esi	
call 0xb7fe8d10	_dl_rtld_di_serinfo
START: 0xb7fe0b0a
xor edx, edx	
mov eax, esi	
call 0xb7fe8d10	_dl_rtld_di_serinfo
START: 0xb7fe8d5a
mov eax, dword ptr [ecx+0xc]	
test eax, eax	
jnz 0xb7fe8d58	
mov dword ptr [esi+0x10], ecx	
mov dword ptr [ecx+0xc], esi	
imul edx, ebp, 0x4c	
mov eax, dword ptr [ebx+0x520]	
mov dword ptr [esp], edi	
add dword ptr [ebx+edx*1+0x30], 0x1	
mov edx, dword ptr [ebx+0x524]	
mov dword ptr [esi+0x250], eax	
add eax, 0x1	
mov dword ptr [esi+0x254], edx	
adc edx, 0x0	
mov dword ptr [ebx+0x520], eax	
mov dword ptr [ebx+0x524], edx	
call dword ptr [ebx+0x824]	
START: 0xb7fe0b13
mov eax, dword ptr [esi+0xc]	
test eax, eax	
jnz 0xb7fe199e	
mov eax, dword ptr [ebp-0x7c]	
cmp dword ptr [esi+0x10], eax	
jnz 0xb7fe19c8	
lea eax, ptr [ebx+0x548]	
mov dword ptr [esi+0x10], eax	
lea eax, ptr [ebx-0x1fe44]	
cmp dword ptr [ebx-0x1cc], eax	
lea edi, ptr [esi+0xc]	
mov dword ptr [ebx+0x554], esi	
mov dword ptr [ebp-0xa0], edi	
mov dword ptr [ebx-0x1c4], esi	
jz 0xb7fe1176	
START: 0xb7fe0b5a
call 0xb7ff3500	_dl_make_stack_executable
START: 0xb7ff3500
push ebp	
push edi	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff3509
add ebx, 0xbaeb	
sub esp, 0x20c	
mov edx, dword ptr [ebx-0x1c4]	
test edx, edx	
mov dword ptr [esp+0x24], edx	
jz 0xb7ff35f8	
movzx eax, word ptr [edx+0x158]	
mov ebp, dword ptr [edx+0x150]	
test eax, eax	
jz 0xb7ff35f8	
add eax, 0x1	
lea ecx, ptr [ebx-0x77f4]	
mov dword ptr [esp+0x20], eax	
mov dword ptr [esp+0x1c], 0x1	
mov dword ptr [esp+0x28], ecx	
jmp 0xb7ff356e	
START: 0xb7ff356e
cmp dword ptr [ebp], 0x4	
jnz 0xb7ff3558	
mov edx, dword ptr [esp+0x24]	
mov ecx, dword ptr [ebp+0x14]	
mov edi, dword ptr [ebp+0x8]	
add edi, dword ptr [edx]	
cmp ecx, 0xc	
mov dword ptr [esp+0x18], ecx	
mov esi, edi	
jbe 0xb7ff3558	
mov dword ptr [esp+0x2c], ebp	
mov ebp, dword ptr [esp+0x28]	
jmp 0xb7ff35ba	
START: 0xb7ff3558
add dword ptr [esp+0x1c], 0x1	
add ebp, 0x20	
mov edx, dword ptr [esp+0x20]	
cmp dword ptr [esp+0x1c], edx	
jz 0xb7ff35f8	
cmp dword ptr [ebp], 0x4	
jnz 0xb7ff3558	
mov edx, dword ptr [esp+0x24]	
mov ecx, dword ptr [ebp+0x14]	
mov edi, dword ptr [ebp+0x8]	
add edi, dword ptr [edx]	
cmp ecx, 0xc	
mov dword ptr [esp+0x18], ecx	
mov esi, edi	
jbe 0xb7ff3558	
START: 0xb7ff358b
mov dword ptr [esp+0x2c], ebp	
mov ebp, dword ptr [esp+0x28]	
jmp 0xb7ff35ba	
START: 0xb7ff35ba
mov dword ptr [esp+0x8], 0x14	
mov dword ptr [esp+0x4], ebp	
mov dword ptr [esp], esi	
call 0xb7ff65e0	realloc
START: 0xb7ff65e0
push ebx	
mov eax, dword ptr [esp+0x8]	
mov edx, dword ptr [esp+0xc]	
mov ecx, dword ptr [esp+0x10]	
cmp ecx, 0x1	
jnz 0xb7ff6604	
movzx ecx, byte ptr [eax]	
cmp cl, byte ptr [edx]	
jnz 0xb7ff65fd	
xor eax, eax	
pop ebx	
ret 	
START: 0xb7ff6604
jl 0xb7ff65f9	
push esi	
mov esi, eax	
cmp ecx, 0x20	
jnl 0xb7ff6820	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff6617
add ebx, 0x1269	
add ebx, dword ptr [ebx+ecx*4]	
add edx, ecx	
add esi, ecx	
jmp ebx	
START: 0xb7ff664c
mov eax, dword ptr [esi-0x14]	
mov ecx, dword ptr [edx-0x14]	
cmp eax, ecx	
jnz 0xb7ff6897	
mov eax, dword ptr [esi-0x10]	
mov ecx, dword ptr [edx-0x10]	
cmp eax, ecx	
jnz 0xb7ff6897	
mov eax, dword ptr [esi-0xc]	
mov ecx, dword ptr [edx-0xc]	
cmp eax, ecx	
jnz 0xb7ff6897	
START: 0xb7ff6676
mov eax, dword ptr [esi-0x8]	
mov ecx, dword ptr [edx-0x8]	
cmp eax, ecx	
jnz 0xb7ff6897	
mov eax, dword ptr [esi-0x4]	
mov ecx, dword ptr [edx-0x4]	
cmp eax, ecx	
jnz 0xb7ff6897	
pop esi	
xor eax, eax	
pop ebx	
ret 	
START: 0xb7ff35ce
test eax, eax	
jnz 0xb7ff3598	
mov esi, dword ptr [esi+0x14]	
add esp, 0x20c	
mov eax, esi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe0b5f
test eax, eax	
js 0xb7fe1194	
mov edx, dword ptr [ebx-0x350]	
test edx, edx	
jnz 0xb7fe2491	
cmp eax, 0x20617	
mov dword ptr [ebx-0x350], eax	
jle 0xb7fe24a4	
START: 0xb7fe0b86
mov eax, dword ptr [ebx-0x174]	
call 0xb7fe5d40	.text
START: 0xb7fe5d40
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe5d4b
add ebx, 0x192a9	
sub esp, 0x3c	
mov dword ptr [ebp-0x30], eax	
lea eax, ptr [ebx-0x100]	
mov edx, dword ptr [ebx-0x348]	
mov dword ptr [esp], eax	
mov eax, dword ptr [ebx-0x34c]	
lea ecx, ptr [ebx-0x104]	
call 0xb7ff2dc0	_dl_make_stack_executable
START: 0xb7ff2dc0
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff2dcb
add ebx, 0xc229	
sub esp, 0x5c	
mov dword ptr [ebp-0x40], eax	
mov dword ptr [ebp-0x44], ecx	
mov ecx, dword ptr [ebp-0x40]	
mov dword ptr [ebp-0x48], edx	
xor edx, edx	
mov eax, dword ptr [ebx-0x310]	
and eax, dword ptr [ebx-0x318]	
mov dword ptr [ebp-0x28], eax	
mov eax, dword ptr [ebx-0x30c]	
and eax, dword ptr [ebx-0x314]	
test ecx, ecx	
setnz dl	
mov dword ptr [ebp-0x30], edx	
mov ecx, eax	
or ecx, dword ptr [ebp-0x28]	
mov dword ptr [ebp-0x24], eax	
jz 0xb7ff2e5f	
xor edi, edi	
xor esi, esi	
nop 	
lea esi, ptr [esi]	
mov edx, dword ptr [ebp-0x24]	
mov ecx, edi	
mov eax, dword ptr [ebp-0x28]	
shrd eax, edx, cl	
shr edx, cl	
test cl, 0x20	
cmovnz eax, edx	
mov edx, 0xffffffff	
and eax, 0x1	
cmp eax, 0x1	
mov eax, 0xffffffff	
sbb dword ptr [ebp-0x30], 0xffffffff	
add esi, 0x1	
mov ecx, esi	
mov edi, esi	
shl eax, cl	
test cl, 0x20	
jz 0xb7ff2e51	
mov edx, eax	
xor eax, eax	
mov ecx, dword ptr [ebp-0x28]	
and ecx, eax	
mov eax, dword ptr [ebp-0x24]	
and eax, edx	
or eax, ecx	
jnz 0xb7ff2e18	
START: 0xb7ff2e51
mov ecx, dword ptr [ebp-0x28]	
and ecx, eax	
mov eax, dword ptr [ebp-0x24]	
and eax, edx	
or eax, ecx	
jnz 0xb7ff2e18	
mov esi, dword ptr [ebx-0x1c4]	
xor ecx, ecx	
mov dword ptr [ebp-0x38], esi	
mov eax, dword ptr [ebp-0x38]	
xor esi, esi	
test eax, eax	
jz 0xb7ff2f58	
mov edi, dword ptr [ebp-0x38]	
movzx eax, word ptr [edi+0x158]	
mov edx, dword ptr [edi+0x150]	
test eax, eax	
jz 0xb7ff2f58	
START: 0xb7ff2e18
mov edx, dword ptr [ebp-0x24]	
mov ecx, edi	
mov eax, dword ptr [ebp-0x28]	
shrd eax, edx, cl	
shr edx, cl	
test cl, 0x20	
cmovnz eax, edx	
mov edx, 0xffffffff	
and eax, 0x1	
cmp eax, 0x1	
mov eax, 0xffffffff	
sbb dword ptr [ebp-0x30], 0xffffffff	
add esi, 0x1	
mov ecx, esi	
mov edi, esi	
shl eax, cl	
test cl, 0x20	
jz 0xb7ff2e51	
mov edx, eax	
xor eax, eax	
mov ecx, dword ptr [ebp-0x28]	
and ecx, eax	
mov eax, dword ptr [ebp-0x24]	
and eax, edx	
or eax, ecx	
jnz 0xb7ff2e18	
mov esi, dword ptr [ebx-0x1c4]	
xor ecx, ecx	
mov dword ptr [ebp-0x38], esi	
mov eax, dword ptr [ebp-0x38]	
xor esi, esi	
test eax, eax	
jz 0xb7ff2f58	
START: 0xb7ff2e8f
mov dword ptr [ebp-0x20], edx	
add eax, 0x1	
lea edx, ptr [ebx-0x670e]	
mov dword ptr [ebp-0x34], eax	
mov dword ptr [ebp-0x2c], 0x1	
mov dword ptr [ebp-0x3c], edx	
jmp 0xb7ff2ec4	
START: 0xb7ff2ec4
mov ecx, dword ptr [ebp-0x20]	
cmp dword ptr [ecx], 0x4	
jnz 0xb7ff2eb0	
mov edx, dword ptr [ebp-0x20]	
mov edi, dword ptr [ebp-0x38]	
mov ecx, dword ptr [ecx+0x8]	
mov edx, dword ptr [edx+0x14]	
add ecx, dword ptr [edi]	
cmp edx, 0xc	
mov esi, ecx	
lea eax, ptr [ecx+0xc]	
mov dword ptr [ebp-0x1c], edx	
jnbe 0xb7ff2f11	
jmp 0xb7ff2eb0	
START: 0xb7ff2eb0
add dword ptr [ebp-0x2c], 0x1	
mov esi, dword ptr [ebp-0x34]	
add dword ptr [ebp-0x20], 0x20	
cmp dword ptr [ebp-0x2c], esi	
jz 0xb7ff2fae	
mov ecx, dword ptr [ebp-0x20]	
cmp dword ptr [ecx], 0x4	
jnz 0xb7ff2eb0	
mov edx, dword ptr [ebp-0x20]	
mov edi, dword ptr [ebp-0x38]	
mov ecx, dword ptr [ecx+0x8]	
mov edx, dword ptr [edx+0x14]	
add ecx, dword ptr [edi]	
cmp edx, 0xc	
mov esi, ecx	
lea eax, ptr [ecx+0xc]	
mov dword ptr [ebp-0x1c], edx	
jnbe 0xb7ff2f11	
START: 0xb7ff2f11
cmp dword ptr [esi+0x8], 0x2	
mov edi, dword ptr [esi]	
jnz 0xb7ff2ef0	
cmp edi, 0x4	
jnz 0xb7ff2ef0	
mov edx, dword ptr [ebp-0x3c]	
mov dword ptr [esp+0x8], 0x4	
mov dword ptr [esp], eax	
mov dword ptr [ebp-0x4c], ecx	
mov dword ptr [esp+0x4], edx	
call 0xb7ff65e0	realloc
START: 0xb7ff2ef0
mov eax, dword ptr [esi+0x4]	
add edi, 0x3	
add eax, 0x3	
and edi, 0xfffffffc	
and eax, 0xfffffffc	
lea eax, ptr [edi+eax*1+0xc]	
add esi, eax	
lea eax, ptr [esi+0xc]	
mov edx, eax	
sub edx, ecx	
cmp dword ptr [ebp-0x1c], edx	
jbe 0xb7ff2eb0	
cmp dword ptr [esi+0x8], 0x2	
mov edi, dword ptr [esi]	
jnz 0xb7ff2ef0	
cmp edi, 0x4	
jnz 0xb7ff2ef0	
START: 0xb7ff2f1e
mov edx, dword ptr [ebp-0x3c]	
mov dword ptr [esp+0x8], 0x4	
mov dword ptr [esp], eax	
mov dword ptr [ebp-0x4c], ecx	
mov dword ptr [esp+0x4], edx	
call 0xb7ff65e0	realloc
START: 0xb7ff6684
mov eax, dword ptr [esi-0x4]	
mov ecx, dword ptr [edx-0x4]	
cmp eax, ecx	
jnz 0xb7ff6897	
pop esi	
xor eax, eax	
pop ebx	
ret 	
START: 0xb7ff2f38
mov ecx, dword ptr [ebp-0x4c]	
test eax, eax	
mov eax, dword ptr [esi+0x4]	
jnz 0xb7ff2ef3	
cmp eax, 0xa	
jbe 0xb7ff2ef3	
mov ecx, dword ptr [esi+0x10]	
add esi, 0x18	
add dword ptr [ebp-0x30], ecx	
lea ecx, ptr [eax-0x8]	
nop 	
lea esi, ptr [esi]	
lea eax, ptr [ebx-0x6eef]	
mov dword ptr [ebp-0x4c], ecx	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp], eax	
call 0xb7ff5cb0	realloc
START: 0xb7ff5cb0
mov edx, ebx	
mov ecx, dword ptr [esp+0x8]	
mov ebx, dword ptr [esp+0x4]	
mov eax, 0x21	
int 0x80	
START: 0xb7ff5cc1
mov ebx, edx	
cmp eax, 0xfffff001	
jnb 0xb7ff5ccb	
ret 	
START: 0xb7ff5ccb
call 0xb7ff6ba7	realloc
START: 0xb7ff6ba7
mov ecx, dword ptr [esp]	
ret 	
START: 0xb7ff5cd0
add ecx, 0x9324	
xor edx, edx	
sub edx, eax	
mov dword ptr [ecx+0x90c], edx	
or eax, 0xffffffff	
jmp 0xb7ff5cca	
START: 0xb7ff5cca
ret 	
START: 0xb7ff2f71
mov ecx, dword ptr [ebp-0x4c]	
test eax, eax	
jnz 0xb7ff2fb4	
mov dword ptr [esp], 0x8	
call 0xb7fde7d0	.plt
START: 0xb7ff2fb4
mov edi, dword ptr [ebp-0x30]	
add edi, 0x1	
lea eax, ptr [edi*8+0x1e]	
and eax, 0xfffffff0	
sub esp, eax	
mov dword ptr [ebp-0x2c], edi	
lea edi, ptr [esp+0x1f]	
and edi, 0xfffffff0	
test esi, esi	
jz 0xb7ff33ee	
mov edx, dword ptr [esi-0x4]	
add ecx, esi	
mov dword ptr [ebp-0x30], ecx	
mov eax, edx	
shl eax, 0x14	
or dword ptr [ebx-0x314], eax	
or dword ptr [ebx-0x30c], eax	
cmp esi, ecx	
mov dword ptr [ebp-0x20], edx	
jnb 0xb7ff33ee	
mov dword ptr [ebp-0x1c], 0x0	
mov dword ptr [ebp-0x34], edi	
data16 nop 	
lea edi, ptr [esi+0x1]	
mov dword ptr [esp], edi	
call 0xb7ff62e0	realloc
START: 0xb7ff62f7
inc eax	
cmp byte ptr [eax], dh	
jz 0xb7ff6396	
inc eax	
xor edx, 0x2	
jz 0xb7ff6311	
cmp byte ptr [eax], dh	
jz 0xb7ff6396	
START: 0xb7ff630e
inc eax	
xor edx, edx	
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
xor edx, ecx	
and edx, 0x1010100	
jnz 0xb7ff6379	
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
START: 0xb7ff3013
movzx ecx, byte ptr [esi]	
mov esi, 0x1	
shl esi, cl	
test dword ptr [ebp-0x20], esi	
jz 0xb7ff34e9	
mov esi, dword ptr [ebp-0x1c]	
mov ecx, dword ptr [ebp-0x34]	
lea edx, ptr [ecx+esi*8]	
add esi, 0x1	
mov dword ptr [edx], edi	
mov dword ptr [edx+0x4], eax	
mov dword ptr [ebp-0x1c], esi	
lea esi, ptr [edi+eax*1+0x1]	
cmp esi, dword ptr [ebp-0x30]	
jb 0xb7ff3008	
mov edx, dword ptr [ebp-0x1c]	
mov eax, dword ptr [ebp-0x1c]	
mov edi, dword ptr [ebp-0x34]	
shl edx, 0x3	
add eax, 0x1	
mov esi, dword ptr [ebp-0x24]	
or esi, dword ptr [ebp-0x28]	
jz 0xb7ff3119	
START: 0xb7ff34e9
sub dword ptr [ebp-0x2c], 0x1	
jmp 0xb7ff303a	
START: 0xb7ff303a
lea esi, ptr [edi+eax*1+0x1]	
cmp esi, dword ptr [ebp-0x30]	
jb 0xb7ff3008	
mov edx, dword ptr [ebp-0x1c]	
mov eax, dword ptr [ebp-0x1c]	
mov edi, dword ptr [ebp-0x34]	
shl edx, 0x3	
add eax, 0x1	
mov esi, dword ptr [ebp-0x24]	
or esi, dword ptr [ebp-0x28]	
jz 0xb7ff3119	
lea eax, ptr [ebx-0x308]	
xor esi, esi	
mov dword ptr [ebp-0x30], edi	
mov edi, eax	
nop 	
lea esi, ptr [esi]	
mov edx, dword ptr [ebp-0x24]	
mov ecx, esi	
mov eax, dword ptr [ebp-0x28]	
shrd eax, edx, cl	
shr edx, cl	
test cl, 0x20	
jz 0xb7ff3084	
START: 0xb7ff3084
and eax, 0x1	
test eax, eax	
jz 0xb7ff30f8	
mov edx, dword ptr [ebp-0x1c]	
mov eax, dword ptr [ebp-0x30]	
lea edx, ptr [eax+edx*8]	
mov dword ptr [ebp-0x20], edx	
mov dword ptr [edx], edi	
mov edx, edi	
mov ecx, dword ptr [edx]	
add edx, 0x4	
lea eax, ptr [ecx-0x1010101]	
not ecx	
and eax, ecx	
and eax, 0x80808080	
jz 0xb7ff309b	
mov ecx, eax	
shr ecx, 0x10	
test eax, 0x8080	
cmovz eax, ecx	
lea ecx, ptr [edx+0x2]	
cmovz edx, ecx	
mov ecx, dword ptr [ebp-0x20]	
add al, al	
sbb edx, 0x3	
xor eax, eax	
sub edx, edi	
mov dword ptr [ecx+0x4], edx	
mov ecx, esi	
xor edx, edx	
test cl, 0x20	
setz al	
setnz dl	
shl edx, cl	
shl eax, cl	
mov ecx, dword ptr [ebp-0x28]	
add dword ptr [ebp-0x1c], 0x1	
xor ecx, eax	
mov eax, dword ptr [ebp-0x24]	
mov dword ptr [ebp-0x28], ecx	
xor eax, edx	
mov dword ptr [ebp-0x24], eax	
mov eax, dword ptr [ebp-0x24]	
add esi, 0x1	
add edi, 0x8	
or eax, dword ptr [ebp-0x28]	
jnz 0xb7ff3070	
START: 0xb7ff30f8
mov eax, dword ptr [ebp-0x24]	
add esi, 0x1	
add edi, 0x8	
or eax, dword ptr [ebp-0x28]	
jnz 0xb7ff3070	
mov edx, dword ptr [ebp-0x1c]	
mov eax, dword ptr [ebp-0x1c]	
mov edi, dword ptr [ebp-0x30]	
shl edx, 0x3	
add eax, 0x1	
mov ecx, dword ptr [ebp-0x40]	
test ecx, ecx	
jz 0xb7ff3137	
mov ecx, dword ptr [ebp-0x40]	
add edx, edi	
mov esi, dword ptr [ebp-0x48]	
mov dword ptr [edx], ecx	
mov dword ptr [edx+0x4], esi	
lea edx, ptr [eax*8]	
add eax, 0x1	
add edx, edi	
cmp dword ptr [ebp-0x2c], eax	
lea ecx, ptr [ebx-0x6d51]	
mov dword ptr [edx], ecx	
mov dword ptr [edx+0x4], 0x3	
jnz 0xb7ff34a8	
START: 0xb7ff3070
mov edx, dword ptr [ebp-0x24]	
mov ecx, esi	
mov eax, dword ptr [ebp-0x28]	
shrd eax, edx, cl	
shr edx, cl	
test cl, 0x20	
jz 0xb7ff3084	
mov eax, edx	
and eax, 0x1	
test eax, eax	
jz 0xb7ff30f8	
mov edx, dword ptr [ebp-0x1c]	
mov eax, dword ptr [ebp-0x30]	
lea edx, ptr [eax+edx*8]	
mov dword ptr [ebp-0x20], edx	
mov dword ptr [edx], edi	
mov edx, edi	
mov ecx, dword ptr [edx]	
add edx, 0x4	
lea eax, ptr [ecx-0x1010101]	
not ecx	
and eax, ecx	
and eax, 0x80808080	
jz 0xb7ff309b	
START: 0xb7ff309b
mov ecx, dword ptr [edx]	
add edx, 0x4	
lea eax, ptr [ecx-0x1010101]	
not ecx	
and eax, ecx	
and eax, 0x80808080	
jz 0xb7ff309b	
mov ecx, eax	
shr ecx, 0x10	
test eax, 0x8080	
cmovz eax, ecx	
lea ecx, ptr [edx+0x2]	
cmovz edx, ecx	
mov ecx, dword ptr [ebp-0x20]	
add al, al	
sbb edx, 0x3	
xor eax, eax	
sub edx, edi	
mov dword ptr [ecx+0x4], edx	
mov ecx, esi	
xor edx, edx	
test cl, 0x20	
setz al	
setnz dl	
shl edx, cl	
shl eax, cl	
mov ecx, dword ptr [ebp-0x28]	
add dword ptr [ebp-0x1c], 0x1	
xor ecx, eax	
mov eax, dword ptr [ebp-0x24]	
mov dword ptr [ebp-0x28], ecx	
xor eax, edx	
mov dword ptr [ebp-0x24], eax	
mov eax, dword ptr [ebp-0x24]	
add esi, 0x1	
add edi, 0x8	
or eax, dword ptr [ebp-0x28]	
jnz 0xb7ff3070	
mov edx, dword ptr [ebp-0x1c]	
mov eax, dword ptr [ebp-0x1c]	
mov edi, dword ptr [ebp-0x30]	
shl edx, 0x3	
add eax, 0x1	
mov ecx, dword ptr [ebp-0x40]	
test ecx, ecx	
jz 0xb7ff3137	
START: 0xb7ff3120
mov ecx, dword ptr [ebp-0x40]	
add edx, edi	
mov esi, dword ptr [ebp-0x48]	
mov dword ptr [edx], ecx	
mov dword ptr [edx+0x4], esi	
lea edx, ptr [eax*8]	
add eax, 0x1	
add edx, edi	
cmp dword ptr [ebp-0x2c], eax	
lea ecx, ptr [ebx-0x6d51]	
mov dword ptr [edx], ecx	
mov dword ptr [edx+0x4], 0x3	
jnz 0xb7ff34a8	
cmp dword ptr [ebp-0x2c], 0x1	
mov eax, dword ptr [edi+0x4]	
jz 0xb7ff3401	
mov ecx, dword ptr [ebp-0x2c]	
add eax, dword ptr [edi+ecx*8-0x4]	
add eax, 0x2	
cmp ecx, 0x2	
jnbe 0xb7ff3397	
START: 0xb7ff3397
add eax, eax	
mov edx, 0x2	
mov esi, 0x1	
jmp 0xb7ff33ac	
START: 0xb7ff33ac
mov ecx, dword ptr [edi+esi*8+0x4]	
lea eax, ptr [eax+ecx*1+0x1]	
lea ecx, ptr [edx+0x1]	
cmp ecx, dword ptr [ebp-0x2c]	
jnz 0xb7ff33a8	
cmp dword ptr [ebp-0x2c], 0x3	
jz 0xb7ff33e1	
cmp dword ptr [ebp-0x2c], 0x1f	
jnbe 0xb7ff34d2	
START: 0xb7ff33a8
mov esi, edx	
mov edx, ecx	
mov ecx, dword ptr [edi+esi*8+0x4]	
lea eax, ptr [eax+ecx*1+0x1]	
lea ecx, ptr [edx+0x1]	
cmp ecx, dword ptr [ebp-0x2c]	
jnz 0xb7ff33a8	
cmp dword ptr [ebp-0x2c], 0x3	
jz 0xb7ff33e1	
cmp dword ptr [ebp-0x2c], 0x1f	
jnbe 0xb7ff34d2	
START: 0xb7ff33cc
mov ecx, 0x23	
sub ecx, dword ptr [ebp-0x2c]	
lea edx, ptr [eax+0x40]	
shr edx, cl	
test edx, edx	
jnz 0xb7ff34d2	
mov ecx, dword ptr [ebp-0x2c]	
sub ecx, 0x3	
shl eax, cl	
jmp 0xb7ff3171	
START: 0xb7ff3171
movzx ecx, byte ptr [ebp-0x2c]	
mov edx, 0x1	
mov esi, edx	
shl esi, cl	
mov ecx, dword ptr [ebp-0x44]	
mov dword ptr [ebp-0x20], esi	
mov dword ptr [ecx], esi	
shl esi, 0x3	
add eax, esi	
mov dword ptr [ebp-0x4c], edx	
mov dword ptr [esp], eax	
call 0xb7fde7d0	.plt
START: 0xb7ff3196
mov edx, dword ptr [ebp-0x4c]	
test eax, eax	
mov dword ptr [ebp-0x28], eax	
jz 0xb7ff34d2	
cmp dword ptr [ebp-0x2c], 0x1	
jz 0xb7ff344f	
mov eax, dword ptr [ebp-0x28]	
mov ecx, dword ptr [ebp-0x28]	
add eax, esi	
cmp dword ptr [ebp-0x2c], 0x2	
mov dword ptr [ecx], eax	
mov dword ptr [ecx+0x8], eax	
jz 0xb7ff3409	
START: 0xb7ff31c5
mov ecx, dword ptr [ebp-0x2c]	
mov esi, edx	
mov edx, dword ptr [edi+0x4]	
sub ecx, 0x1	
mov dword ptr [ebp-0x34], edx	
lea edx, ptr [edi+ecx*8]	
mov dword ptr [ebp-0x40], ecx	
shl esi, cl	
mov ecx, dword ptr [edx+0x4]	
mov edx, dword ptr [edx]	
mov dword ptr [ebp-0x30], ecx	
mov dword ptr [ebp-0x38], edx	
mov edx, dword ptr [ebp-0x2c]	
sub edx, 0x2	
mov dword ptr [ebp-0x1c], edx	
mov edx, dword ptr [edi]	
mov dword ptr [ebp-0x3c], edx	
lea esi, ptr [esi]	
mov edx, dword ptr [ebp-0x30]	
sub esi, 0x2	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [ebp-0x38]	
mov dword ptr [esp+0x4], edx	
call 0xb7ff6970	realloc
START: 0xb7ff6970
mov ecx, dword ptr [esp+0xc]	
mov eax, edi	
mov edi, dword ptr [esp+0x4]	
mov edx, esi	
mov esi, dword ptr [esp+0x8]	
cld 	
shr ecx, 0x1	
jnb 0xb7ff6986	
movsb byte ptr [edi], byte ptr [esi]	
shr ecx, 0x1	
jnb 0xb7ff698c	
movsw word ptr [edi], word ptr [esi]	
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff698e
xchg edi, eax	
mov esi, edx	
ret 	
START: 0xb7ff3211
mov byte ptr [eax], 0x2f	
mov edx, dword ptr [ebp-0x1c]	
add eax, 0x1	
test edx, edx	
jz 0xb7ff3260	
mov ecx, dword ptr [ebp-0x1c]	
jmp 0xb7ff322d	
START: 0xb7ff322d
mov edx, 0x1	
shl edx, cl	
test edx, esi	
jz 0xb7ff3228	
mov edx, dword ptr [edi+ecx*8+0x4]	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [edi+ecx*8]	
mov dword ptr [ebp-0x4c], ecx	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x4], edx	
call 0xb7ff6970	realloc
START: 0xb7ff6986
shr ecx, 0x1	
jnb 0xb7ff698c	
movsw word ptr [edi], word ptr [esi]	
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff698c
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff3252
mov byte ptr [eax], 0x2f	
mov ecx, dword ptr [ebp-0x4c]	
add eax, 0x1	
sub ecx, 0x1	
jnz 0xb7ff322d	
mov edx, dword ptr [ebp-0x34]	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [ebp-0x3c]	
mov dword ptr [esp+0x4], edx	
call 0xb7ff6970	realloc
START: 0xb7ff3276
mov byte ptr [eax], 0x2f	
add eax, 0x1	
test esi, esi	
jnz 0xb7ff31f8	
movzx ecx, byte ptr [ebp-0x2c]	
mov eax, 0x1	
xor edx, edx	
shl eax, cl	
mov ecx, dword ptr [ebp-0x28]	
test eax, eax	
jz 0xb7ff32a7	
mov dword ptr [ecx+edx*8+0x4], 0x0	
add edx, 0x1	
cmp edx, eax	
jnz 0xb7ff3298	
START: 0xb7ff31f8
mov edx, dword ptr [ebp-0x30]	
sub esi, 0x2	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [ebp-0x38]	
mov dword ptr [esp+0x4], edx	
call 0xb7ff6970	realloc
START: 0xb7ff3228
sub ecx, 0x1	
jz 0xb7ff3260	
mov edx, 0x1	
shl edx, cl	
test edx, esi	
jz 0xb7ff3228	
mov edx, dword ptr [edi+ecx*8+0x4]	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [edi+ecx*8]	
mov dword ptr [ebp-0x4c], ecx	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x4], edx	
call 0xb7ff6970	realloc
START: 0xb7ff3260
mov edx, dword ptr [ebp-0x34]	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [ebp-0x3c]	
mov dword ptr [esp+0x4], edx	
call 0xb7ff6970	realloc
START: 0xb7ff3298
mov dword ptr [ecx+edx*8+0x4], 0x0	
add edx, 0x1	
cmp edx, eax	
jnz 0xb7ff3298	
mov ecx, dword ptr [ebp-0x2c]	
lea esi, ptr [esi]	
mov eax, dword ptr [ebp-0x20]	
sub ecx, 0x1	
mov esi, 0x1	
shl esi, cl	
mov dword ptr [ebp-0x1c], esi	
test eax, eax	
jz 0xb7ff32f4	
mov edx, dword ptr [ebp-0x28]	
mov eax, dword ptr [ebp-0x20]	
lea esi, ptr [esi]	
sub eax, 0x1	
test dword ptr [ebp-0x1c], eax	
jz 0xb7ff32ed	
START: 0xb7ff32d8
mov esi, dword ptr [edi+ecx*8+0x4]	
sub eax, 0x1	
add esi, 0x1	
add dword ptr [edx+0x4], esi	
add edx, 0x8	
test dword ptr [ebp-0x1c], eax	
jnz 0xb7ff32d8	
add edx, 0x8	
test eax, eax	
jnz 0xb7ff32d0	
test ecx, ecx	
jnz 0xb7ff32b0	
START: 0xb7ff32d0
sub eax, 0x1	
test dword ptr [ebp-0x1c], eax	
jz 0xb7ff32ed	
mov esi, dword ptr [edi+ecx*8+0x4]	
sub eax, 0x1	
add esi, 0x1	
add dword ptr [edx+0x4], esi	
add edx, 0x8	
test dword ptr [ebp-0x1c], eax	
jnz 0xb7ff32d8	
add edx, 0x8	
test eax, eax	
jnz 0xb7ff32d0	
START: 0xb7ff32ed
add edx, 0x8	
test eax, eax	
jnz 0xb7ff32d0	
test ecx, ecx	
jnz 0xb7ff32b0	
mov edi, dword ptr [ebp-0x20]	
mov eax, dword ptr [ebp-0x28]	
movzx ecx, byte ptr [ebp-0x40]	
mov dword ptr [ebp-0x1c], 0x1	
shl dword ptr [ebp-0x1c], cl	
sub edi, 0x2	
add eax, 0x10	
mov edx, edi	
cmp dword ptr [ebp-0x1c], edi	
mov dword ptr [ebp-0x20], edi	
jz 0xb7ff335d	
START: 0xb7ff32b0
mov eax, dword ptr [ebp-0x20]	
sub ecx, 0x1	
mov esi, 0x1	
shl esi, cl	
mov dword ptr [ebp-0x1c], esi	
test eax, eax	
jz 0xb7ff32f4	
mov edx, dword ptr [ebp-0x28]	
mov eax, dword ptr [ebp-0x20]	
lea esi, ptr [esi]	
sub eax, 0x1	
test dword ptr [ebp-0x1c], eax	
jz 0xb7ff32ed	
mov esi, dword ptr [edi+ecx*8+0x4]	
sub eax, 0x1	
add esi, 0x1	
add dword ptr [edx+0x4], esi	
add edx, 0x8	
test dword ptr [ebp-0x1c], eax	
jnz 0xb7ff32d8	
START: 0xb7ff32f4
test ecx, ecx	
jnz 0xb7ff32b0	
mov edi, dword ptr [ebp-0x20]	
mov eax, dword ptr [ebp-0x28]	
movzx ecx, byte ptr [ebp-0x40]	
mov dword ptr [ebp-0x1c], 0x1	
shl dword ptr [ebp-0x1c], cl	
sub edi, 0x2	
add eax, 0x10	
mov edx, edi	
cmp dword ptr [ebp-0x1c], edi	
mov dword ptr [ebp-0x20], edi	
jz 0xb7ff335d	
mov ecx, eax	
jmp 0xb7ff3337	
START: 0xb7ff3337
sub edx, 0x1	
test dl, 0x1	
jnz 0xb7ff3320	
mov esi, ecx	
sub esi, dword ptr [ebp-0x28]	
mov esi, dword ptr [eax+esi*1-0x18]	
mov dword ptr [ecx], esi	
add ecx, 0x8	
cmp dword ptr [ebp-0x1c], edx	
jnz 0xb7ff3337	
mov edx, dword ptr [ebp-0x1c]	
mov ecx, dword ptr [ebp-0x20]	
sub ecx, edx	
lea eax, ptr [eax+ecx*8]	
mov edi, dword ptr [ebp-0x30]	
mov esi, 0xfffffff8	
movzx ecx, byte ptr [ebp-0x40]	
add edi, 0x1	
shl esi, cl	
data16 nop 	
mov ecx, dword ptr [eax+esi*1]	
add ecx, edi	
mov dword ptr [eax], ecx	
add eax, 0x8	
sub edx, 0x1	
jnz 0xb7ff3370	
START: 0xb7ff3320
mov edi, ecx	
sub edi, dword ptr [ebp-0x28]	
mov esi, dword ptr [eax+edi*1-0x20]	
add esi, dword ptr [eax+edi*1-0x1c]	
mov dword ptr [ecx], esi	
add ecx, 0x8	
cmp dword ptr [ebp-0x1c], edx	
jz 0xb7ff3352	
sub edx, 0x1	
test dl, 0x1	
jnz 0xb7ff3320	
mov esi, ecx	
sub esi, dword ptr [ebp-0x28]	
mov esi, dword ptr [eax+esi*1-0x18]	
mov dword ptr [ecx], esi	
add ecx, 0x8	
cmp dword ptr [ebp-0x1c], edx	
jnz 0xb7ff3337	
START: 0xb7ff3352
mov edx, dword ptr [ebp-0x1c]	
mov ecx, dword ptr [ebp-0x20]	
sub ecx, edx	
lea eax, ptr [eax+ecx*8]	
mov edi, dword ptr [ebp-0x30]	
mov esi, 0xfffffff8	
movzx ecx, byte ptr [ebp-0x40]	
add edi, 0x1	
shl esi, cl	
data16 nop 	
mov ecx, dword ptr [eax+esi*1]	
add ecx, edi	
mov dword ptr [eax], ecx	
add eax, 0x8	
sub edx, 0x1	
jnz 0xb7ff3370	
mov esi, dword ptr [ebp-0x28]	
mov edi, dword ptr [ebp+0x8]	
mov eax, dword ptr [esi+0x4]	
mov dword ptr [edi], eax	
mov eax, dword ptr [ebp-0x28]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0x4	
START: 0xb7ff3370
mov ecx, dword ptr [eax+esi*1]	
add ecx, edi	
mov dword ptr [eax], ecx	
add eax, 0x8	
sub edx, 0x1	
jnz 0xb7ff3370	
mov esi, dword ptr [ebp-0x28]	
mov edi, dword ptr [ebp+0x8]	
mov eax, dword ptr [esi+0x4]	
mov dword ptr [edi], eax	
mov eax, dword ptr [ebp-0x28]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0x4	
START: 0xb7fe5d77
sub esp, 0x4	
mov dword ptr [ebx-0xfc], eax	
mov dword ptr [esp], 0x14	
call 0xb7fde7d0	.plt
START: 0xb7fe5d8c
test eax, eax	
mov dword ptr [ebp-0x24], eax	
mov dword ptr [ebx-0xf8], eax	
jz 0xb7fe60c3	
mov esi, dword ptr [ebx-0x104]	
mov ecx, 0xcccccccd	
lea edi, ptr [esi*4+0x27]	
mov eax, edi	
mul ecx	
mov edi, edx	
shr edi, 0x4	
imul eax, edi, 0x4d8	
mov dword ptr [esp], eax	
call 0xb7fde7d0	.plt
START: 0xb7ff3813
mov eax, dword ptr [ebx-0x344]	
mov edx, eax	
lea edi, ptr [eax+esi*1-0x1]	
neg edx	
and edi, edx	
jz 0xb7ff38bc	
mov dword ptr [esp+0x14], 0x0	
mov dword ptr [esp+0x10], 0xffffffff	
mov dword ptr [esp+0xc], 0x22	
mov dword ptr [esp+0x8], 0x3	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], 0x0	
call 0xb7ff5d40	realloc
START: 0xb7ff5d40
push ebp	
push ebx	
push esi	
push edi	
mov ebx, dword ptr [esp+0x14]	
mov ecx, dword ptr [esp+0x18]	
mov edx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
test ebp, 0xfff	
mov eax, 0xffffffea	
jnz 0xb7ff5d73	
shr ebp, 0xc	
mov eax, 0xc0	
int 0x80	
START: 0xb7ff5d73
pop edi	
pop esi	
pop ebx	
pop ebp	
cmp eax, 0xfffff000	
jnbe 0xb7ff5d7f	
ret 	
START: 0xb7ff3859
cmp eax, 0xffffffff	
jz 0xb7ff38b8	
cmp eax, dword ptr [ebx+0x8e8]	
mov edx, eax	
cmovz edx, dword ptr [ebx+0x8ec]	
add edi, eax	
mov dword ptr [ebx+0x8e8], edi	
lea eax, ptr [edx+esi*1]	
mov dword ptr [ebx+0x8f0], edx	
mov dword ptr [ebx+0x8ec], eax	
mov eax, edx	
mov ebx, dword ptr [esp+0x20]	
mov esi, dword ptr [esp+0x24]	
mov edi, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb7fe5dc6
mov edx, dword ptr [ebp-0x24]	
test eax, eax	
mov dword ptr [edx], eax	
jz 0xb7fe60ac	
add edx, 0x4	
mov dword ptr [ebp-0x20], edx	
lea edx, ptr [ebx-0x705f]	
mov dword ptr [ebp-0x34], edx	
mov dword ptr [eax+0x4], edx	
lea edx, ptr [ebx-0x7ef4]	
mov dword ptr [eax+0xc], edx	
add edx, 0x15	
mov dword ptr [ebp-0x1c], edx	
lea edx, ptr [edi+edi*4]	
xor edi, edi	
shl edx, 0x2	
mov ecx, edx	
mov dword ptr [ebx-0xf4], 0x0	
add ecx, eax	
mov dword ptr [ebx+0x540], eax	
mov dword ptr [eax+0x8], 0x0	
mov dword ptr [eax+0x10], 0x14	
mov dword ptr [ebp-0x28], edx	
mov dword ptr [ebp-0x38], esi	
mov esi, dword ptr [ebp-0x38]	
xor edx, edx	
test esi, esi	
jz 0xb7fe5e42	
mov esi, dword ptr [ebp-0x38]	
mov dword ptr [eax+edx*4+0x14], 0x0	
add edx, 0x1	
cmp edx, esi	
jnz 0xb7fe5e30	
START: 0xb7fe5e30
mov dword ptr [eax+edx*4+0x14], 0x0	
add edx, 0x1	
cmp edx, esi	
jnz 0xb7fe5e30	
mov dword ptr [ebp-0x38], esi	
cmp edi, 0xc	
jz 0xb7fe5ea0	
mov esi, dword ptr [ebp-0x20]	
mov edx, dword ptr [ebp-0x34]	
mov dword ptr [eax], ecx	
add eax, dword ptr [ebp-0x28]	
mov dword ptr [esi], ecx	
add esi, 0x4	
mov dword ptr [ecx+0x4], edx	
mov edx, dword ptr [edi+ebx*1-0x7f10]	
add edi, 0x4	
mov dword ptr [ebp-0x2c], esi	
mov esi, dword ptr [ebp-0x1c]	
mov dword ptr [ecx+0x8], 0x0	
mov dword ptr [ecx+0x10], edx	
mov dword ptr [ecx+0xc], esi	
lea esi, ptr [esi+edx*1+0x1]	
mov edx, dword ptr [ebp-0x1c]	
add ecx, dword ptr [ebp-0x28]	
mov dword ptr [ebp-0x24], esi	
cmp byte ptr [edx], 0x2f	
jnz 0xb7fe6082	
START: 0xb7fe5e8d
mov dword ptr [ebp-0x1c], esi	
mov edx, dword ptr [ebp-0x2c]	
mov esi, dword ptr [ebp-0x20]	
mov dword ptr [ebp-0x20], edx	
mov dword ptr [ebp-0x24], esi	
jmp 0xb7fe5e24	
START: 0xb7fe5e24
mov esi, dword ptr [ebp-0x38]	
xor edx, edx	
test esi, esi	
jz 0xb7fe5e42	
mov esi, dword ptr [ebp-0x38]	
mov dword ptr [eax+edx*4+0x14], 0x0	
add edx, 0x1	
cmp edx, esi	
jnz 0xb7fe5e30	
mov dword ptr [ebp-0x38], esi	
cmp edi, 0xc	
jz 0xb7fe5ea0	
START: 0xb7fe5ea0
mov esi, dword ptr [ebx+0x2c]	
mov dword ptr [eax], 0x0	
mov eax, dword ptr [ebp-0x24]	
mov dword ptr [ebx+0x8a0], 0x18	
test esi, esi	
mov dword ptr [eax+0x4], 0x0	
jz 0xb7fe5f10	
movzx eax, byte ptr [esi+0x194]	
and eax, 0x3	
cmp al, 0x2	
jz 0xb7fe618d	
mov eax, dword ptr [esi+0x94]	
test eax, eax	
jz 0xb7fe601a	
START: 0xb7fe601a
mov eax, dword ptr [esi+0x5c]	
mov dword ptr [esi+0x1e8], 0xffffffff	
test eax, eax	
jz 0xb7fe605c	
mov ecx, dword ptr [esi+0x34]	
mov edx, dword ptr [eax+0x4]	
lea eax, ptr [esi+0x198]	
add edx, dword ptr [ecx+0x4]	
lea ecx, ptr [ebx-0x7014]	
mov dword ptr [esp], ecx	
mov ecx, esi	
call 0xb7fe5b30	.text
START: 0xb7fe605c
mov dword ptr [esi+0x198], 0xffffffff	
jmp 0xb7fe5f10	
START: 0xb7fe5f10
mov ecx, dword ptr [ebp-0x30]	
test ecx, ecx	
jz 0xb7fe6008	
mov eax, dword ptr [ebp-0x30]	
cmp byte ptr [eax], 0x0	
jz 0xb7fe6008	
mov dword ptr [esp+0x4], 0x24	
mov dword ptr [esp], eax	
call 0xb7ff6060	realloc
START: 0xb7fe6008
mov dword ptr [ebx-0xf0], 0xffffffff	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe0b91
mov eax, dword ptr [ebx+0x548]	
xor edx, edx	
call 0xb7fed680	_dl_debug_state
START: 0xb7fed680
sub esp, 0xc	
mov ecx, eax	
mov dword ptr [esp], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fed68d
add ebx, 0x11967	
test edx, edx	
mov dword ptr [esp+0x8], edi	
mov edi, edx	
mov dword ptr [esp+0x4], esi	
mov eax, dword ptr [ebx-0x1c]	
jz 0xb7fed6b1	
imul eax, edx, 0x4c	
lea eax, ptr [ebx+eax*1+0x64]	
test ecx, ecx	
setnz dl	
mov esi, edx	
jz 0xb7fed700	
mov edx, esi	
test dl, dl	
mov dword ptr [eax], 0x1	
jz 0xb7fed6f0	
START: 0xb7fed6b1
test ecx, ecx	
setnz dl	
mov esi, edx	
jz 0xb7fed700	
mov edx, esi	
test dl, dl	
mov dword ptr [eax], 0x1	
jz 0xb7fed6f0	
imul edx, edi, 0x4c	
mov esi, dword ptr [esp+0x4]	
mov dword ptr [eax+0x10], ecx	
mov edi, dword ptr [esp+0x8]	
mov edx, dword ptr [ebx+edx*1+0x2c]	
mov dword ptr [eax+0x4], edx	
lea edx, ptr [ebx-0x11984]	
mov ebx, dword ptr [esp]	
mov dword ptr [eax+0x8], edx	
add esp, 0xc	
ret 	
START: 0xb7fe0b9e
mov dword ptr [ebp-0xb0], eax	
mov dword ptr [eax+0xc], 0x0	
mov eax, dword ptr [ebx+0x54c]	
test eax, eax	
jz 0xb7fe15b4	
movzx eax, byte ptr [ebx+0x6dc]	
lea esi, ptr [ebx+0x548]	
add dword ptr [ebx+0x30], 0x1	
mov dword ptr [ebp-0x9c], esi	
and eax, 0xfffffffc	
or eax, 0x1	
mov byte ptr [ebx+0x6dc], al	
mov eax, dword ptr [ebp-0x7c]	
mov dword ptr [eax+0xc], esi	
add dword ptr [ebx+0x520], 0x1	
adc dword ptr [ebx+0x524], 0x0	
cmp dword ptr [ebx-0x1ec], 0xfffffffe	
mov dword ptr [ebx+0x558], eax	
jz 0xb7fe15a4	
mov eax, dword ptr [ebx+0x6f4]	
mov ecx, dword ptr [eax+0x1c]	
add ecx, eax	
movzx eax, word ptr [eax+0x2c]	
mov dword ptr [ebx+0x698], ecx	
lea edx, ptr [eax+0x7ffffff]	
shl edx, 0x5	
mov word ptr [ebx+0x6a0], ax	
add edx, ecx	
test eax, eax	
jz 0xb7fe0c54	
START: 0xb7fe15b4
mov eax, dword ptr [ebx+0x564]	
mov eax, dword ptr [eax]	
mov dword ptr [ebx+0x54c], eax	
jmp 0xb7fe0bb9	
START: 0xb7fe0bb9
movzx eax, byte ptr [ebx+0x6dc]	
lea esi, ptr [ebx+0x548]	
add dword ptr [ebx+0x30], 0x1	
mov dword ptr [ebp-0x9c], esi	
and eax, 0xfffffffc	
or eax, 0x1	
mov byte ptr [ebx+0x6dc], al	
mov eax, dword ptr [ebp-0x7c]	
mov dword ptr [eax+0xc], esi	
add dword ptr [ebx+0x520], 0x1	
adc dword ptr [ebx+0x524], 0x0	
cmp dword ptr [ebx-0x1ec], 0xfffffffe	
mov dword ptr [ebx+0x558], eax	
jz 0xb7fe15a4	
mov eax, dword ptr [ebx+0x6f4]	
mov ecx, dword ptr [eax+0x1c]	
add ecx, eax	
movzx eax, word ptr [eax+0x2c]	
mov dword ptr [ebx+0x698], ecx	
lea edx, ptr [eax+0x7ffffff]	
shl edx, 0x5	
mov word ptr [ebx+0x6a0], ax	
add edx, ecx	
test eax, eax	
jz 0xb7fe0c54	
mov ecx, edx	
sub edx, 0x20	
sub eax, 0x1	
cmp dword ptr [edx+0x20], 0x6474e552	
jnz 0xb7fe0c2d	
START: 0xb7fe15a4
cmp dword ptr [eax], 0x1	
sbb eax, eax	
mov dword ptr [ebx-0x1ec], eax	
jmp 0xb7fe0c06	
START: 0xb7fe0c06
mov eax, dword ptr [ebx+0x6f4]	
mov ecx, dword ptr [eax+0x1c]	
add ecx, eax	
movzx eax, word ptr [eax+0x2c]	
mov dword ptr [ebx+0x698], ecx	
lea edx, ptr [eax+0x7ffffff]	
shl edx, 0x5	
mov word ptr [ebx+0x6a0], ax	
add edx, ecx	
test eax, eax	
jz 0xb7fe0c54	
mov ecx, edx	
sub edx, 0x20	
sub eax, 0x1	
cmp dword ptr [edx+0x20], 0x6474e552	
jnz 0xb7fe0c2d	
mov eax, dword ptr [ecx+0x8]	
mov dword ptr [ebx+0x790], eax	
mov eax, dword ptr [ecx+0x14]	
mov dword ptr [ebx+0x794], eax	
mov eax, dword ptr [ebx+0x77c]	
test eax, eax	
jnz 0xb7fe15f8	
START: 0xb7fe0c62
mov eax, dword ptr [ebx+0x888]	
test eax, eax	
jnz 0xb7fe1611	
mov dword ptr [ebp-0x90], 0x0	
mov ecx, dword ptr [ebp-0x7c]	
mov eax, dword ptr [ecx+0x74]	
test eax, eax	
jz 0xb7fe0c8d	
mov esi, dword ptr [ebp-0xb0]	
mov dword ptr [eax+0x4], esi	
mov eax, dword ptr [ebx+0x5bc]	
test eax, eax	
jz 0xb7fe0ca0	
START: 0xb7fe0ca0
mov eax, dword ptr [ebp-0xb0]	
mov dword ptr [eax+0xc], 0x1	
call 0xb7fed670	_dl_debug_state
START: 0xb7fed670
ret 	
START: 0xb7fe0cb2
mov eax, dword ptr [ebx-0x198]	
test eax, eax	
jnz 0xb7fe24af	
mov esi, dword ptr [ebp-0xa0]	
mov eax, dword ptr [esi]	
test eax, eax	
jnz 0xb7fe250d	
mov esi, dword ptr [ebx-0x114]	
test esi, esi	
jnz 0xb7fe2340	
START: 0xb7fe0cde
mov dword ptr [ebp-0x80], 0x0	
lea esi, ptr [ebx-0x723e]	
mov dword ptr [esp+0x4], 0x4	
mov dword ptr [ebp-0x98], esi	
mov dword ptr [esp], esi	
call 0xb7ff5cb0	realloc
START: 0xb7ff5cb0
mov edx, ebx	
mov ecx, dword ptr [esp+0x8]	
mov ebx, dword ptr [esp+0x4]	
mov eax, 0x21	
int 0x80	
START: 0xb7ff5cc1
mov ebx, edx	
cmp eax, 0xfffff001	
jnb 0xb7ff5ccb	
ret 	
START: 0xb7ff5ccb
call 0xb7ff6ba7	realloc
START: 0xb7ff6ba7
mov ecx, dword ptr [esp]	
ret 	
START: 0xb7ff5cd0
add ecx, 0x9324	
xor edx, edx	
sub edx, eax	
mov dword ptr [ecx+0x90c], edx	
or eax, 0xffffffff	
jmp 0xb7ff5cca	
START: 0xb7ff5cca
ret 	
START: 0xb7fe0d01
test eax, eax	
jz 0xb7fe23e4	
mov edi, dword ptr [ebp-0xa0]	
mov eax, dword ptr [edi]	
test eax, eax	
jnz 0xb7fe28e5	
xor esi, esi	
rdtsc 	
mov dword ptr [ebp-0x88], eax	
xor eax, eax	
mov ecx, dword ptr [ebp-0x80]	
cmp dword ptr [ebp-0x2c], 0x3	
mov dword ptr [ebp-0x84], edx	
mov edx, esi	
mov dword ptr [esp+0x4], 0x0	
setz al	
mov dword ptr [esp], eax	
mov eax, dword ptr [ebp-0x7c]	
call 0xb7feb190	_dl_rtld_di_serinfo
START: 0xb7feb190
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
sub esp, 0x9c	
mov dword ptr [ebp-0x78], eax	
lea eax, ptr [ecx+ecx*2]	
mov esi, dword ptr [ebp-0x78]	
lea eax, ptr [eax*4+0x36]	
and eax, 0xfffffff0	
sub esp, eax	
mov eax, dword ptr [ebp-0x78]	
mov dword ptr [ebp-0x4c], ecx	
lea ecx, ptr [esp+0x1f]	
and ecx, 0xfffffff0	
mov dword ptr [ebp-0x8c], ecx	
mov dword ptr [ecx+0x4], eax	
lea eax, ptr [ecx+0xc]	
mov dword ptr [ecx], 0x0	
mov dword ptr [ecx+0x8], eax	
movzx eax, byte ptr [esi+0x194]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7feb1df
add ebx, 0x13e15	
and eax, 0xffffff9f	
or eax, 0x20	
mov byte ptr [esi+0x194], al	
mov esi, dword ptr [ebp-0x4c]	
xor eax, eax	
mov dword ptr [ebp-0x68], 0x1	
test esi, esi	
jz 0xb7feb248	
lea eax, ptr [ecx+0x18]	
xor esi, esi	
mov edi, edx	
mov dword ptr [ebp-0x50], ecx	
mov ecx, dword ptr [edi+esi*4]	
add esi, 0x1	
mov dword ptr [eax-0xc], 0x0	
mov dword ptr [eax-0x4], eax	
mov dword ptr [eax-0x8], ecx	
movzx edx, byte ptr [ecx+0x194]	
add eax, 0xc	
and edx, 0xffffff9f	
or edx, 0x20	
mov byte ptr [ecx+0x194], dl	
cmp esi, dword ptr [ebp-0x4c]	
jnz 0xb7feb20b	
mov ecx, dword ptr [ebp-0x50]	
lea eax, ptr [esi+0x1]	
mov dword ptr [ebp-0x68], eax	
lea eax, ptr [esi+esi*2]	
shl eax, 0x2	
mov esi, dword ptr [ebx+0x90c]	
add eax, ecx	
mov dword ptr [ebp-0x64], eax	
mov dword ptr [eax+0x8], 0x0	
mov dword ptr [ebp-0x24], 0x0	
mov dword ptr [ebp-0x88], esi	
lea esi, ptr [ebx-0x13ec4]	
mov dword ptr [ebx+0x90c], 0x0	
mov dword ptr [ebp-0x70], ecx	
mov dword ptr [ebp-0x84], 0x0	
mov dword ptr [ebp-0x80], 0x0	
mov dword ptr [ebp-0x5c], esi	
mov eax, dword ptr [ebp-0x70]	
mov dword ptr [ebp-0x54], 0x0	
mov esi, dword ptr [eax+0x4]	
mov dword ptr [eax], 0x1	
mov eax, dword ptr [esi+0x15c]	
test eax, eax	
jz 0xb7feb499	
START: 0xb7feb248
mov esi, dword ptr [ebx+0x90c]	
add eax, ecx	
mov dword ptr [ebp-0x64], eax	
mov dword ptr [eax+0x8], 0x0	
mov dword ptr [ebp-0x24], 0x0	
mov dword ptr [ebp-0x88], esi	
lea esi, ptr [ebx-0x13ec4]	
mov dword ptr [ebx+0x90c], 0x0	
mov dword ptr [ebp-0x70], ecx	
mov dword ptr [ebp-0x84], 0x0	
mov dword ptr [ebp-0x80], 0x0	
mov dword ptr [ebp-0x5c], esi	
mov eax, dword ptr [ebp-0x70]	
mov dword ptr [ebp-0x54], 0x0	
mov esi, dword ptr [eax+0x4]	
mov dword ptr [eax], 0x1	
mov eax, dword ptr [esi+0x15c]	
test eax, eax	
jz 0xb7feb499	
mov eax, dword ptr [esi+0x24]	
test eax, eax	
jz 0xb7feb3c3	
mov eax, dword ptr [esi+0x34]	
mov edi, dword ptr [esi+0x8]	
mov ecx, dword ptr [ebp+0x8]	
mov dword ptr [ebp-0x3c], esi	
mov eax, dword ptr [eax+0x4]	
mov dword ptr [ebp-0x38], ecx	
mov dword ptr [ebp-0x58], eax	
mov dword ptr [ebp-0x30], eax	
mov eax, dword ptr [ebp+0xc]	
mov dword ptr [ebp-0x34], eax	
mov eax, dword ptr [edi]	
test eax, eax	
jz 0xb7feb3df	
START: 0xb7feb499
cmp esi, dword ptr [ebp-0x78]	
jz 0xb7feb83d	
mov eax, dword ptr [esi+0x1f0]	
test eax, eax	
jnz 0xb7feb83d	
movzx eax, word ptr [esi+0x15a]	
test ax, ax	
jz 0xb7feb2af	
START: 0xb7feb83d
mov dword ptr [ebp-0x54], 0x0	
jmp 0xb7feb2af	
START: 0xb7feb2af
mov eax, dword ptr [esi+0x24]	
test eax, eax	
jz 0xb7feb3c3	
mov eax, dword ptr [esi+0x34]	
mov edi, dword ptr [esi+0x8]	
mov ecx, dword ptr [ebp+0x8]	
mov dword ptr [ebp-0x3c], esi	
mov eax, dword ptr [eax+0x4]	
mov dword ptr [ebp-0x38], ecx	
mov dword ptr [ebp-0x58], eax	
mov dword ptr [ebp-0x30], eax	
mov eax, dword ptr [ebp+0xc]	
mov dword ptr [ebp-0x34], eax	
mov eax, dword ptr [edi]	
test eax, eax	
jz 0xb7feb3df	
mov edx, dword ptr [ebp-0x70]	
mov dword ptr [ebp-0x50], 0x0	
mov dword ptr [ebp-0x74], edx	
jmp 0xb7feb31b	
START: 0xb7feb31b
cmp eax, 0x1	
jnz 0xb7febba9	
mov ecx, dword ptr [ebp-0x58]	
add ecx, dword ptr [edi+0x4]	
mov dword ptr [ebp-0x4c], ecx	
mov dword ptr [esp+0x4], 0x24	
mov dword ptr [esp], ecx	
call 0xb7ff6060	realloc
START: 0xb7ff6060
push edi	
push esi	
push ebx	
push ebp	
mov eax, dword ptr [esp+0x14]	
mov edx, dword ptr [esp+0x18]	
mov edi, eax	
xor ecx, ecx	
mov dh, dl	
mov cl, dl	
shl edx, 0x10	
mov ch, cl	
or edx, ecx	
and edi, 0x3	
jz 0xb7ff60c1	
mov cl, dl	
jp 0xb7ff60ad	
xor cl, byte ptr [eax]	
jz 0xb7ff61ed	
START: 0xb7ff60c1
mov ecx, dword ptr [eax]	
mov ebp, 0xfefefeff	
mov edi, 0xfefefeff	
add ebp, ecx	
xor ebp, ecx	
add edi, ecx	
lea eax, ptr [eax+0x4]	
jnb 0xb7ff61f2	
mov ebx, ecx	
or ebp, 0xfefefeff	
add ebp, 0x1	
jnz 0xb7ff61f2	
mov esi, 0xfefefeff	
xor ebx, edx	
mov ecx, dword ptr [eax]	
add esi, ebx	
mov edi, 0xfefefeff	
jnb 0xb7ff61d7	
START: 0xb7ff6103
mov ebp, edi	
xor esi, ebx	
add ebp, ecx	
or esi, 0xfefefeff	
add esi, 0x1	
jnz 0xb7ff61d7	
xor ebp, ecx	
add edi, ecx	
lea eax, ptr [eax+0x4]	
jnb 0xb7ff61f2	
mov ebx, ecx	
or ebp, 0xfefefeff	
add ebp, 0x1	
jnz 0xb7ff61f2	
START: 0xb7ff6136
mov esi, 0xfefefeff	
xor ebx, edx	
mov ecx, dword ptr [eax]	
add esi, ebx	
mov edi, 0xfefefeff	
jnb 0xb7ff61d7	
mov ebp, edi	
xor esi, ebx	
add ebp, ecx	
or esi, 0xfefefeff	
add esi, 0x1	
jnz 0xb7ff61d7	
xor ebp, ecx	
add edi, ecx	
lea eax, ptr [eax+0x4]	
jnb 0xb7ff61f2	
START: 0xb7ff616a
mov ebx, ecx	
or ebp, 0xfefefeff	
add ebp, 0x1	
jnz 0xb7ff61f2	
mov esi, 0xfefefeff	
xor ebx, edx	
mov ecx, dword ptr [eax]	
add esi, ebx	
mov edi, 0xfefefeff	
jnb 0xb7ff61d7	
mov ebp, edi	
xor esi, ebx	
add ebp, ecx	
or esi, 0xfefefeff	
add esi, 0x1	
jnz 0xb7ff61d7	
START: 0xb7ff61f2
sub eax, 0x4	
cmp cl, dl	
jz 0xb7ff61ed	
cmp cl, 0x0	
jz 0xb7ff621a	
inc eax	
cmp ch, dl	
jz 0xb7ff61ed	
START: 0xb7ff6203
cmp ch, 0x0	
jz 0xb7ff621a	
shr ecx, 0x10	
inc eax	
cmp cl, dl	
jz 0xb7ff61ed	
cmp cl, 0x0	
jz 0xb7ff621a	
START: 0xb7ff621a
xor eax, eax	
jmp 0xb7ff61ed	
START: 0xb7ff61ed
pop ebp	
pop ebx	
pop esi	
pop edi	
ret 	
START: 0xb7feb33d
test eax, eax	
jnz 0xb7feb9da	
mov eax, dword ptr [ebp-0x4c]	
mov dword ptr [ebp-0x2c], eax	
lea eax, ptr [ebp-0x3c]	
mov dword ptr [esp+0x4], eax	
mov ecx, dword ptr [ebp-0x5c]	
lea edx, ptr [ebp-0x24]	
lea eax, ptr [ebp-0x20]	
mov dword ptr [esp], ecx	
lea ecx, ptr [ebp-0x19]	
call 0xb7fecc60	_dl_rtld_di_serinfo
START: 0xb7fecc60
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fecc67
add ebx, 0x1238d	
sub esp, 0xd4	
mov dword ptr [esp+0x14], eax	
mov dword ptr [esp+0x18], edx	
mov dword ptr [esp+0x1c], ecx	
mov dword ptr [esp+0x28], 0x0	
call dword ptr [ebx+0x544]	
START: 0xb7fdf220
call 0xb7ff6ba7	realloc
START: 0xb7ff6ba7
mov ecx, dword ptr [esp]	
ret 	
START: 0xb7fdf225
add ecx, 0x1fdcf	
lea eax, ptr [ecx+0x89c]	
ret 	
START: 0xb7fecc8d
mov dword ptr [esp+0x10], eax	
mov eax, dword ptr [eax]	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp+0xcc], eax	
lea eax, ptr [esp+0x30]	
mov dword ptr [esp], eax	
call 0xb7ff5e80	realloc
START: 0xb7ff5e80
mov eax, dword ptr [esp+0x4]	
mov dword ptr [eax], ebx	
mov dword ptr [eax+0x4], esi	
mov dword ptr [eax+0x8], edi	
lea ecx, ptr [esp+0x4]	
mov dword ptr [eax+0x10], ecx	
mov ecx, dword ptr [esp]	
mov dword ptr [eax+0x14], ecx	
mov dword ptr [eax+0xc], ebp	
xor eax, eax	
ret 	
START: 0xb7feccae
test eax, eax	
mov esi, eax	
jnz 0xb7fecd04	
mov edx, dword ptr [esp+0x10]	
lea eax, ptr [esp+0x24]	
mov dword ptr [edx], eax	
mov eax, dword ptr [esp+0xe4]	
mov dword ptr [esp], eax	
call dword ptr [esp+0xe0]	
START: 0xb7feb130
sub esp, 0x1c	
mov ecx, 0x1	
mov dword ptr [esp+0x10], esi	
mov esi, dword ptr [esp+0x20]	
mov dword ptr [esp+0x14], edi	
mov dword ptr [esp+0x18], ebp	
mov eax, dword ptr [esi]	
movzx edx, byte ptr [eax+0x194]	
mov edi, dword ptr [eax+0x18]	
and edx, 0x3	
test dl, dl	
movzx ebp, dl	
mov edx, dword ptr [esi+0x10]	
mov dword ptr [esp+0x8], edi	
mov edi, dword ptr [esi+0x8]	
cmovnz ecx, ebp	
mov dword ptr [esp+0x4], edi	
mov edi, dword ptr [esi+0x4]	
mov dword ptr [esp], edi	
call 0xb7fe61f0	.text
START: 0xb7fe61f0
push ebp	
mov ebp, eax	
push edi	
push esi	
mov esi, edx	
push ebx	
sub esp, 0x26c	
mov eax, dword ptr [esp+0x288]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe620a
add ebx, 0x18dea	
mov dword ptr [esp+0x30], ecx	
test eax, eax	
js 0xb7fe6ac9	
mov edx, dword ptr [esp+0x288]	
cmp edx, dword ptr [ebx+0x4ec]	
jnb 0xb7fe69d6	
imul eax, dword ptr [esp+0x288], 0x4c	
lea ecx, ptr [ebx+0x2c]	
mov dword ptr [esp+0x2c], ecx	
mov edi, dword ptr [eax+ebx*1+0x2c]	
test edi, edi	
jnz 0xb7fe6264	
START: 0xb7fe6264
movzx eax, byte ptr [edi+0x195]	
test al, 0x2	
jnz 0xb7fe625d	
test al, 0x20	
jnz 0xb7fe625d	
mov edx, edi	
mov eax, esi	
call 0xb7feddc0	_dl_debug_state
START: 0xb7feddc0
push edi	
mov edi, edx	
push esi	
mov esi, eax	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7feddcc
add ebx, 0x11228	
sub esp, 0x10	
mov eax, dword ptr [edx+0x4]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], eax	
call 0xb7ff6220	realloc
START: 0xb7ff6220
mov ecx, dword ptr [esp+0x4]	
mov edx, dword ptr [esp+0x8]	
mov al, byte ptr [ecx]	
cmp al, byte ptr [edx]	
jnz 0xb7ff6237	
inc ecx	
inc edx	
test al, al	
jnz 0xb7ff6228	
xor eax, eax	
ret 	
START: 0xb7ff6237
mov eax, 0x1	
mov ecx, 0xffffffff	
cmovb eax, ecx	
ret 	
START: 0xb7fedde4
mov edx, 0x1	
test eax, eax	
jz 0xb7fede16	
mov edi, dword ptr [edi+0x1c]	
xor dl, dl	
test edi, edi	
jnz 0xb7feddff	
jmp 0xb7fede16	
START: 0xb7feddff
mov eax, dword ptr [edi]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], eax	
call 0xb7ff6220	realloc
START: 0xb7fede0d
test eax, eax	
jnz 0xb7feddf8	
mov edx, 0x1	
add esp, 0x10	
mov eax, edx	
pop ebx	
pop esi	
pop edi	
ret 	
START: 0xb7feddf8
mov edi, dword ptr [edi+0x4]	
test edi, edi	
jz 0xb7fede20	
mov eax, dword ptr [edi]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], eax	
call 0xb7ff6220	realloc
START: 0xb7fede20
add esp, 0x10	
xor edx, edx	
pop ebx	
mov eax, edx	
pop esi	
pop edi	
ret 	
START: 0xb7fe627c
test eax, eax	
jz 0xb7fe6250	
add esp, 0x26c	
mov eax, edi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0xc	
START: 0xb7fe6250
test byte ptr [edi+0x195], 0x1	
jz 0xb7fe685f	
mov edi, dword ptr [edi+0xc]	
test edi, edi	
jz 0xb7fe6290	
movzx eax, byte ptr [edi+0x195]	
test al, 0x2	
jnz 0xb7fe625d	
START: 0xb7fe685f
mov edx, dword ptr [edi+0x58]	
test edx, edx	
jz 0xb7fe625d	
mov eax, dword ptr [edi+0x34]	
mov eax, dword ptr [eax+0x4]	
add eax, dword ptr [edx+0x4]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], eax	
call 0xb7ff6220	realloc
START: 0xb7fe625d
mov edi, dword ptr [edi+0xc]	
test edi, edi	
jz 0xb7fe6290	
movzx eax, byte ptr [edi+0x195]	
test al, 0x2	
jnz 0xb7fe625d	
test al, 0x20	
jnz 0xb7fe625d	
START: 0xb7fe6273
mov edx, edi	
mov eax, esi	
call 0xb7feddc0	_dl_debug_state
START: 0xb7ff6228
mov al, byte ptr [ecx]	
cmp al, byte ptr [edx]	
jnz 0xb7ff6237	
inc ecx	
inc edx	
test al, al	
jnz 0xb7ff6228	
xor eax, eax	
ret 	
START: 0xb7fe687f
test eax, eax	
jnz 0xb7fe625d	
mov edx, esi	
mov eax, edi	
call 0xb7fe3770	.text
START: 0xb7fe6290
test ebp, ebp	
setnz byte ptr [esp+0x37]	
jnz 0xb7fe63c8	
mov ecx, dword ptr [esp+0x284]	
and ecx, 0x10000000	
mov dword ptr [esp+0x38], ecx	
mov eax, dword ptr [ebx-0x198]	
test eax, eax	
jnz 0xb7fe6a67	
mov dword ptr [esp+0x4], 0x2f	
mov dword ptr [esp], esi	
mov byte ptr [esp+0x25f], 0x0	
call 0xb7ff6060	realloc
START: 0xb7fe63c8
test byte ptr [ebx-0x354], 0x40	
jz 0xb7fe629d	
mov edx, dword ptr [ebp+0x4]	
mov edi, dword ptr [ebp+0x18]	
cmp byte ptr [edx], 0x0	
jz 0xb7fe6424	
mov ecx, dword ptr [esp+0x284]	
lea eax, ptr [ebx-0x5360]	
mov dword ptr [esp+0xc], edx	
mov edx, dword ptr [esp+0x288]	
mov dword ptr [esp+0x10], edi	
mov dword ptr [esp+0x4], esi	
and ecx, 0x10000000	
mov dword ptr [esp+0x38], ecx	
lea ecx, ptr [ebx-0x5388]	
cmovz eax, ecx	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp], eax	
call 0xb7fedd10	_dl_debug_state
START: 0xb7fe629d
mov ecx, dword ptr [esp+0x284]	
and ecx, 0x10000000	
mov dword ptr [esp+0x38], ecx	
mov eax, dword ptr [ebx-0x198]	
test eax, eax	
jnz 0xb7fe6a67	
mov dword ptr [esp+0x4], 0x2f	
mov dword ptr [esp], esi	
mov byte ptr [esp+0x25f], 0x0	
call 0xb7ff6060	realloc
START: 0xb7fe62d4
test eax, eax	
jz 0xb7fe642e	
cmp byte ptr [esp+0x37], 0x0	
jz 0xb7fe6500	
mov edx, esi	
mov eax, ebp	
mov dword ptr [esp], 0x0	
call 0xb7fe59b0	.text
START: 0xb7fe642e
mov dword ptr [esp], esi	
call 0xb7ff62e0	realloc
START: 0xb7ff62e0
mov eax, dword ptr [esp+0x4]	
mov edx, 0x3	
and edx, eax	
jz 0xb7ff6311	
jp 0xb7ff6306	
cmp byte ptr [eax], dh	
jz 0xb7ff6396	
START: 0xb7ff6311
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
xor edx, ecx	
and edx, 0x1010100	
jnz 0xb7ff6379	
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
START: 0xb7ff633b
xor edx, ecx	
and edx, 0x1010100	
jnz 0xb7ff6379	
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
xor edx, ecx	
and edx, 0x1010100	
jnz 0xb7ff6379	
START: 0xb7ff6379
sub eax, 0x4	
sub ecx, 0xfefefeff	
cmp cl, 0x0	
jz 0xb7ff6396	
inc eax	
test ch, ch	
jz 0xb7ff6396	
shr ecx, 0x10	
inc eax	
cmp cl, 0x0	
jz 0xb7ff6396	
START: 0xb7ff6396
sub eax, dword ptr [esp+0x4]	
ret 	
START: 0xb7fe6436
add eax, 0x1	
test byte ptr [ebx-0x354], 0x1	
mov dword ptr [esp+0x40], eax	
jnz 0xb7fe6a45	
test ebp, ebp	
jz 0xb7fe6687	
mov eax, dword ptr [ebp+0x94]	
test eax, eax	
jz 0xb7fe6687	
START: 0xb7fe6687
mov ecx, dword ptr [ebx+0x2c]	
cmp byte ptr [esp+0x37], 0x0	
mov dword ptr [esp+0x44], ecx	
jz 0xb7fe6760	
lea eax, ptr [ebx-0x7014]	
mov edi, ebp	
mov dword ptr [esp+0x48], ebp	
mov ebp, eax	
mov byte ptr [esp+0x3c], 0x0	
mov dword ptr [esp+0x4c], esi	
jmp 0xb7fe66c6	
START: 0xb7fe66c6
lea esi, ptr [edi+0x198]	
mov eax, edi	
mov edx, esi	
mov dword ptr [esp+0x4], ebp	
mov dword ptr [esp], 0xf	
call 0xb7fe5cd0	.text
START: 0xb7fe5cd0
sub esp, 0x1c	
mov ecx, eax	
mov dword ptr [esp+0x14], esi	
mov esi, edx	
mov edx, dword ptr [edx]	
xor eax, eax	
mov dword ptr [esp+0x18], edi	
cmp edx, 0xffffffff	
jz 0xb7fe5cf1	
test edx, edx	
mov eax, 0x1	
jz 0xb7fe5d00	
mov esi, dword ptr [esp+0x14]	
mov edi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb7fe5cf1
mov esi, dword ptr [esp+0x14]	
mov edi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb7fe66e0
test al, al	
jz 0xb7fe66b8	
lea eax, ptr [esp+0x25f]	
mov edx, dword ptr [esp+0x40]	
mov dword ptr [esp+0x18], eax	
mov eax, dword ptr [esp+0x48]	
mov dword ptr [esp+0x14], 0x4	
mov dword ptr [esp+0x4], esi	
mov dword ptr [esp+0x10], eax	
lea eax, ptr [esp+0x50]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [esp+0x254]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esp+0x284]	
and eax, 0x4000000	
mov dword ptr [esp], eax	
mov eax, dword ptr [esp+0x4c]	
call 0xb7fe3e90	.text
START: 0xb7fe66b8
mov edi, dword ptr [edi+0x16c]	
test edi, edi	
jz 0xb7fe674d	
lea esi, ptr [edi+0x198]	
mov eax, edi	
mov edx, esi	
mov dword ptr [esp+0x4], ebp	
mov dword ptr [esp], 0xf	
call 0xb7fe5cd0	.text
START: 0xb7fe674d
cmp byte ptr [esp+0x3c], 0x0	
mov ebp, dword ptr [esp+0x48]	
mov esi, dword ptr [esp+0x4c]	
jnz 0xb7fe6460	
mov eax, dword ptr [esp+0x44]	
test eax, eax	
jz 0xb7fe6460	
mov ecx, dword ptr [esp+0x44]	
movzx eax, byte ptr [ecx+0x194]	
and eax, 0x3	
cmp al, 0x2	
jz 0xb7fe6460	
START: 0xb7fe6782
mov edi, ecx	
add edi, 0x198	
lea eax, ptr [ebx-0x7014]	
mov edx, edi	
mov dword ptr [esp+0x4], eax	
mov eax, ecx	
mov dword ptr [esp], 0xf	
call 0xb7fe5cd0	.text
START: 0xb7fe67a4
test al, al	
jz 0xb7fe6460	
mov eax, dword ptr [esp+0x44]	
lea edx, ptr [esp+0x25f]	
cmp byte ptr [esp+0x37], 0x0	
mov dword ptr [esp+0x18], edx	
mov edx, dword ptr [esp+0x40]	
mov dword ptr [esp+0x14], 0x4	
cmovnz eax, ebp	
mov dword ptr [esp+0x10], eax	
lea eax, ptr [esp+0x50]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [esp+0x254]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esp+0x284]	
mov dword ptr [esp+0x4], edi	
and eax, 0x4000000	
mov dword ptr [esp], eax	
mov eax, esi	
call 0xb7fe3e90	.text
START: 0xb7fe6460
cmp dword ptr [ebx-0xf0], 0xffffffff	
jz 0xb7fe6520	
cmp byte ptr [esp+0x37], 0x0	
mov eax, ebp	
cmovz eax, dword ptr [ebx+0x2c]	
lea edx, ptr [esp+0x25f]	
mov dword ptr [esp+0x18], edx	
mov edx, dword ptr [esp+0x40]	
mov dword ptr [esp+0x10], eax	
lea eax, ptr [esp+0x50]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [esp+0x254]	
mov dword ptr [esp+0x8], eax	
lea eax, ptr [ebx-0xf0]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [esp+0x284]	
mov dword ptr [esp+0x14], 0x2	
and eax, 0x4000000	
mov dword ptr [esp], eax	
mov eax, esi	
call 0xb7fe3e90	.text
START: 0xb7fe6520
mov edx, 0xffffffff	
cmp byte ptr [esp+0x37], 0x0	
jz 0xb7fe64d0	
lea eax, ptr [ebx-0x701c]	
lea edi, ptr [ebp+0x1e8]	
mov dword ptr [esp+0x4], eax	
mov edx, edi	
mov eax, ebp	
mov dword ptr [esp], 0x1d	
call 0xb7fe5cd0	.text
START: 0xb7fe654c
test al, al	
jnz 0xb7fe6810	
mov ecx, dword ptr [esp+0x284]	
and ecx, 0x4000000	
mov dword ptr [esp+0x44], ecx	
jnz 0xb7fe6927	
mov eax, esi	
call 0xb7fe6e50	_dl_rtld_di_serinfo
START: 0xb7fe6e50
push ebp	
push edi	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe6e59
add ebx, 0x1819b	
sub esp, 0x5c	
mov dword ptr [esp+0x20], eax	
test byte ptr [ebx-0x354], 0x1	
jnz 0xb7fe744a	
mov eax, dword ptr [ebx+0x8a4]	
test eax, eax	
mov dword ptr [esp+0x18], eax	
jz 0xb7fe7083	
cmp dword ptr [esp+0x18], 0xffffffff	
jz 0xb7fe6fc8	
START: 0xb7fe7083
mov ecx, 0x1	
lea edx, ptr [ebx+0x8a8]	
lea eax, ptr [ebx-0x6f53]	
call 0xb7fedc30	_dl_debug_state
START: 0xb7fedc30
sub esp, 0xac	
mov dword ptr [esp+0x9c], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fedc42
add ebx, 0x113b2	
mov dword ptr [esp+0xa0], esi	
mov esi, edx	
mov dword ptr [esp+0xa4], edi	
mov dword ptr [esp+0xa8], ebp	
mov ebp, ecx	
mov dword ptr [esp+0x4], 0x80000	
mov dword ptr [esp], eax	
call 0xb7ff5b70	realloc
START: 0xb7ff5b70
push ebx	
mov edx, dword ptr [esp+0x10]	
mov ecx, dword ptr [esp+0xc]	
mov ebx, dword ptr [esp+0x8]	
mov eax, 0x5	
int 0x80	
START: 0xb7ff5b84
pop ebx	
cmp eax, 0xfffff001	
jnb 0xb7ff5b8d	
ret 	
START: 0xb7fedc71
mov dword ptr [esp+0x2c], 0xffffffff	
test eax, eax	
mov edi, eax	
js 0xb7fedcad	
lea eax, ptr [esp+0x30]	
mov dword ptr [esp+0x8], eax	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], 0x3	
call 0xb7ff5af0	realloc
START: 0xb7ff5af0
push ebx	
mov ecx, dword ptr [esp+0x10]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff5afa
add ebx, 0x94fa	
mov edx, dword ptr [esp+0xc]	
xchg ebx, edx	
mov eax, 0xc5	
int 0x80	
START: 0xb7ff5b0d
xchg ebx, edx	
cmp eax, 0xfffff000	
jnbe 0xb7ff5b18	
pop ebx	
ret 	
START: 0xb7fedc97
test eax, eax	
js 0xb7fedca5	
mov eax, dword ptr [esp+0x5c]	
test eax, eax	
mov dword ptr [esi], eax	
jnz 0xb7fedcd8	
mov dword ptr [esp], edi	
call 0xb7ff5bb0	realloc
START: 0xb7fedcd8
mov dword ptr [esp+0x14], 0x0	
mov dword ptr [esp+0x10], edi	
mov dword ptr [esp+0xc], 0x2	
mov dword ptr [esp+0x8], ebp	
mov dword ptr [esp+0x4], eax	
mov dword ptr [esp], 0x0	
call 0xb7ff5d40	realloc
START: 0xb7ff5d40
push ebp	
push ebx	
push esi	
push edi	
mov ebx, dword ptr [esp+0x14]	
mov ecx, dword ptr [esp+0x18]	
mov edx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
test ebp, 0xfff	
mov eax, 0xffffffea	
jnz 0xb7ff5d73	
shr ebp, 0xc	
mov eax, 0xc0	
int 0x80	
START: 0xb7ff5d73
pop edi	
pop esi	
pop ebx	
pop ebp	
cmp eax, 0xfffff000	
jnbe 0xb7ff5d7f	
ret 	
START: 0xb7fedd00
mov dword ptr [esp+0x2c], eax	
jmp 0xb7fedca5	
START: 0xb7fedca5
mov dword ptr [esp], edi	
call 0xb7ff5bb0	realloc
START: 0xb7ff5bb0
mov edx, ebx	
mov ebx, dword ptr [esp+0x4]	
mov eax, 0x6	
int 0x80	
START: 0xb7ff5bbd
mov ebx, edx	
cmp eax, 0xfffff001	
jnb 0xb7ff5bc7	
ret 	
START: 0xb7fedcad
mov eax, dword ptr [esp+0x2c]	
mov ebx, dword ptr [esp+0x9c]	
mov esi, dword ptr [esp+0xa0]	
mov edi, dword ptr [esp+0xa4]	
mov ebp, dword ptr [esp+0xa8]	
add esp, 0xac	
ret 	
START: 0xb7fe7099
cmp eax, 0xffffffff	
mov dword ptr [esp+0x18], eax	
jz 0xb7fe7184	
mov edx, dword ptr [ebx+0x8a8]	
cmp edx, 0x10	
mov dword ptr [esp+0x2c], edx	
jbe 0xb7fe7170	
lea eax, ptr [ebx-0x6f30]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [esp+0x18]	
mov dword ptr [esp+0x8], 0xb	
mov dword ptr [esp], eax	
call 0xb7ff65e0	realloc
START: 0xb7ff65e0
push ebx	
mov eax, dword ptr [esp+0x8]	
mov edx, dword ptr [esp+0xc]	
mov ecx, dword ptr [esp+0x10]	
cmp ecx, 0x1	
jnz 0xb7ff6604	
movzx ecx, byte ptr [eax]	
cmp cl, byte ptr [edx]	
jnz 0xb7ff65fd	
xor eax, eax	
pop ebx	
ret 	
START: 0xb7ff6604
jl 0xb7ff65f9	
push esi	
mov esi, eax	
cmp ecx, 0x20	
jnl 0xb7ff6820	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff6617
add ebx, 0x1269	
add ebx, dword ptr [ebx+ecx*4]	
add edx, ecx	
add esi, ecx	
jmp ebx	
START: 0xb7ff67d0
mov eax, dword ptr [esi-0xb]	
mov ecx, dword ptr [edx-0xb]	
cmp eax, ecx	
jnz 0xb7ff6897	
mov eax, dword ptr [esi-0x7]	
mov ecx, dword ptr [edx-0x7]	
cmp eax, ecx	
jnz 0xb7ff6897	
movzx eax, word ptr [esi-0x3]	
movzx ecx, word ptr [edx-0x3]	
cmp al, cl	
jnz 0xb7ff68ab	
START: 0xb7ff67fc
cmp eax, ecx	
jnz 0xb7ff68ab	
movzx eax, byte ptr [esi-0x1]	
cmp al, byte ptr [edx-0x1]	
jnz 0xb7ff68ab	
pop esi	
xor eax, eax	
pop ebx	
ret 	
START: 0xb7fe70d7
test eax, eax	
jnz 0xb7fe7195	
mov eax, dword ptr [esp+0x18]	
mov dword ptr [ebx+0x8a4], eax	
mov eax, dword ptr [eax+0xc]	
lea eax, ptr [eax+eax*2]	
lea edx, ptr [eax*4+0x10]	
mov eax, dword ptr [esp+0x18]	
add eax, edx	
add edx, 0x30	
cmp dword ptr [esp+0x2c], edx	
mov dword ptr [ebx+0x8ac], eax	
jb 0xb7fe7129	
lea edx, ptr [ebx-0x6f24]	
mov dword ptr [esp+0x8], 0x14	
mov dword ptr [esp+0x4], edx	
mov dword ptr [esp], eax	
call 0xb7ff65e0	realloc
START: 0xb7ff664c
mov eax, dword ptr [esi-0x14]	
mov ecx, dword ptr [edx-0x14]	
cmp eax, ecx	
jnz 0xb7ff6897	
mov eax, dword ptr [esi-0x10]	
mov ecx, dword ptr [edx-0x10]	
cmp eax, ecx	
jnz 0xb7ff6897	
mov eax, dword ptr [esi-0xc]	
mov ecx, dword ptr [edx-0xc]	
cmp eax, ecx	
jnz 0xb7ff6897	
START: 0xb7ff6676
mov eax, dword ptr [esi-0x8]	
mov ecx, dword ptr [edx-0x8]	
cmp eax, ecx	
jnz 0xb7ff6897	
mov eax, dword ptr [esi-0x4]	
mov ecx, dword ptr [edx-0x4]	
cmp eax, ecx	
jnz 0xb7ff6897	
pop esi	
xor eax, eax	
pop ebx	
ret 	
START: 0xb7fe7125
test eax, eax	
jz 0xb7fe7133	
mov dword ptr [ebx+0x8ac], 0xffffffff	
mov edi, dword ptr [esp+0x18]	
test edi, edi	
jnz 0xb7fe6e9a	
lea eax, ptr [ebx-0x6edc]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [ebx-0x6f0f]	
mov dword ptr [esp+0x4], eax	
lea eax, ptr [ebx-0x6f04]	
mov dword ptr [esp+0x8], 0xec	
mov dword ptr [esp], eax	
call 0xb7ff39d0	free
START: 0xb7fe7133
mov edi, dword ptr [esp+0x18]	
test edi, edi	
jnz 0xb7fe6e9a	
lea eax, ptr [ebx-0x6edc]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [ebx-0x6f0f]	
mov dword ptr [esp+0x4], eax	
lea eax, ptr [ebx-0x6f04]	
mov dword ptr [esp+0x8], 0xec	
mov dword ptr [esp], eax	
call 0xb7ff39d0	free
START: 0xb7fe6e9a
mov ecx, dword ptr [ebx+0x8ac]	
cmp ecx, 0xffffffff	
mov dword ptr [esp+0x1c], ecx	
jz 0xb7fe6fd8	
mov esi, dword ptr [ebx-0x34c]	
mov dword ptr [esp+0x30], 0xffffffff	
mov dword ptr [esp+0x34], 0xffffffff	
test esi, esi	
jz 0xb7fe6efe	
lea edi, ptr [ebx-0x208]	
xor ebp, ebp	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], esi	
call 0xb7ff6220	realloc
START: 0xb7fe6edb
test eax, eax	
jz 0xb7fe7062	
add ebp, 0x1	
add edi, 0x5	
cmp ebp, 0x4	
jnz 0xb7fe6ecf	
mov dword ptr [esp+0x30], 0xffffffff	
mov dword ptr [esp+0x34], 0xffffffff	
lea eax, ptr [ebx-0x6eef]	
xor ebp, ebp	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp], eax	
call 0xb7ff5cb0	realloc
START: 0xb7fe6ecf
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], esi	
call 0xb7ff6220	realloc
START: 0xb7fe6edb
test eax, eax	
jz 0xb7fe7062	
add ebp, 0x1	
add edi, 0x5	
cmp ebp, 0x4	
jnz 0xb7fe6ecf	
mov dword ptr [esp+0x30], 0xffffffff	
mov dword ptr [esp+0x34], 0xffffffff	
lea eax, ptr [ebx-0x6eef]	
xor ebp, ebp	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp], eax	
call 0xb7ff5cb0	realloc
START: 0xb7fe7062
lea ecx, ptr [ebp+0x30]	
xor eax, eax	
xor edx, edx	
test cl, 0x20	
setz al	
setnz dl	
shl edx, cl	
shl eax, cl	
mov dword ptr [esp+0x30], eax	
mov dword ptr [esp+0x34], edx	
jmp 0xb7fe6efe	
START: 0xb7fe6efe
lea eax, ptr [ebx-0x6eef]	
xor ebp, ebp	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp], eax	
call 0xb7ff5cb0	realloc
START: 0xb7fe6f16
mov ecx, dword ptr [ebx-0x310]	
mov edx, dword ptr [ebx+0x8ac]	
mov edi, dword ptr [edx+0x14]	
mov dword ptr [esp+0x38], eax	
mov eax, dword ptr [ebx-0x318]	
and ecx, eax	
mov eax, dword ptr [ebx-0x314]	
mov dword ptr [esp+0x28], ecx	
mov ecx, dword ptr [ebx-0x30c]	
not dword ptr [esp+0x28]	
and ecx, eax	
or ecx, 0x800f0000	
sub edi, 0x1	
not ecx	
mov dword ptr [esp+0x24], ecx	
js 0xb7fe6fca	
mov ecx, dword ptr [esp+0x18]	
mov esi, edi	
mov eax, dword ptr [esp+0x1c]	
sar esi, 0x1	
add ecx, dword ptr [esp+0x2c]	
sub ecx, eax	
lea eax, ptr [esi+esi*2]	
mov edx, dword ptr [edx+eax*8+0x34]	
mov dword ptr [esp+0x18], ecx	
cmp edx, ecx	
jb 0xb7fe6fa8	
jmp 0xb7fe6fca	
START: 0xb7fe6fa8
mov eax, dword ptr [esp+0x20]	
add edx, dword ptr [esp+0x1c]	
call 0xb7fe6cf0	_dl_rtld_di_serinfo
START: 0xb7fe6cf0
push ebp	
push edi	
push esi	
sub esp, 0x8	
data16 nop 	
movzx ecx, byte ptr [eax]	
test cl, cl	
mov byte ptr [esp], cl	
jz 0xb7fe6e08	
movzx ecx, byte ptr [esp]	
movzx edi, byte ptr [edx]	
lea esi, ptr [ecx-0x30]	
mov ecx, esi	
cmp cl, 0x9	
lea esi, ptr [edi-0x30]	
mov ecx, esi	
jnbe 0xb7fe6de8	
cmp cl, 0x9	
jnbe 0xb7fe6e35	
START: 0xb7fe6de8
cmp cl, 0x9	
jbe 0xb7fe6e14	
mov ecx, edi	
cmp byte ptr [esp], cl	
jnz 0xb7fe6e20	
add eax, 0x1	
add edx, 0x1	
movzx ecx, byte ptr [eax]	
test cl, cl	
mov byte ptr [esp], cl	
jnz 0xb7fe6d06	
START: 0xb7fe6d06
movzx ecx, byte ptr [esp]	
movzx edi, byte ptr [edx]	
lea esi, ptr [ecx-0x30]	
mov ecx, esi	
cmp cl, 0x9	
lea esi, ptr [edi-0x30]	
mov ecx, esi	
jnbe 0xb7fe6de8	
cmp cl, 0x9	
jnbe 0xb7fe6e35	
mov ecx, edi	
movsx esi, byte ptr [esp]	
movsx edi, cl	
sub edi, 0x30	
mov dword ptr [esp+0x4], edi	
lea edi, ptr [edx+0x1]	
mov dword ptr [esp], edi	
movzx edi, byte ptr [eax+0x1]	
sub esi, 0x30	
add eax, 0x1	
lea ebp, ptr [edi-0x30]	
mov ecx, ebp	
cmp cl, 0x9	
jnbe 0xb7fe6d88	
START: 0xb7fe6e20
movzx ecx, byte ptr [esp]	
mov edx, edi	
add esp, 0x8	
movsx edi, dl	
pop esi	
movsx eax, cl	
sub eax, edi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe6fb5
cmp eax, 0x0	
jz 0xb7fe71d3	
jnl 0xb7fe6f80	
lea ebp, ptr [esi+0x1]	
cmp edi, ebp	
jnl 0xb7fe6f87	
START: 0xb7fe6f87
lea eax, ptr [edi+ebp*1]	
mov edx, dword ptr [ebx+0x8ac]	
mov esi, eax	
shr esi, 0x1f	
add esi, eax	
sar esi, 0x1	
lea eax, ptr [esi+esi*2]	
lea eax, ptr [edx+eax*8]	
mov edx, dword ptr [eax+0x34]	
cmp dword ptr [esp+0x18], edx	
jbe 0xb7fe6fc8	
mov eax, dword ptr [esp+0x20]	
add edx, dword ptr [esp+0x1c]	
call 0xb7fe6cf0	_dl_rtld_di_serinfo
START: 0xb7fe6f80
lea edi, ptr [esi-0x1]	
cmp edi, ebp	
jl 0xb7fe6fc8	
lea eax, ptr [edi+ebp*1]	
mov edx, dword ptr [ebx+0x8ac]	
mov esi, eax	
shr esi, 0x1f	
add esi, eax	
sar esi, 0x1	
lea eax, ptr [esi+esi*2]	
lea eax, ptr [edx+eax*8]	
mov edx, dword ptr [eax+0x34]	
cmp dword ptr [esp+0x18], edx	
jbe 0xb7fe6fc8	
mov eax, dword ptr [esp+0x20]	
add edx, dword ptr [esp+0x1c]	
call 0xb7fe6cf0	_dl_rtld_di_serinfo
START: 0xb7fe6d88
movzx edi, byte ptr [edx+0x1]	
mov edx, dword ptr [esp]	
lea ebp, ptr [edi-0x30]	
mov ecx, ebp	
cmp cl, 0x9	
jnbe 0xb7fe6dcf	
mov ecx, dword ptr [esp+0x4]	
mov ebp, eax	
mov eax, edi	
lea esi, ptr [esi]	
add dword ptr [esp], 0x1	
movsx eax, al	
mov edx, dword ptr [esp]	
lea ecx, ptr [ecx+ecx*4]	
lea ecx, ptr [eax+ecx*2-0x30]	
movzx eax, byte ptr [edx]	
lea edi, ptr [eax-0x30]	
mov edx, edi	
cmp dl, 0x9	
jbe 0xb7fe6da8	
mov edx, dword ptr [esp]	
mov eax, ebp	
mov dword ptr [esp+0x4], ecx	
cmp esi, dword ptr [esp+0x4]	
jz 0xb7fe6cf8	
START: 0xb7fe6dcf
cmp esi, dword ptr [esp+0x4]	
jz 0xb7fe6cf8	
mov ecx, dword ptr [esp+0x4]	
mov eax, esi	
add esp, 0x8	
pop esi	
pop edi	
pop ebp	
sub eax, ecx	
ret 	
START: 0xb7fe6cf8
movzx ecx, byte ptr [eax]	
test cl, cl	
mov byte ptr [esp], cl	
jz 0xb7fe6e08	
movzx ecx, byte ptr [esp]	
movzx edi, byte ptr [edx]	
lea esi, ptr [ecx-0x30]	
mov ecx, esi	
cmp cl, 0x9	
lea esi, ptr [edi-0x30]	
mov ecx, esi	
jnbe 0xb7fe6de8	
cmp cl, 0x9	
jnbe 0xb7fe6e35	
START: 0xb7fe6e08
movsx eax, byte ptr [edx]	
add esp, 0x8	
pop esi	
pop edi	
pop ebp	
neg eax	
ret 	
START: 0xb7fe71d3
test esi, esi	
mov edx, dword ptr [ebx+0x8ac]	
mov dword ptr [esp+0x40], esi	
jle 0xb7fe722e	
lea ebp, ptr [esi-0x1]	
lea eax, ptr [ebp+ebp*2]	
mov eax, dword ptr [edx+eax*8+0x34]	
cmp dword ptr [esp+0x18], eax	
jnbe 0xb7fe7215	
jmp 0xb7fe722e	
START: 0xb7fe7215
mov edx, dword ptr [esp+0x1c]	
add edx, eax	
mov eax, dword ptr [esp+0x20]	
call 0xb7fe6cf0	_dl_rtld_di_serinfo
START: 0xb7fe7224
test eax, eax	
jz 0xb7fe71f8	
mov edx, dword ptr [ebx+0x8ac]	
mov ecx, dword ptr [esp+0x30]	
xor ebp, ebp	
mov dword ptr [esp+0x48], edi	
mov dword ptr [esp+0x4c], ecx	
jmp 0xb7fe7244	
START: 0xb7fe7244
cmp esi, dword ptr [esp+0x40]	
lea eax, ptr [esi+esi*2]	
lea edi, ptr [edx+eax*8+0x30]	
jle 0xb7fe726d	
mov eax, dword ptr [edi+0x4]	
cmp dword ptr [esp+0x18], eax	
jbe 0xb7fe729b	
mov edx, dword ptr [esp+0x1c]	
add edx, eax	
mov eax, dword ptr [esp+0x20]	
call 0xb7fe6cf0	_dl_rtld_di_serinfo
START: 0xb7fe726d
mov ecx, dword ptr [edi]	
cmp ecx, 0x3	
jz 0xb7fe7279	
cmp ecx, 0x1	
jnz 0xb7fe7292	
mov eax, dword ptr [edi+0x8]	
cmp dword ptr [esp+0x18], eax	
mov dword ptr [esp+0x3c], eax	
jbe 0xb7fe7292	
START: 0xb7fe7279
mov eax, dword ptr [edi+0x8]	
cmp dword ptr [esp+0x18], eax	
mov dword ptr [esp+0x3c], eax	
jbe 0xb7fe7292	
test ebp, ebp	
jz 0xb7fe72cc	
cmp dword ptr [ebx-0x31c], ecx	
jz 0xb7fe72cc	
START: 0xb7fe72cc
mov eax, dword ptr [edi+0x14]	
mov edx, dword ptr [edi+0x10]	
mov dword ptr [esp+0x2c], eax	
mov eax, dword ptr [esp+0x28]	
mov dword ptr [esp+0x44], edx	
and eax, edx	
mov edx, dword ptr [esp+0x24]	
and edx, dword ptr [esp+0x2c]	
or edx, eax	
jnz 0xb7fe7292	
mov eax, dword ptr [ebx-0x350]	
test eax, eax	
jz 0xb7fe72fb	
cmp eax, dword ptr [edi+0xc]	
jb 0xb7fe7292	
START: 0xb7fe72fb
mov edi, dword ptr [esp+0x38]	
test edi, edi	
jnz 0xb7fe740a	
mov edx, dword ptr [esp+0x2c]	
or edx, dword ptr [esp+0x44]	
jnz 0xb7fe7292	
mov ebp, dword ptr [esp+0x1c]	
add ebp, dword ptr [esp+0x3c]	
cmp dword ptr [ebx-0x31c], ecx	
jnz 0xb7fe7292	
START: 0xb7fe740a
mov eax, dword ptr [esp+0x2c]	
and eax, 0xf0000	
jz 0xb7fe7311	
xor eax, dword ptr [esp+0x34]	
or eax, dword ptr [esp+0x4c]	
jnz 0xb7fe7292	
jmp 0xb7fe7311	
START: 0xb7fe7311
mov ebp, dword ptr [esp+0x1c]	
add ebp, dword ptr [esp+0x3c]	
cmp dword ptr [ebx-0x31c], ecx	
jnz 0xb7fe7292	
jmp 0xb7fe729b	
START: 0xb7fe729b
test ebp, ebp	
jz 0xb7fe6fca	
test byte ptr [ebx-0x354], 0x1	
jz 0xb7fe6fca	
lea eax, ptr [ebx-0x7121]	
mov dword ptr [esp+0x4], ebp	
mov dword ptr [esp], eax	
call 0xb7fedd10	_dl_debug_state
START: 0xb7fe6fca
add esp, 0x5c	
mov eax, ebp	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe6572
test eax, eax	
mov dword ptr [esp+0x3c], eax	
jz 0xb7fe65ff	
cmp byte ptr [esp+0x37], 0x0	
mov eax, ebp	
jz 0xb7fe68ab	
test byte ptr [eax+0x205], 0x8	
jnz 0xb7fe68d5	
START: 0xb7fe6598
cmp byte ptr [esp+0x37], 0x0	
mov eax, ebp	
jz 0xb7fe68c1	
mov dword ptr [esp], eax	
mov eax, dword ptr [esp+0x3c]	
lea edx, ptr [esp+0x25f]	
mov dword ptr [esp+0x8], edx	
lea edx, ptr [esp+0x50]	
mov dword ptr [esp+0xc], 0x0	
mov dword ptr [esp+0x4], 0x8	
call 0xb7fe38e0	.text
START: 0xb7fe38e0
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
sub esp, 0x4c	
mov esi, dword ptr [ebp+0xc]	
movzx ecx, byte ptr [ebp+0x14]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe38f5
add ebx, 0x1b6ff	
mov dword ptr [ebp-0x2c], eax	
test esi, esi	
mov dword ptr [ebp-0x24], edx	
mov byte ptr [ebp-0x2d], cl	
jz 0xb7fe3968	
mov ecx, dword ptr [ebx-0x198]	
test ecx, ecx	
jz 0xb7fe3968	
mov edx, dword ptr [ebp+0x8]	
test byte ptr [edx+0x195], 0x8	
jnz 0xb7fe3968	
START: 0xb7fe3968
mov eax, dword ptr [ebp-0x2c]	
mov dword ptr [esp+0x4], 0x80000	
mov dword ptr [esp], eax	
call 0xb7ff5b70	realloc
START: 0xb7fe397b
cmp eax, 0xffffffff	
mov dword ptr [ebp-0x20], eax	
jz 0xb7fe3b74	
mov edi, dword ptr [ebp-0x24]	
mov dword ptr [ebx+0x90c], 0x0	
mov dword ptr [esp+0x8], 0x200	
mov dword ptr [esp], eax	
add edi, 0x4	
mov dword ptr [esp+0x4], edi	
call 0xb7ff5bf0	realloc
START: 0xb7ff5bf0
push ebx	
mov edx, dword ptr [esp+0x10]	
mov ecx, dword ptr [esp+0xc]	
mov ebx, dword ptr [esp+0x8]	
mov eax, 0x3	
int 0x80	
START: 0xb7ff5c04
pop ebx	
cmp eax, 0xfffff001	
jnb 0xb7ff5c0d	
ret 	
START: 0xb7fe39ab
mov edx, dword ptr [ebp-0x24]	
cmp eax, 0x33	
mov esi, eax	
mov dword ptr [edx], eax	
jle 0xb7fe3d2a	
lea eax, ptr [ebx-0x7eb6]	
mov dword ptr [esp+0x8], 0x8	
mov dword ptr [esp+0x4], eax	
mov dword ptr [esp], edi	
call 0xb7ff65e0	realloc
START: 0xb7ff6676
mov eax, dword ptr [esi-0x8]	
mov ecx, dword ptr [edx-0x8]	
cmp eax, ecx	
jnz 0xb7ff6897	
mov eax, dword ptr [esi-0x4]	
mov ecx, dword ptr [edx-0x4]	
cmp eax, ecx	
jnz 0xb7ff6897	
pop esi	
xor eax, eax	
pop ebx	
ret 	
START: 0xb7fe39d5
test eax, eax	
jnz 0xb7fe3de0	
mov edx, dword ptr [ebp-0x24]	
movzx eax, byte ptr [edx+0xc]	
test al, al	
jnz 0xb7fe3b7f	
lea eax, ptr [ebx-0x7ead]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [ebp-0x24]	
mov dword ptr [esp+0x8], 0x7	
add eax, 0xd	
mov dword ptr [esp], eax	
call 0xb7ff65e0	realloc
START: 0xb7ff67de
mov eax, dword ptr [esi-0x7]	
mov ecx, dword ptr [edx-0x7]	
cmp eax, ecx	
jnz 0xb7ff6897	
movzx eax, word ptr [esi-0x3]	
movzx ecx, word ptr [edx-0x3]	
cmp al, cl	
jnz 0xb7ff68ab	
cmp eax, ecx	
jnz 0xb7ff68ab	
START: 0xb7ff6804
movzx eax, byte ptr [esi-0x1]	
cmp al, byte ptr [edx-0x1]	
jnz 0xb7ff68ab	
pop esi	
xor eax, eax	
pop ebx	
ret 	
START: 0xb7fe3a0c
test eax, eax	
jnz 0xb7fe3b90	
mov edx, dword ptr [ebp-0x24]	
cmp dword ptr [edx+0x18], 0x1	
jnz 0xb7fe3cb5	
cmp word ptr [edx+0x16], 0x3	
jnz 0xb7fe3b58	
START: 0xb7fe3a2c
movzx eax, word ptr [edx+0x14]	
cmp ax, 0x3	
jnz 0xb7fe3cf9	
mov edx, dword ptr [ebp-0x24]	
cmp word ptr [edx+0x2e], 0x20	
jnz 0xb7fe3d8b	
movzx eax, word ptr [edx+0x30]	
mov edx, dword ptr [edx+0x20]	
mov edi, eax	
shl edi, 0x5	
lea ecx, ptr [edi+edx*1]	
cmp ecx, esi	
jnbe 0xb7fe3bb8	
START: 0xb7fe3a5f
mov ecx, dword ptr [ebp-0x24]	
lea edx, ptr [ecx+edx*1+0x4]	
mov dword ptr [ebp-0x1c], edx	
add edi, dword ptr [ebp-0x1c]	
cmp dword ptr [ebp-0x1c], edi	
jnb 0xb7fe3b74	
mov esi, dword ptr [ebp-0x1c]	
jmp 0xb7fe3a93	
START: 0xb7fe3a93
cmp dword ptr [esi], 0x4	
jnz 0xb7fe3a80	
mov edi, dword ptr [esi+0x10]	
cmp edi, 0x1f	
jbe 0xb7fe3a80	
cmp dword ptr [esi+0x1c], 0x3	
jbe 0xb7fe3a80	
START: 0xb7fe3a80
mov edx, eax	
add esi, 0x20	
shl edx, 0x5	
add edx, dword ptr [ebp-0x1c]	
cmp esi, edx	
jnb 0xb7fe3b74	
cmp dword ptr [esi], 0x4	
jnz 0xb7fe3a80	
mov edi, dword ptr [esi+0x10]	
cmp edi, 0x1f	
jbe 0xb7fe3a80	
START: 0xb7fe3aa0
cmp dword ptr [esi+0x1c], 0x3	
jbe 0xb7fe3a80	
mov eax, dword ptr [esi+0x4]	
mov ecx, dword ptr [ebp-0x24]	
lea edx, ptr [eax+edi*1]	
cmp edx, dword ptr [ecx]	
jnbe 0xb7fe3c40	
lea edx, ptr [ecx+eax*1+0x4]	
lea ecx, ptr [ebx-0x7e9c]	
mov dword ptr [ebp-0x34], esi	
mov esi, edx	
mov dword ptr [ebp-0x28], ecx	
jmp 0xb7fe3af4	
START: 0xb7fe3af4
mov ecx, dword ptr [ebp-0x28]	
mov dword ptr [esp+0x8], 0x10	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], ecx	
call 0xb7ff65e0	realloc
START: 0xb7ff665a
mov eax, dword ptr [esi-0x10]	
mov ecx, dword ptr [edx-0x10]	
cmp eax, ecx	
jnz 0xb7ff6897	
mov eax, dword ptr [esi-0xc]	
mov ecx, dword ptr [edx-0xc]	
cmp eax, ecx	
jnz 0xb7ff6897	
mov eax, dword ptr [esi-0x8]	
mov ecx, dword ptr [edx-0x8]	
cmp eax, ecx	
jnz 0xb7ff6897	
START: 0xb7ff6897
cmp al, cl	
jnz 0xb7ff68ab	
cmp ah, ch	
jnz 0xb7ff68ab	
shr eax, 0x10	
shr ecx, 0x10	
cmp al, cl	
jnz 0xb7ff68ab	
START: 0xb7ff68ab
sbb eax, eax	
sbb eax, 0xffffffff	
pop esi	
pop ebx	
ret 	
START: 0xb7fe3b0b
test eax, eax	
jnz 0xb7fe3ad0	
test edi, edi	
mov edx, esi	
mov esi, dword ptr [ebp-0x34]	
jz 0xb7fe3ca9	
mov esi, dword ptr [edx+0x14]	
mov ecx, dword ptr [edx+0x18]	
mov eax, dword ptr [edx+0x1c]	
mov edx, dword ptr [edx+0x10]	
test edx, edx	
jnz 0xb7fe3b58	
START: 0xb7fe3ad0
mov edx, dword ptr [esi]	
mov eax, dword ptr [esi+0x4]	
add edx, 0x3	
add eax, 0x3	
and edx, 0xfffffffc	
and eax, 0xfffffffc	
lea eax, ptr [edx+eax*1+0xc]	
lea edx, ptr [edi-0x20]	
cmp eax, edx	
jnbe 0xb7fe3c30	
sub edi, eax	
add esi, eax	
mov ecx, dword ptr [ebp-0x28]	
mov dword ptr [esp+0x8], 0x10	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], ecx	
call 0xb7ff65e0	realloc
START: 0xb7ff6684
mov eax, dword ptr [esi-0x4]	
mov ecx, dword ptr [edx-0x4]	
cmp eax, ecx	
jnz 0xb7ff6897	
pop esi	
xor eax, eax	
pop ebx	
ret 	
START: 0xb7fe3b2c
mov edx, dword ptr [ebx-0x350]	
test edx, edx	
jz 0xb7fe3b74	
and esi, 0xff	
and ecx, 0xff	
shl esi, 0x8	
and eax, 0xff	
add ecx, esi	
shl ecx, 0x8	
add ecx, eax	
cmp ecx, edx	
jbe 0xb7fe3b74	
lea esi, ptr [esi]	
mov eax, dword ptr [ebp-0x20]	
mov dword ptr [esp], eax	
call 0xb7ff5bb0	realloc
START: 0xb7fe3b74
mov eax, dword ptr [ebp-0x20]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe65d0
cmp eax, 0xffffffff	
mov edx, eax	
jz 0xb7fe65ff	
mov eax, dword ptr [esp+0x3c]	
mov dword ptr [esp+0x24], edx	
call 0xb7fe3400	.text
START: 0xb7fe3400
sub esp, 0x1c	
mov dword ptr [esp+0x10], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe340c
add ebx, 0x1bbe8	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x14], esi	
mov esi, eax	
mov dword ptr [esp+0x18], edi	
call 0xb7ff62e0	realloc
START: 0xb7ff6306
cmp byte ptr [eax], dh	
jz 0xb7ff6396	
inc eax	
xor edx, edx	
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
xor edx, ecx	
and edx, 0x1010100	
jnz 0xb7ff6379	
START: 0xb7ff632b
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
xor edx, ecx	
and edx, 0x1010100	
jnz 0xb7ff6379	
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
START: 0xb7ff6355
xor edx, ecx	
and edx, 0x1010100	
jnz 0xb7ff6379	
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
xor edx, ecx	
and edx, 0x1010100	
jz 0xb7ff6311	
START: 0xb7ff635f
mov ecx, dword ptr [eax]	
add eax, 0x4	
sub edx, ecx	
add ecx, 0xfefefeff	
dec edx	
jnb 0xb7ff6379	
xor edx, ecx	
and edx, 0x1010100	
jz 0xb7ff6311	
sub eax, 0x4	
sub ecx, 0xfefefeff	
cmp cl, 0x0	
jz 0xb7ff6396	
START: 0xb7fe3424
lea edi, ptr [eax+0x1]	
mov dword ptr [esp], edi	
call 0xb7fde7d0	.plt
START: 0xb7fde7d0
jmp dword ptr [ebx+0x10]	
START: 0xb7ff38d0
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff38d6
add ebx, 0xb71e	
sub esp, 0x18	
mov eax, dword ptr [esp+0x20]	
mov dword ptr [esp], 0x8	
mov dword ptr [esp+0x4], eax	
call 0xb7fde7c0	.plt
START: 0xb7fde7c0
jmp dword ptr [ebx+0xc]	
START: 0xb7ff37c0
sub esp, 0x2c	
mov dword ptr [esp+0x20], ebx	
mov eax, dword ptr [esp+0x30]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff37d0
add ebx, 0xb824	
mov dword ptr [esp+0x24], esi	
mov esi, dword ptr [esp+0x34]	
mov dword ptr [esp+0x28], edi	
mov ecx, dword ptr [ebx+0x8e8]	
mov edx, dword ptr [ebx+0x8ec]	
test ecx, ecx	
jz 0xb7ff3898	
lea edx, ptr [edx+eax*1-0x1]	
neg eax	
and edx, eax	
lea eax, ptr [edx+esi*1]	
cmp eax, ecx	
mov dword ptr [ebx+0x8ec], edx	
jnb 0xb7ff3813	
mov ecx, edx	
neg ecx	
cmp esi, ecx	
jb 0xb7ff3878	
START: 0xb7ff3878
mov dword ptr [ebx+0x8f0], edx	
mov dword ptr [ebx+0x8ec], eax	
mov eax, edx	
mov ebx, dword ptr [esp+0x20]	
mov esi, dword ptr [esp+0x24]	
mov edi, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb7ff38f3
add esp, 0x18	
pop ebx	
ret 	
START: 0xb7fe342f
mov edx, eax	
xor eax, eax	
test edx, edx	
jz 0xb7fe3447	
mov dword ptr [esp+0x8], edi	
mov dword ptr [esp+0x4], esi	
mov dword ptr [esp], edx	
call 0xb7ff6a30	realloc
START: 0xb7ff6a30
mov eax, edi	
mov edi, dword ptr [esp+0x4]	
mov edx, esi	
mov esi, dword ptr [esp+0x8]	
mov ecx, edi	
xor ecx, esi	
and ecx, 0x3	
mov ecx, dword ptr [esp+0xc]	
cld 	
jnz 0xb7ff6a86	
cmp ecx, 0x3	
jbe 0xb7ff6a86	
test esi, 0x3	
jz 0xb7ff6a6d	
START: 0xb7ff6a86
shr ecx, 0x1	
jnb 0xb7ff6a8b	
movsb byte ptr [edi], byte ptr [esi]	
shr ecx, 0x1	
jnb 0xb7ff6a91	
movsw word ptr [edi], word ptr [esi]	
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff6a8b
shr ecx, 0x1	
jnb 0xb7ff6a91	
movsw word ptr [edi], word ptr [esi]	
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff6a91
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff6a93
jmp 0xb7ff6a7d	
START: 0xb7ff6a7d
mov edi, eax	
mov esi, edx	
mov eax, dword ptr [esp+0x4]	
ret 	
START: 0xb7fe3447
mov ebx, dword ptr [esp+0x10]	
mov esi, dword ptr [esp+0x14]	
mov edi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb7fe65e4
mov edx, dword ptr [esp+0x24]	
test eax, eax	
mov dword ptr [esp+0x254], eax	
jnz 0xb7fe64d5	
mov dword ptr [esp], edx	
call 0xb7ff5bb0	realloc
START: 0xb7fe64d5
test byte ptr [ebx-0x354], 0x1	
jz 0xb7fe6346	
lea eax, ptr [ebx-0x7430]	
mov dword ptr [esp+0x24], edx	
mov dword ptr [esp], eax	
call 0xb7fedd10	_dl_debug_state
START: 0xb7fe6346
mov eax, dword ptr [esp+0x38]	
test eax, eax	
mov eax, 0x0	
cmovnz ebp, eax	
cmp edx, 0xffffffff	
jz 0xb7fe6943	
mov ecx, dword ptr [esp+0x288]	
mov eax, dword ptr [ebx-0xe4]	
mov dword ptr [esp+0x8], ebp	
mov dword ptr [esp+0x18], ecx	
mov ecx, dword ptr [esp+0x284]	
mov dword ptr [esp+0x258], eax	
lea eax, ptr [esp+0x258]	
mov dword ptr [esp+0x14], eax	
mov eax, dword ptr [esp+0x254]	
mov dword ptr [esp+0x10], ecx	
mov ecx, dword ptr [esp+0x30]	
mov dword ptr [esp+0x4], eax	
lea eax, ptr [esp+0x50]	
mov dword ptr [esp], eax	
mov eax, esi	
mov dword ptr [esp+0xc], ecx	
call 0xb7fe42d0	.text
START: 0xb7fe42d0
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe42db
add ebx, 0x1ad19	
sub esp, 0x11c	
mov dword ptr [ebp-0xb4], edx	
mov edx, dword ptr [ebp+0x20]	
mov dword ptr [ebp-0xcc], eax	
xor eax, eax	
call 0xb7fed680	_dl_debug_state
START: 0xb7fed680
sub esp, 0xc	
mov ecx, eax	
mov dword ptr [esp], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fed68d
add ebx, 0x11967	
test edx, edx	
mov dword ptr [esp+0x8], edi	
mov edi, edx	
mov dword ptr [esp+0x4], esi	
mov eax, dword ptr [ebx-0x1c]	
jz 0xb7fed6b1	
imul eax, edx, 0x4c	
lea eax, ptr [ebx+eax*1+0x64]	
test ecx, ecx	
setnz dl	
mov esi, edx	
jz 0xb7fed700	
mov edx, esi	
test dl, dl	
mov dword ptr [eax], 0x1	
jz 0xb7fed6f0	
START: 0xb7fed6b1
test ecx, ecx	
setnz dl	
mov esi, edx	
jz 0xb7fed700	
mov edx, esi	
test dl, dl	
mov dword ptr [eax], 0x1	
jz 0xb7fed6f0	
imul edx, edi, 0x4c	
mov esi, dword ptr [esp+0x4]	
mov dword ptr [eax+0x10], ecx	
mov edi, dword ptr [esp+0x8]	
mov edx, dword ptr [ebx+edx*1+0x2c]	
mov dword ptr [eax+0x4], edx	
lea edx, ptr [ebx-0x11984]	
mov ebx, dword ptr [esp]	
mov dword ptr [eax+0x8], edx	
add esp, 0xc	
ret 	
START: 0xb7fed700
mov edx, dword ptr [eax+0x4]	
test edx, edx	
jz 0xb7fed6ba	
mov ebx, dword ptr [esp]	
mov esi, dword ptr [esp+0x4]	
mov edi, dword ptr [esp+0x8]	
add esp, 0xc	
ret 	
START: 0xb7fe42fd
mov dword ptr [ebp-0xb8], eax	
lea eax, ptr [ebp-0x88]	
mov dword ptr [esp+0x8], eax	
mov edx, dword ptr [ebp-0xb4]	
mov dword ptr [esp], 0x3	
mov dword ptr [esp+0x4], edx	
call 0xb7ff5af0	realloc
START: 0xb7fe4323
test eax, eax	
js 0xb7fe539b	
imul eax, dword ptr [ebp+0x20], 0x4c	
lea edx, ptr [ebx+0x2c]	
mov dword ptr [ebp-0xd0], edx	
mov edi, dword ptr [eax+ebx*1+0x2c]	
test edi, edi	
jz 0xb7fe43e0	
mov eax, dword ptr [ebp-0x88]	
mov edx, dword ptr [ebp-0x84]	
mov esi, dword ptr [ebp-0x30]	
mov ecx, dword ptr [ebp-0x2c]	
mov dword ptr [ebp-0x8c], eax	
mov dword ptr [ebp-0x90], edx	
jmp 0xb7fe4377	
START: 0xb7fe4377
test byte ptr [edi+0x195], 0x20	
jnz 0xb7fe4370	
mov edx, dword ptr [edi+0x1e4]	
mov eax, dword ptr [edi+0x1e0]	
xor edx, ecx	
xor eax, esi	
or edx, eax	
jnz 0xb7fe4370	
mov edx, dword ptr [ebp-0x90]	
mov eax, dword ptr [ebp-0x8c]	
xor edx, dword ptr [edi+0x1dc]	
xor eax, dword ptr [edi+0x1d8]	
or edx, eax	
jnz 0xb7fe4370	
START: 0xb7fe4370
mov edi, dword ptr [edi+0xc]	
test edi, edi	
jz 0xb7fe43e0	
test byte ptr [edi+0x195], 0x20	
jnz 0xb7fe4370	
mov edx, dword ptr [edi+0x1e4]	
mov eax, dword ptr [edi+0x1e0]	
xor edx, ecx	
xor eax, esi	
or edx, eax	
jnz 0xb7fe4370	
START: 0xb7fe43e0
mov ecx, dword ptr [ebp+0x20]	
test ecx, ecx	
jnz 0xb7fe513b	
test byte ptr [ebp+0x18], 0x4	
jnz 0xb7fe4e68	
test byte ptr [ebx-0x354], 0x40	
jnz 0xb7fe541c	
START: 0xb7fe4402
mov edx, dword ptr [ebp-0xb8]	
mov eax, dword ptr [edx+0xc]	
test eax, eax	
jz 0xb7fe45e8	
cmp eax, 0x1	
jnz 0xb7fe5440	
mov byte ptr [ebp-0xd3], 0x0	
mov edx, dword ptr [ebp+0x20]	
mov dword ptr [esp+0x8], edx	
mov ecx, dword ptr [ebp+0x18]	
mov dword ptr [esp+0x4], ecx	
mov ecx, dword ptr [ebp+0x10]	
mov dword ptr [esp], ecx	
mov ecx, dword ptr [ebp+0x14]	
mov edx, dword ptr [ebp-0xcc]	
mov eax, dword ptr [ebp+0xc]	
call 0xb7fe8dc0	_dl_rtld_di_serinfo
START: 0xb7fe8dc0
push ebp	
push edi	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe8dc9
add ebx, 0x1622b	
sub esp, 0x3c	
mov dword ptr [esp], edx	
mov edi, dword ptr [esp+0x50]	
mov dword ptr [esp+0x2c], ecx	
mov dword ptr [esp+0x24], eax	
mov dword ptr [esp+0x20], edx	
call 0xb7ff62e0	realloc
START: 0xb7fe8dea
mov ebp, dword ptr [ebx-0x198]	
test ebp, ebp	
mov ecx, eax	
jz 0xb7fe8ff0	
lea edx, ptr [ebp*8]	
lea eax, ptr [edx+ecx*1+0x269]	
mov dword ptr [esp+0x18], edx	
mov dword ptr [esp+0x1c], ecx	
mov dword ptr [esp+0x4], 0x1	
mov dword ptr [esp], eax	
call 0xb7fde7e0	.plt
START: 0xb7fe8ff0
mov eax, dword ptr [esp+0x54]	
and eax, 0x20000000	
cmp eax, 0x1	
sbb edx, edx	
not edx	
and edx, 0x80	
test eax, eax	
mov eax, 0x10	
cmovnz ebp, eax	
jmp 0xb7fe8e01	
START: 0xb7fe8e01
lea eax, ptr [edx+ecx*1+0x269]	
mov dword ptr [esp+0x18], edx	
mov dword ptr [esp+0x1c], ecx	
mov dword ptr [esp+0x4], 0x1	
mov dword ptr [esp], eax	
call 0xb7fde7e0	.plt
START: 0xb7fde7e0
jmp dword ptr [ebx+0x14]	
START: 0xb7ff3900
sub esp, 0x1c	
mov dword ptr [esp+0x18], edi	
mov edi, dword ptr [esp+0x24]	
mov ecx, dword ptr [esp+0x20]	
mov dword ptr [esp+0x14], esi	
mov dword ptr [esp+0x10], ebx	
mov eax, edi	
mov esi, edi	
or eax, ecx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7ff3922
add ebx, 0xb6d2	
imul esi, ecx	
cmp eax, 0xffff	
jbe 0xb7ff3944	
test edi, edi	
jz 0xb7ff3944	
xor edx, edx	
mov eax, esi	
div edi	
mov edi, eax	
xor eax, eax	
cmp edi, ecx	
jnz 0xb7ff394c	
START: 0xb7ff3944
mov dword ptr [esp], esi	
call 0xb7fde7d0	.plt
START: 0xb7ff394c
mov ebx, dword ptr [esp+0x10]	
mov esi, dword ptr [esp+0x14]	
mov edi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb7fe8e20
mov edx, dword ptr [esp+0x18]	
mov ecx, dword ptr [esp+0x1c]	
test eax, eax	
mov esi, eax	
jz 0xb7fe8fe0	
lea edx, ptr [eax+edx*1+0x258]	
add ecx, 0x1	
mov dword ptr [eax+0x164], edx	
mov dword ptr [esi+0x14], eax	
lea eax, ptr [edx+0x4]	
mov dword ptr [esi+0x1c], eax	
lea eax, ptr [edx+0x10]	
mov dword ptr [esp+0x8], ecx	
mov ecx, dword ptr [esp+0x20]	
mov dword ptr [esp+0x18], edx	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x4], ecx	
call 0xb7ff6a30	realloc
START: 0xb7ff6a6d
push eax	
mov eax, ecx	
shr ecx, 0x2	
and eax, 0x3	
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff6a76
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff6a78
mov ecx, eax	
rep movsb byte ptr [edi], byte ptr [esi]	
START: 0xb7ff6a7a
rep movsb byte ptr [edi], byte ptr [esi]	
START: 0xb7ff6a7c
pop eax	
mov edi, eax	
mov esi, edx	
mov eax, dword ptr [esp+0x4]	
ret 	
START: 0xb7fe8e66
mov edx, dword ptr [esp+0x18]	
mov dword ptr [edx+0xc], 0x1	
mov dword ptr [edx+0x4], eax	
mov eax, dword ptr [esp+0x24]	
movzx edx, byte ptr [esp+0x2c]	
mov dword ptr [esi+0x4], eax	
movzx eax, byte ptr [esi+0x194]	
and edx, 0x3	
and eax, 0xfffffffc	
or eax, edx	
mov byte ptr [esi+0x194], al	
test byte ptr [ebx-0x353], 0x1	
jz 0xb7fe9040	
mov edx, dword ptr [esp+0x58]	
test ebp, ebp	
mov dword ptr [esi+0x16c], edi	
mov dword ptr [esi+0x18], edx	
jz 0xb7fe8ec6	
xor eax, eax	
lea esi, ptr [esi]	
mov dword ptr [esi+eax*8+0x258], esi	
add eax, 0x1	
cmp eax, ebp	
jnz 0xb7fe8eb8	
START: 0xb7fe9040
mov dword ptr [esi+0x1fc], 0x1	
jmp 0xb7fe8ea2	
START: 0xb7fe8ea2
mov edx, dword ptr [esp+0x58]	
test ebp, ebp	
mov dword ptr [esi+0x16c], edi	
mov dword ptr [esi+0x18], edx	
jz 0xb7fe8ec6	
xor eax, eax	
lea esi, ptr [esi]	
mov dword ptr [esi+eax*8+0x258], esi	
add eax, 0x1	
cmp eax, ebp	
jnz 0xb7fe8eb8	
lea eax, ptr [esi+0x1b8]	
xor edx, edx	
mov dword ptr [esi+0x1cc], eax	
imul eax, dword ptr [esp+0x58], 0x4c	
mov dword ptr [esi+0x1c8], 0x4	
mov eax, dword ptr [ebx+eax*1+0x2c]	
test eax, eax	
jz 0xb7fe8efb	
START: 0xb7fe8ec6
lea eax, ptr [esi+0x1b8]	
xor edx, edx	
mov dword ptr [esi+0x1cc], eax	
imul eax, dword ptr [esp+0x58], 0x4c	
mov dword ptr [esi+0x1c8], 0x4	
mov eax, dword ptr [ebx+eax*1+0x2c]	
test eax, eax	
jz 0xb7fe8efb	
add eax, 0x15c	
mov dl, 0x1	
mov dword ptr [esi+0x1b8], eax	
test edi, edi	
jnz 0xb7fe8f0a	
jmp 0xb7fe904f	
START: 0xb7fe8f0a
mov eax, dword ptr [edi+0x16c]	
test eax, eax	
jnz 0xb7fe8f08	
xor eax, eax	
test edx, edx	
lea ecx, ptr [edi+0x15c]	
jnz 0xb7fe9018	
mov dword ptr [esi+eax*1+0x1b8], ecx	
lea eax, ptr [esi+0x15c]	
mov dword ptr [esi+0x1d0], eax	
mov eax, dword ptr [esp+0x24]	
movzx edx, byte ptr [eax]	
test dl, dl	
jz 0xb7fe8fe0	
START: 0xb7fe9018
mov edx, dword ptr [esi+0x1b8]	
cmp edx, ecx	
jz 0xb7fe8f2b	
test byte ptr [esp+0x54], 0x8	
jz 0xb7fe90eb	
mov dword ptr [esi+0x1bc], edx	
jmp 0xb7fe8f24	
START: 0xb7fe8f2b
lea eax, ptr [esi+0x15c]	
mov dword ptr [esi+0x1d0], eax	
mov eax, dword ptr [esp+0x24]	
movzx edx, byte ptr [eax]	
test dl, dl	
jz 0xb7fe8fe0	
mov dword ptr [esp], eax	
mov byte ptr [esp+0x18], dl	
call 0xb7ff62e0	realloc
START: 0xb7fe8f52
movzx edx, byte ptr [esp+0x18]	
add eax, 0x1	
cmp dl, 0x2f	
mov dword ptr [esp+0x20], eax	
jz 0xb7fe9063	
mov eax, 0x80	
mov ebp, dword ptr [esp+0x20]	
xor edx, edx	
mov dword ptr [esp+0x28], esi	
mov esi, eax	
jmp 0xb7fe8f82	
START: 0xb7fe9063
mov dword ptr [esp], eax	
call 0xb7fde7d0	.plt
START: 0xb7fe906b
mov edi, eax	
test edi, edi	
jz 0xb7fe90e1	
lea esi, ptr [esi]	
mov edx, dword ptr [esp+0x20]	
mov ecx, dword ptr [esp+0x24]	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp+0x4], ecx	
call 0xb7ff6970	realloc
START: 0xb7ff6970
mov ecx, dword ptr [esp+0xc]	
mov eax, edi	
mov edi, dword ptr [esp+0x4]	
mov edx, esi	
mov esi, dword ptr [esp+0x8]	
cld 	
shr ecx, 0x1	
jnb 0xb7ff6986	
movsb byte ptr [edi], byte ptr [esi]	
shr ecx, 0x1	
jnb 0xb7ff698c	
movsw word ptr [edi], word ptr [esi]	
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff6986
shr ecx, 0x1	
jnb 0xb7ff698c	
movsw word ptr [edi], word ptr [esi]	
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff698c
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb7ff698e
xchg edi, eax	
mov esi, edx	
ret 	
START: 0xb7fe9090
jmp 0xb7fe909a	
START: 0xb7fe909a
cmp byte ptr [eax-0x1], 0x2f	
lea edx, ptr [eax-0x1]	
jnz 0xb7fe9098	
cmp edi, edx	
cmovz edx, eax	
mov byte ptr [edx], 0x0	
mov dword ptr [esi+0x1a8], edi	
jmp 0xb7fe8fe0	
START: 0xb7fe9098
mov eax, edx	
cmp byte ptr [eax-0x1], 0x2f	
lea edx, ptr [eax-0x1]	
jnz 0xb7fe9098	
cmp edi, edx	
cmovz edx, eax	
mov byte ptr [edx], 0x0	
mov dword ptr [esi+0x1a8], edi	
jmp 0xb7fe8fe0	
START: 0xb7fe8fe0
add esp, 0x3c	
mov eax, esi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0xc	
START: 0xb7fe4448
sub esp, 0xc	
test eax, eax	
mov edi, eax	
jz 0xb7fe5130	
mov edx, dword ptr [ebp+0x8]	
mov ecx, dword ptr [ebp+0x8]	
mov eax, dword ptr [edx+0x1c]	
movzx esi, word ptr [ecx+0x30]	
movzx edx, word ptr [edx+0x14]	
mov dword ptr [edi+0x154], eax	
mov eax, dword ptr [ecx+0x20]	
mov word ptr [edi+0x158], si	
shl esi, 0x5	
mov word ptr [ebp-0xd2], dx	
lea edx, ptr [esi+eax*1]	
cmp edx, dword ptr [ecx]	
jnbe 0xb7fe4c57	
lea eax, ptr [ecx+eax*1+0x4]	
mov dword ptr [ebp-0x90], eax	
movzx eax, word ptr [edi+0x158]	
mov dword ptr [ebp-0xd8], esp	
mov dword ptr [ebp-0x8c], eax	
lea eax, ptr [eax+eax*2]	
lea eax, ptr [eax*8+0x1e]	
and eax, 0xfffff0	
sub esp, eax	
mov eax, dword ptr [ebp-0x8c]	
lea edx, ptr [esp+0x43]	
and edx, 0xfffffff0	
mov dword ptr [ebp-0xac], edx	
shl eax, 0x5	
add eax, dword ptr [ebp-0x90]	
cmp dword ptr [ebp-0x90], eax	
jnb 0xb7fe4ed9	
START: 0xb7fe44e1
lea edx, ptr [ebx-0x1fdd4]	
mov esi, dword ptr [ebp-0x90]	
mov byte ptr [ebp-0xc8], 0x0	
mov dword ptr [ebp-0x98], 0x0	
mov dword ptr [ebp-0xb0], 0x7	
mov dword ptr [ebp-0xdc], edx	
jmp 0xb7fe4552	
START: 0xb7fe4552
mov eax, dword ptr [esi]	
cmp eax, 0x6	
jz 0xb7fe4700	
jbe 0xb7fe4510	
cmp eax, 0x6474e551	
jz 0xb7fe4728	
START: 0xb7fe4700
mov eax, dword ptr [esi+0x8]	
mov dword ptr [edi+0x150], eax	
jmp 0xb7fe4538	
START: 0xb7fe4538
mov eax, dword ptr [ebp-0x8c]	
add esi, 0x20	
shl eax, 0x5	
add eax, dword ptr [ebp-0x90]	
cmp esi, eax	
jnb 0xb7fe4750	
mov eax, dword ptr [esi]	
cmp eax, 0x6	
jz 0xb7fe4700	
jbe 0xb7fe4510	
START: 0xb7fe4510
cmp eax, 0x1	
jz 0xb7fe4620	
cmp eax, 0x2	
jnz 0xb7fe4538	
mov eax, dword ptr [esi+0x8]	
mov dword ptr [edi+0x8], eax	
mov eax, dword ptr [esi+0x14]	
shr eax, 0x3	
mov word ptr [edi+0x15a], ax	
lea esi, ptr [esi]	
mov eax, dword ptr [ebp-0x8c]	
add esi, 0x20	
shl eax, 0x5	
add eax, dword ptr [ebp-0x90]	
cmp esi, eax	
jnb 0xb7fe4750	
START: 0xb7fe4620
mov eax, dword ptr [ebx-0x344]	
mov ecx, dword ptr [esi+0x1c]	
mov dword ptr [ebp-0x94], eax	
sub eax, 0x1	
test eax, ecx	
mov dword ptr [ebp-0x9c], eax	
jnz 0xb7fe4f2b	
mov eax, dword ptr [esi+0x4]	
sub ecx, 0x1	
mov edx, dword ptr [esi+0x8]	
mov dword ptr [ebp-0xa0], eax	
mov eax, edx	
sub eax, dword ptr [ebp-0xa0]	
test ecx, eax	
jnz 0xb7fe4f35	
mov ecx, dword ptr [ebp-0x98]	
add dword ptr [ebp-0x98], 0x1	
lea eax, ptr [ecx+ecx*2]	
mov ecx, dword ptr [ebp-0xac]	
lea eax, ptr [ecx+eax*8]	
mov ecx, dword ptr [ebp-0x94]	
neg ecx	
mov dword ptr [ebp-0x94], ecx	
and ecx, edx	
mov dword ptr [ebp-0xa8], ecx	
mov dword ptr [eax], ecx	
mov ecx, dword ptr [esi+0x10]	
add ecx, edx	
add edx, dword ptr [esi+0x14]	
mov dword ptr [eax+0x8], ecx	
add ecx, dword ptr [ebp-0x9c]	
mov dword ptr [eax+0xc], edx	
mov edx, dword ptr [ebp-0xa0]	
and ecx, dword ptr [ebp-0x94]	
and edx, dword ptr [ebp-0x94]	
cmp dword ptr [ebp-0x98], 0x1	
mov dword ptr [eax+0x4], ecx	
mov dword ptr [eax+0x10], edx	
jbe 0xb7fe46e3	
START: 0xb7fe46e3
mov ecx, dword ptr [esi+0x18]	
mov edx, 0x73516240	
and ecx, 0x7	
shl ecx, 0x2	
sar edx, cl	
and edx, 0xf	
mov dword ptr [eax+0x14], edx	
jmp 0xb7fe4538	
START: 0xb7fe46c5
mov edx, dword ptr [ebp-0xa8]	
movzx ecx, byte ptr [ebp-0xc8]	
cmp edx, dword ptr [eax-0x14]	
mov edx, 0x1	
cmovnz ecx, edx	
mov byte ptr [ebp-0xc8], cl	
mov ecx, dword ptr [esi+0x18]	
mov edx, 0x73516240	
and ecx, 0x7	
shl ecx, 0x2	
sar edx, cl	
and edx, 0xf	
mov dword ptr [eax+0x14], edx	
jmp 0xb7fe4538	
START: 0xb7fe455f
cmp eax, 0x6474e551	
jz 0xb7fe4728	
cmp eax, 0x6474e552	
jz 0xb7fe4710	
cmp eax, 0x7	
jnz 0xb7fe4538	
START: 0xb7fe457a
mov eax, dword ptr [esi+0x14]	
test eax, eax	
jz 0xb7fe4538	
mov dword ptr [edi+0x234], eax	
mov eax, dword ptr [esi+0x1c]	
test eax, eax	
mov dword ptr [edi+0x238], eax	
jnz 0xb7fe4738	
mov edx, dword ptr [esi+0x8]	
mov dword ptr [edi+0x23c], 0x0	
mov eax, dword ptr [esi+0x10]	
mov dword ptr [edi+0x22c], edx	
mov dword ptr [edi+0x230], eax	
movzx eax, byte ptr [edi+0x194]	
and eax, 0x3	
cmp al, 0x1	
jnz 0xb7fe54bd	
START: 0xb7fe4738
mov edx, dword ptr [esi+0x8]	
sub eax, 0x1	
and eax, edx	
mov dword ptr [edi+0x23c], eax	
jmp 0xb7fe45a5	
START: 0xb7fe45a5
mov eax, dword ptr [esi+0x10]	
mov dword ptr [edi+0x22c], edx	
mov dword ptr [edi+0x230], eax	
movzx eax, byte ptr [edi+0x194]	
and eax, 0x3	
cmp al, 0x1	
jnz 0xb7fe54bd	
call 0xb7fef340	__tls_get_addr
START: 0xb7fef340
sub esp, 0x3c	
mov dword ptr [esp+0x2c], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fef34c
add ebx, 0xfca8	
mov dword ptr [esp+0x30], esi	
mov dword ptr [esp+0x34], edi	
mov dword ptr [esp+0x38], ebp	
cmp byte ptr [ebx+0x830], 0x0	
jnz 0xb7fef38a	
mov edx, dword ptr [ebx+0x834]	
lea eax, ptr [edx+0x1]	
mov dword ptr [ebx+0x834], eax	
mov ebx, dword ptr [esp+0x2c]	
mov esi, dword ptr [esp+0x30]	
mov edi, dword ptr [esp+0x34]	
mov ebp, dword ptr [esp+0x38]	
add esp, 0x3c	
ret 	
START: 0xb7fe45cb
mov dword ptr [edi+0x244], eax	
movzx eax, word ptr [edi+0x158]	
mov dword ptr [ebp-0x8c], eax	
jmp 0xb7fe4538	
START: 0xb7fe4728
mov edx, dword ptr [esi+0x18]	
mov dword ptr [ebp-0xb0], edx	
jmp 0xb7fe4538	
START: 0xb7fe4710
mov eax, dword ptr [esi+0x8]	
mov dword ptr [edi+0x248], eax	
mov eax, dword ptr [esi+0x14]	
mov dword ptr [edi+0x24c], eax	
jmp 0xb7fe4538	
START: 0xb7fe4750
mov eax, dword ptr [ebp-0x98]	
test eax, eax	
jz 0xb7fe4ed9	
mov ecx, dword ptr [ebp-0x98]	
mov esi, dword ptr [ebp-0xac]	
movzx edx, word ptr [ebp-0xd2]	
lea ecx, ptr [ecx+ecx*2-0x3]	
lea ecx, ptr [esi+ecx*8]	
mov dword ptr [ebp-0x94], edx	
mov eax, dword ptr [ecx+0xc]	
mov edx, dword ptr [esi]	
mov dword ptr [ebp-0xa0], ecx	
sub eax, edx	
cmp dword ptr [ebp-0x94], 0x3	
mov dword ptr [ebp-0x8c], eax	
jnz 0xb7fe546a	
mov ecx, dword ptr [esi+0x10]	
mov dword ptr [esp+0x14], ecx	
mov ecx, dword ptr [ebp-0xb4]	
mov dword ptr [esp+0xc], 0x802	
mov dword ptr [esp+0x10], ecx	
mov eax, dword ptr [ebp-0xac]	
mov ecx, dword ptr [eax+0x14]	
mov dword ptr [esp+0x8], ecx	
mov ecx, dword ptr [ebp-0x8c]	
mov dword ptr [esp+0x4], ecx	
and edx, dword ptr [ebx-0x1ec]	
mov dword ptr [esp], edx	
call 0xb7ff5d40	realloc
START: 0xb7fe47dc
cmp eax, 0xffffffff	
mov dword ptr [edi+0x1ac], eax	
jz 0xb7fe4947	
mov edx, dword ptr [ebp-0x8c]	
add edx, eax	
mov dword ptr [edi+0x1b0], edx	
mov edx, dword ptr [ebp-0xac]	
sub eax, dword ptr [edx]	
cmp byte ptr [ebp-0xc8], 0x0	
mov dword ptr [edi], eax	
jnz 0xb7fe4960	
or byte ptr [edi+0x195], 0x40	
mov eax, dword ptr [esi+0x14]	
test al, 0x4	
mov dword ptr [ebp-0xdc], eax	
jz 0xb7fe482f	
START: 0xb7fe4824
mov eax, dword ptr [esi+0x4]	
add eax, dword ptr [edi]	
mov dword ptr [edi+0x1b4], eax	
mov eax, dword ptr [edi+0x150]	
test eax, eax	
jz 0xb7fe4dbc	
mov edx, dword ptr [esi+0xc]	
mov eax, dword ptr [esi+0x8]	
cmp edx, eax	
jbe 0xb7fe48e4	
add edx, dword ptr [edi]	
add eax, dword ptr [edi]	
mov dword ptr [ebp-0xa0], edx	
mov edx, dword ptr [ebx-0x344]	
mov dword ptr [ebp-0x9c], eax	
mov dword ptr [ebp-0xa4], edx	
mov ecx, dword ptr [ebp-0xa4]	
neg edx	
mov dword ptr [ebp-0xa8], edx	
lea eax, ptr [eax+ecx*1-0x1]	
and eax, edx	
mov edx, dword ptr [ebp-0xa0]	
cmp eax, dword ptr [ebp-0xa0]	
cmovbe edx, eax	
cmp dword ptr [ebp-0x9c], edx	
jnb 0xb7fe48d8	
START: 0xb7fe48e4
add esi, 0x18	
mov edx, dword ptr [ebp-0x98]	
lea eax, ptr [edx+edx*2]	
mov edx, dword ptr [ebp-0xac]	
lea eax, ptr [edx+eax*8]	
cmp esi, eax	
jnb 0xb7fe4996	
mov edx, dword ptr [esi+0x4]	
mov eax, dword ptr [esi]	
cmp edx, eax	
jbe 0xb7fe4817	
mov ecx, dword ptr [esi+0x10]	
sub edx, eax	
mov dword ptr [esp+0x14], ecx	
mov ecx, dword ptr [ebp-0xb4]	
mov dword ptr [esp+0xc], 0x812	
mov dword ptr [esp+0x10], ecx	
mov ecx, dword ptr [esi+0x14]	
mov dword ptr [esp+0x4], edx	
mov dword ptr [esp+0x8], ecx	
add eax, dword ptr [edi]	
mov dword ptr [esp], eax	
call 0xb7ff5d40	realloc
START: 0xb7fe493e
cmp eax, 0xffffffff	
jnz 0xb7fe4817	
lea eax, ptr [ebx-0x54e4]	
mov esp, dword ptr [ebp-0xd8]	
mov esi, dword ptr [ebx+0x90c]	
jmp 0xb7fe4e9d	
START: 0xb7fe4817
mov eax, dword ptr [esi+0x14]	
test al, 0x4	
mov dword ptr [ebp-0xdc], eax	
jz 0xb7fe482f	
mov eax, dword ptr [esi+0x4]	
add eax, dword ptr [edi]	
mov dword ptr [edi+0x1b4], eax	
mov eax, dword ptr [edi+0x150]	
test eax, eax	
jz 0xb7fe4dbc	
mov edx, dword ptr [esi+0xc]	
mov eax, dword ptr [esi+0x8]	
cmp edx, eax	
jbe 0xb7fe48e4	
START: 0xb7fe482f
mov eax, dword ptr [edi+0x150]	
test eax, eax	
jz 0xb7fe4dbc	
mov edx, dword ptr [esi+0xc]	
mov eax, dword ptr [esi+0x8]	
cmp edx, eax	
jbe 0xb7fe48e4	
add edx, dword ptr [edi]	
add eax, dword ptr [edi]	
mov dword ptr [ebp-0xa0], edx	
mov edx, dword ptr [ebx-0x344]	
mov dword ptr [ebp-0x9c], eax	
mov dword ptr [ebp-0xa4], edx	
mov ecx, dword ptr [ebp-0xa4]	
neg edx	
mov dword ptr [ebp-0xa8], edx	
lea eax, ptr [eax+ecx*1-0x1]	
and eax, edx	
mov edx, dword ptr [ebp-0xa0]	
cmp eax, dword ptr [ebp-0xa0]	
cmovbe edx, eax	
cmp dword ptr [ebp-0x9c], edx	
jnb 0xb7fe48d8	
START: 0xb7fe4892
test byte ptr [ebp-0xdc], 0x2	
jz 0xb7fe504e	
mov eax, edx	
sub eax, dword ptr [ebp-0x9c]	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp+0x8], eax	
mov ecx, dword ptr [ebp-0x9c]	
mov dword ptr [esp], ecx	
mov dword ptr [ebp-0xe0], edx	
call 0xb7ff6920	realloc
START: 0xb7ff6920
cld 	
push edi	
mov edx, dword ptr [esp+0x8]	
mov ecx, dword ptr [esp+0x10]	
movzx eax, byte ptr [esp+0xc]	
jecxz 0xb7ff695d	
mov edi, edx	
and edx, 0x3	
jz 0xb7ff6949	
jp 0xb7ff693e	
START: 0xb7ff6949
mov edx, ecx	
shr ecx, 0x2	
and edx, 0x3	
imul eax, eax, 0x1010101	
rep stosd dword ptr [edi]	
START: 0xb7ff6957
rep stosd dword ptr [edi]	
START: 0xb7ff6959
mov ecx, edx	
rep stosb byte ptr [edi]	
START: 0xb7ff695d
mov eax, dword ptr [esp+0x8]	
pop edi	
ret 	
START: 0xb7fe48c7
mov eax, dword ptr [esi+0x14]	
mov edx, dword ptr [ebp-0xe0]	
test al, 0x2	
jz 0xb7fe5098	
cmp dword ptr [ebp-0xa0], edx	
jnbe 0xb7fe4e1d	
add esi, 0x18	
mov edx, dword ptr [ebp-0x98]	
lea eax, ptr [edx+edx*2]	
mov edx, dword ptr [ebp-0xac]	
lea eax, ptr [edx+eax*8]	
cmp esi, eax	
jnb 0xb7fe4996	
START: 0xb7fe4e1d
mov dword ptr [esp+0x14], 0x0	
mov dword ptr [esp+0x10], 0xffffffff	
mov dword ptr [esp+0xc], 0x32	
mov eax, dword ptr [esi+0x14]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [ebp-0xa0]	
mov dword ptr [esp], edx	
sub eax, edx	
mov dword ptr [esp+0x4], eax	
call 0xb7ff5d40	realloc
START: 0xb7fe4e50
cmp eax, 0xffffffff	
jnz 0xb7fe48e4	
lea eax, ptr [ebx-0x70b2]	
jmp 0xb7fe494d	
START: 0xb7fe4996
mov edx, dword ptr [edi+0x8]	
mov esp, dword ptr [ebp-0xd8]	
test edx, edx	
jz 0xb7fe4e88	
mov ecx, dword ptr [edi]	
add edx, ecx	
test edx, edx	
mov dword ptr [ebp-0x98], ecx	
mov dword ptr [edi+0x8], edx	
jz 0xb7fe4b4a	
lea eax, ptr [edi+0x20]	
mov dword ptr [ebp-0x9c], eax	
mov eax, dword ptr [edx]	
test eax, eax	
jz 0xb7fe4a11	
START: 0xb7fe49cb
mov esi, 0x8	
jmp 0xb7fe49e7	
START: 0xb7fe49e7
cmp eax, 0x21	
jbe 0xb7fe49d8	
mov ecx, 0x6fffffff	
sub ecx, eax	
cmp ecx, 0xf	
jnbe 0xb7fe4d58	
mov ecx, 0x70000029	
sub ecx, eax	
mov dword ptr [edi+ecx*4], edx	
add edx, 0x8	
mov eax, dword ptr [edx+esi*1-0x8]	
test eax, eax	
jnz 0xb7fe49e7	
START: 0xb7fe49d8
mov dword ptr [edi+eax*4+0x20], edx	
add edx, 0x8	
mov eax, dword ptr [edx+esi*1-0x8]	
test eax, eax	
jz 0xb7fe4a11	
cmp eax, 0x21	
jbe 0xb7fe49d8	
mov ecx, 0x6fffffff	
sub ecx, eax	
cmp ecx, 0xf	
jnbe 0xb7fe4d58	
START: 0xb7fe4d58
lea ecx, ptr [eax+eax*1]	
sar ecx, 0x1	
cmp ecx, 0xfffffffc	
jbe 0xb7fe4d76	
mov eax, dword ptr [ebp-0x9c]	
not ecx	
mov dword ptr [eax+ecx*4+0xc8], edx	
jmp 0xb7fe49dc	
START: 0xb7fe4d76
mov ecx, 0x6ffffdff	
sub ecx, eax	
cmp ecx, 0xb	
jnbe 0xb7fe4d97	
mov ecx, dword ptr [ebp-0x9c]	
add eax, 0x100001cc	
neg eax	
mov dword ptr [ecx+eax*4], edx	
jmp 0xb7fe49dc	
START: 0xb7fe4d97
mov ecx, 0x6ffffeff	
sub ecx, eax	
cmp ecx, 0xa	
jnbe 0xb7fe49dc	
mov ecx, dword ptr [ebp-0x9c]	
add eax, 0x100000c0	
neg eax	
mov dword ptr [ecx+eax*4], edx	
jmp 0xb7fe49dc	
START: 0xb7fe49dc
add edx, 0x8	
mov eax, dword ptr [edx+esi*1-0x8]	
test eax, eax	
jz 0xb7fe4a11	
cmp eax, 0x21	
jbe 0xb7fe49d8	
mov ecx, 0x6fffffff	
sub ecx, eax	
cmp ecx, 0xf	
jnbe 0xb7fe4d58	
START: 0xb7fe49fc
mov ecx, 0x70000029	
sub ecx, eax	
mov dword ptr [edi+ecx*4], edx	
add edx, 0x8	
mov eax, dword ptr [edx+esi*1-0x8]	
test eax, eax	
jnz 0xb7fe49e7	
mov eax, dword ptr [ebp-0x98]	
test eax, eax	
jz 0xb7fe4ab5	
mov eax, dword ptr [edi+0x30]	
test eax, eax	
jz 0xb7fe4a2f	
START: 0xb7fe4a11
mov eax, dword ptr [ebp-0x98]	
test eax, eax	
jz 0xb7fe4ab5	
mov eax, dword ptr [edi+0x30]	
test eax, eax	
jz 0xb7fe4a2f	
mov edx, dword ptr [ebp-0x98]	
add dword ptr [eax+0x4], edx	
mov eax, dword ptr [edi+0x2c]	
test eax, eax	
jz 0xb7fe4a3f	
START: 0xb7fe4a36
mov ecx, dword ptr [ebp-0x98]	
add dword ptr [eax+0x4], ecx	
mov eax, dword ptr [edi+0x34]	
test eax, eax	
jz 0xb7fe4a4f	
mov edx, dword ptr [ebp-0x98]	
add dword ptr [eax+0x4], edx	
mov eax, dword ptr [edi+0x38]	
test eax, eax	
jz 0xb7fe4a5f	
mov ecx, dword ptr [ebp-0x98]	
add dword ptr [eax+0x4], ecx	
mov eax, dword ptr [edi+0x3c]	
test eax, eax	
jz 0xb7fe4a6f	
START: 0xb7fe4a6f
mov eax, dword ptr [edi+0x64]	
test eax, eax	
jz 0xb7fe4a7f	
mov ecx, dword ptr [ebp-0x98]	
add dword ptr [eax+0x4], ecx	
mov eax, dword ptr [edi+0x7c]	
test eax, eax	
jz 0xb7fe4a8f	
mov edx, dword ptr [ebp-0x98]	
add dword ptr [eax+0x4], edx	
mov eax, dword ptr [edi+0xe4]	
test eax, eax	
jz 0xb7fe4aa2	
START: 0xb7fe4a99
mov ecx, dword ptr [ebp-0x98]	
add dword ptr [eax+0x4], ecx	
mov eax, dword ptr [edi+0x14c]	
test eax, eax	
jz 0xb7fe4ab5	
mov edx, dword ptr [ebp-0x98]	
add dword ptr [eax+0x4], edx	
mov eax, dword ptr [edi+0x70]	
test eax, eax	
jz 0xb7fe4ac8	
mov eax, dword ptr [eax+0x4]	
cmp eax, 0x7	
jnz 0xb7fe52f4	
START: 0xb7fe52f4
cmp eax, 0x11	
jz 0xb7fe4ac8	
lea eax, ptr [ebx-0x7291]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [ebx-0x74fa]	
mov dword ptr [esp+0x4], eax	
lea eax, ptr [ebx-0x5be8]	
mov dword ptr [esp+0x8], 0xc0	
mov dword ptr [esp], eax	
call 0xb7ff39d0	free
START: 0xb7fe4ac8
mov eax, dword ptr [edi+0x3c]	
test eax, eax	
jz 0xb7fe4adc	
mov eax, dword ptr [edi+0x44]	
cmp dword ptr [eax+0x4], 0xc	
jnz 0xb7fe5327	
mov esi, dword ptr [edi+0x64]	
test esi, esi	
jz 0xb7fe4af0	
START: 0xb7fe4adc
mov esi, dword ptr [edi+0x64]	
test esi, esi	
jz 0xb7fe4af0	
mov eax, dword ptr [edi+0x6c]	
cmp dword ptr [eax+0x4], 0x8	
jnz 0xb7fe5351	
mov edx, dword ptr [edi+0x98]	
test edx, edx	
jz 0xb7fe4b1b	
START: 0xb7fe4afa
mov eax, dword ptr [edx+0x4]	
test al, 0x2	
mov dword ptr [edi+0x208], eax	
jz 0xb7fe4b0a	
mov dword ptr [edi+0x60], edx	
test al, 0x4	
jz 0xb7fe4b11	
mov dword ptr [edi+0x78], edx	
test al, 0x8	
jz 0xb7fe4b1b	
START: 0xb7fe4b0a
test al, 0x4	
jz 0xb7fe4b11	
mov dword ptr [edi+0x78], edx	
test al, 0x8	
jz 0xb7fe4b1b	
mov dword ptr [edi+0x80], edx	
mov eax, dword ptr [edi+0xb8]	
test eax, eax	
jz 0xb7fe4b39	
START: 0xb7fe4b11
test al, 0x8	
jz 0xb7fe4b1b	
mov dword ptr [edi+0x80], edx	
mov eax, dword ptr [edi+0xb8]	
test eax, eax	
jz 0xb7fe4b39	
mov edx, dword ptr [eax+0x4]	
mov dword ptr [edi+0x204], edx	
and edx, 0x1	
jz 0xb7fe4b39	
START: 0xb7fe4b1b
mov eax, dword ptr [edi+0xb8]	
test eax, eax	
jz 0xb7fe4b39	
mov edx, dword ptr [eax+0x4]	
mov dword ptr [edi+0x204], edx	
and edx, 0x1	
jz 0xb7fe4b39	
mov dword ptr [edi+0x80], eax	
mov ecx, dword ptr [edi+0x94]	
test ecx, ecx	
jz 0xb7fe4b4a	
START: 0xb7fe4b39
mov ecx, dword ptr [edi+0x94]	
test ecx, ecx	
jz 0xb7fe4b4a	
mov dword ptr [edi+0x5c], 0x0	
mov eax, dword ptr [ebp+0x18]	
shr eax, 0x1f	
test al, al	
jnz 0xb7fe53af	
mov eax, dword ptr [edi+0x150]	
test eax, eax	
jz 0xb7fe4ee9	
START: 0xb7fe4b4a
mov eax, dword ptr [ebp+0x18]	
shr eax, 0x1f	
test al, al	
jnz 0xb7fe53af	
mov eax, dword ptr [edi+0x150]	
test eax, eax	
jz 0xb7fe4ee9	
add eax, dword ptr [edi]	
mov dword ptr [edi+0x150], eax	
mov eax, dword ptr [ebx+0x82c]	
not eax	
and eax, dword ptr [ebp-0xb0]	
test al, 0x1	
jnz 0xb7fe50c9	
START: 0xb7fe4b84
mov eax, dword ptr [edi+0x22c]	
test eax, eax	
jz 0xb7fe4b96	
add eax, dword ptr [edi]	
mov dword ptr [edi+0x22c], eax	
mov edx, dword ptr [ebp-0xb4]	
mov dword ptr [esp], edx	
call 0xb7ff5bb0	realloc
START: 0xb7fe4ba4
test eax, eax	
jnz 0xb7fe54b2	
cmp dword ptr [ebp-0x94], 0x2	
jz 0xb7fe4d30	
mov edx, dword ptr [edi+0x154]	
mov eax, dword ptr [edi]	
add edx, eax	
test byte ptr [ebx-0x354], 0x40	
mov dword ptr [edi+0x154], edx	
jnz 0xb7fe4fdd	
START: 0xb7fe4bd6
mov eax, edi	
call 0xb7fe8c30	_dl_rtld_di_serinfo
START: 0xb7fe8c30
sub esp, 0x2c	
mov edx, dword ptr [eax+0x14c]	
mov dword ptr [esp+0x1c], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe8c42
add ebx, 0x163b2	
mov dword ptr [esp+0x20], esi	
test edx, edx	
mov dword ptr [esp+0x24], edi	
mov dword ptr [esp+0x28], ebp	
jz 0xb7fe8cb3	
mov edx, dword ptr [edx+0x4]	
mov edi, dword ptr [edx]	
mov dword ptr [eax+0x178], edi	
mov ecx, dword ptr [edx+0x8]	
mov esi, dword ptr [edx+0x4]	
lea ebp, ptr [ecx-0x1]	
test ebp, ecx	
jnz 0xb7fe8cd9	
mov dword ptr [eax+0x17c], ebp	
mov ebp, dword ptr [edx+0xc]	
add edx, 0x10	
mov dword ptr [eax+0x184], edx	
lea edx, ptr [edx+ecx*4]	
mov dword ptr [eax+0x188], edx	
shl esi, 0x2	
lea edx, ptr [edx+edi*4]	
sub edx, esi	
mov dword ptr [eax+0x180], ebp	
mov dword ptr [eax+0x18c], edx	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb7fe4bdd
test byte ptr [ebp+0x18], 0x8	
jz 0xb7fe4cc0	
mov eax, dword ptr [ebx+0x528]	
test byte ptr [edi+0x204], 0x20	
mov edx, dword ptr [ebp-0x84]	
mov ecx, dword ptr [ebx-0x1e8]	
cmovnz eax, edi	
mov dword ptr [ebx+0x528], eax	
mov eax, dword ptr [ebp-0x88]	
mov dword ptr [edi+0x1dc], edx	
mov edx, dword ptr [ebp-0x2c]	
test ecx, ecx	
mov dword ptr [edi+0x1d8], eax	
mov eax, dword ptr [ebp-0x30]	
mov dword ptr [edi+0x1e4], edx	
mov dword ptr [edi+0x1e0], eax	
jnz 0xb7fe537b	
mov edx, dword ptr [ebp+0x20]	
mov eax, edi	
call 0xb7fe8d10	_dl_rtld_di_serinfo
START: 0xb7fe4cc0
mov esi, dword ptr [edi+0x60]	
test esi, esi	
jz 0xb7fe4be7	
mov edx, dword ptr [edi+0x1cc]	
lea eax, ptr [edi+0x15c]	
cmp dword ptr [edx], eax	
jz 0xb7fe4be7	
mov eax, dword ptr [edi+0x164]	
mov edx, dword ptr [edi+0x1c8]	
mov dword ptr [eax], edi	
mov eax, dword ptr [edi+0x1cc]	
mov dword ptr [edi+0x168], 0x1	
lea edx, ptr [edx*4-0x4]	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp+0x4], eax	
add eax, 0x4	
mov dword ptr [esp], eax	
call 0xb7ff68c0	realloc
START: 0xb7fe4be7
mov eax, dword ptr [ebx+0x528]	
test byte ptr [edi+0x204], 0x20	
mov edx, dword ptr [ebp-0x84]	
mov ecx, dword ptr [ebx-0x1e8]	
cmovnz eax, edi	
mov dword ptr [ebx+0x528], eax	
mov eax, dword ptr [ebp-0x88]	
mov dword ptr [edi+0x1dc], edx	
mov edx, dword ptr [ebp-0x2c]	
test ecx, ecx	
mov dword ptr [edi+0x1d8], eax	
mov eax, dword ptr [ebp-0x30]	
mov dword ptr [edi+0x1e4], edx	
mov dword ptr [edi+0x1e0], eax	
jnz 0xb7fe537b	
mov edx, dword ptr [ebp+0x20]	
mov eax, edi	
call 0xb7fe8d10	_dl_rtld_di_serinfo
START: 0xb7fe8d10
sub esp, 0x2c	
mov dword ptr [esp+0x1c], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe8d1c
add ebx, 0x162d8	
mov dword ptr [esp+0x24], edi	
mov dword ptr [esp+0x28], ebp	
mov ebp, edx	
mov dword ptr [esp+0x20], esi	
mov esi, eax	
lea edi, ptr [ebx+0x508]	
mov dword ptr [esp], edi	
call dword ptr [ebx+0x820]	
START: 0xb7fdf240
mov eax, dword ptr [esp+0x4]	
add dword ptr [eax+0x4], 0x1	
ret 	
START: 0xb7fe8d41
imul eax, ebp, 0x4c	
lea eax, ptr [ebx+eax*1+0x2c]	
mov ecx, dword ptr [eax]	
test ecx, ecx	
jnz 0xb7fe8d5a	
jmp 0xb7fe8db9	
START: 0xb7fe8d5a
mov eax, dword ptr [ecx+0xc]	
test eax, eax	
jnz 0xb7fe8d58	
mov dword ptr [esi+0x10], ecx	
mov dword ptr [ecx+0xc], esi	
imul edx, ebp, 0x4c	
mov eax, dword ptr [ebx+0x520]	
mov dword ptr [esp], edi	
add dword ptr [ebx+edx*1+0x30], 0x1	
mov edx, dword ptr [ebx+0x524]	
mov dword ptr [esi+0x250], eax	
add eax, 0x1	
mov dword ptr [esi+0x254], edx	
adc edx, 0x0	
mov dword ptr [ebx+0x520], eax	
mov dword ptr [ebx+0x524], edx	
call dword ptr [ebx+0x824]	
START: 0xb7fe8d58
mov ecx, eax	
mov eax, dword ptr [ecx+0xc]	
test eax, eax	
jnz 0xb7fe8d58	
mov dword ptr [esi+0x10], ecx	
mov dword ptr [ecx+0xc], esi	
imul edx, ebp, 0x4c	
mov eax, dword ptr [ebx+0x520]	
mov dword ptr [esp], edi	
add dword ptr [ebx+edx*1+0x30], 0x1	
mov edx, dword ptr [ebx+0x524]	
mov dword ptr [esi+0x250], eax	
add eax, 0x1	
mov dword ptr [esi+0x254], edx	
adc edx, 0x0	
mov dword ptr [ebx+0x520], eax	
mov dword ptr [ebx+0x524], edx	
call dword ptr [ebx+0x824]	
START: 0xb7fdf250
mov eax, dword ptr [esp+0x4]	
sub dword ptr [eax+0x4], 0x1	
ret 	
START: 0xb7fe8da5
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb7fe4c3f
mov edx, dword ptr [ebx-0x198]	
test edx, edx	
jnz 0xb7fe4f3f	
lea esp, ptr [ebp-0xc]	
mov eax, edi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe63b0
add esp, 0x26c	
pop ebx	
pop esi	
mov edi, eax	
mov eax, edi	
pop edi	
pop ebp	
ret 0xc	
START: 0xb7feb178
sub esp, 0xc	
mov dword ptr [esi+0x14], eax	
mov edi, dword ptr [esp+0x14]	
mov esi, dword ptr [esp+0x10]	
mov ebp, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb7fecccf
mov eax, dword ptr [esp+0xcc]	
mov edx, dword ptr [esp+0x10]	
mov dword ptr [edx], eax	
mov eax, dword ptr [esp+0x14]	
mov edx, dword ptr [esp+0x18]	
mov dword ptr [eax], 0x0	
mov eax, dword ptr [esp+0x1c]	
mov dword ptr [edx], 0x0	
mov byte ptr [eax], 0x0	
add esp, 0xd4	
mov eax, esi	
pop ebx	
pop esi	
ret 0x8	
START: 0xb7feb366
mov ecx, dword ptr [ebp-0x24]	
sub esp, 0x8	
test ecx, ecx	
jnz 0xb7feb948	
mov eax, dword ptr [ebp-0x28]	
test byte ptr [eax+0x194], 0x60	
jnz 0xb7feb2f8	
mov ecx, dword ptr [ebp-0x64]	
sub esp, 0x20	
lea edx, ptr [esp+0x1f]	
and edx, 0xfffffff0	
add dword ptr [ebp-0x68], 0x1	
mov dword ptr [edx+0x8], 0x0	
mov dword ptr [edx+0x4], eax	
mov dword ptr [edx], 0x0	
mov dword ptr [ecx+0x8], edx	
movzx ecx, byte ptr [eax+0x194]	
and ecx, 0xffffff9f	
or ecx, 0x20	
mov byte ptr [eax+0x194], cl	
mov dword ptr [ebp-0x64], edx	
jmp 0xb7feb2f8	
START: 0xb7feb2f8
mov edx, dword ptr [ebp-0x54]	
test edx, edx	
jz 0xb7feb30e	
mov edx, dword ptr [ebp-0x50]	
mov ecx, dword ptr [ebp-0x54]	
mov dword ptr [ecx+edx*4], eax	
add edx, 0x1	
mov dword ptr [ebp-0x50], edx	
add edi, 0x8	
mov eax, dword ptr [edi]	
test eax, eax	
jz 0xb7feb3e6	
cmp eax, 0x1	
jnz 0xb7febba9	
START: 0xb7feb30e
add edi, 0x8	
mov eax, dword ptr [edi]	
test eax, eax	
jz 0xb7feb3e6	
cmp eax, 0x1	
jnz 0xb7febba9	
mov ecx, dword ptr [ebp-0x58]	
add ecx, dword ptr [edi+0x4]	
mov dword ptr [ebp-0x4c], ecx	
mov dword ptr [esp+0x4], 0x24	
mov dword ptr [esp], ecx	
call 0xb7ff6060	realloc
START: 0xb7febba9
cmp eax, 0x7fffffff	
jz 0xb7febbbb	
cmp eax, 0x7ffffffd	
jnz 0xb7feb30e	
mov eax, dword ptr [ebp-0x58]	
add eax, dword ptr [edi+0x4]	
mov dword ptr [ebp-0x4c], eax	
mov dword ptr [esp+0x4], 0x24	
mov dword ptr [esp], eax	
call 0xb7ff6060	realloc
START: 0xb7feb3e6
mov eax, dword ptr [ebp-0x54]	
test eax, eax	
jz 0xb7feb471	
mov edx, dword ptr [ebp-0x50]	
mov ecx, dword ptr [ebp-0x54]	
mov dword ptr [ecx+edx*4], 0x0	
add edx, 0x1	
lea eax, ptr [edx*8+0x4]	
mov dword ptr [esp], eax	
mov dword ptr [ebp-0x90], edx	
call 0xb7fde7d0	.plt
START: 0xb7feb471
mov esi, dword ptr [ebp-0x70]	
mov edi, dword ptr [esi]	
test edi, edi	
jz 0xb7feb28e	
mov eax, esi	
mov eax, dword ptr [eax+0x8]	
test eax, eax	
jz 0xb7feb50d	
mov edx, dword ptr [eax]	
test edx, edx	
jnz 0xb7feb480	
START: 0xb7feb491
mov dword ptr [ebp-0x70], eax	
jmp 0xb7feb28e	
START: 0xb7feb28e
mov eax, dword ptr [ebp-0x70]	
mov dword ptr [ebp-0x54], 0x0	
mov esi, dword ptr [eax+0x4]	
mov dword ptr [eax], 0x1	
mov eax, dword ptr [esi+0x15c]	
test eax, eax	
jz 0xb7feb499	
mov eax, dword ptr [esi+0x24]	
test eax, eax	
jz 0xb7feb3c3	
mov eax, dword ptr [esi+0x34]	
mov edi, dword ptr [esi+0x8]	
mov ecx, dword ptr [ebp+0x8]	
mov dword ptr [ebp-0x3c], esi	
mov eax, dword ptr [eax+0x4]	
mov dword ptr [ebp-0x38], ecx	
mov dword ptr [ebp-0x58], eax	
mov dword ptr [ebp-0x30], eax	
mov eax, dword ptr [ebp+0xc]	
mov dword ptr [ebp-0x34], eax	
mov eax, dword ptr [edi]	
test eax, eax	
jz 0xb7feb3df	
START: 0xb7feb4c0
movzx eax, ax	
mov edx, dword ptr [ebp-0x80]	
shl eax, 0x2	
cmp eax, dword ptr [ebp-0x84]	
mov dword ptr [ebp-0x54], edx	
jbe 0xb7feb2af	
add eax, 0xf	
and eax, 0xfffffff0	
lea edx, ptr [eax+0x1e]	
and edx, 0xffff0	
sub esp, edx	
lea edx, ptr [esp+0x1f]	
and edx, 0xfffffff0	
lea ecx, ptr [edx+eax*1]	
cmp dword ptr [ebp-0x80], ecx	
jz 0xb7fec0a7	
mov dword ptr [ebp-0x54], edx	
mov dword ptr [ebp-0x84], eax	
mov dword ptr [ebp-0x80], edx	
jmp 0xb7feb2af	
START: 0xb7ff60ad
mov cl, byte ptr [eax]	
cmp dl, cl	
jz 0xb7ff61ed	
cmp cl, 0x0	
jz 0xb7ff621a	
inc eax	
mov ecx, dword ptr [eax]	
mov ebp, 0xfefefeff	
mov edi, 0xfefefeff	
add ebp, ecx	
xor ebp, ecx	
add edi, ecx	
lea eax, ptr [eax+0x4]	
jnb 0xb7ff61f2	
START: 0xb7ff60dc
mov ebx, ecx	
or ebp, 0xfefefeff	
add ebp, 0x1	
jnz 0xb7ff61f2	
mov esi, 0xfefefeff	
xor ebx, edx	
mov ecx, dword ptr [eax]	
add esi, ebx	
mov edi, 0xfefefeff	
jnb 0xb7ff61d7	
mov ebp, edi	
xor esi, ebx	
add ebp, ecx	
or esi, 0xfefefeff	
add esi, 0x1	
jnz 0xb7ff61d7	
START: 0xb7ff6118
xor ebp, ecx	
add edi, ecx	
lea eax, ptr [eax+0x4]	
jnb 0xb7ff61f2	
mov ebx, ecx	
or ebp, 0xfefefeff	
add ebp, 0x1	
jnz 0xb7ff61f2	
mov esi, 0xfefefeff	
xor ebx, edx	
mov ecx, dword ptr [eax]	
add esi, ebx	
mov edi, 0xfefefeff	
jnb 0xb7ff61d7	
START: 0xb7ff614c
mov ebp, edi	
xor esi, ebx	
add ebp, ecx	
or esi, 0xfefefeff	
add esi, 0x1	
jnz 0xb7ff61d7	
xor ebp, ecx	
add edi, ecx	
lea eax, ptr [eax+0x4]	
jnb 0xb7ff61f2	
mov ebx, ecx	
or ebp, 0xfefefeff	
add ebp, 0x1	
jnz 0xb7ff61f2	
START: 0xb7ff6177
mov esi, 0xfefefeff	
xor ebx, edx	
mov ecx, dword ptr [eax]	
add esi, ebx	
mov edi, 0xfefefeff	
jnb 0xb7ff61d7	
mov ebp, edi	
xor esi, ebx	
add ebp, ecx	
or esi, 0xfefefeff	
add esi, 0x1	
jnz 0xb7ff61d7	
xor ebp, ecx	
add edi, ecx	
lea eax, ptr [eax+0x4]	
jnb 0xb7ff61f2	
START: 0xb7ff61a3
mov ebx, ecx	
or ebp, 0xfefefeff	
add ebp, 0x1	
jnz 0xb7ff61f2	
mov esi, 0xfefefeff	
xor ebx, edx	
mov ecx, dword ptr [eax]	
add esi, ebx	
mov edi, 0xfefefeff	
jnb 0xb7ff61d7	
mov ebp, edi	
xor esi, ebx	
add ebp, ecx	
or esi, 0xfefefeff	
add esi, 0x1	
jz 0xb7ff60cf	
START: 0xb7feb416
mov edx, dword ptr [ebp-0x90]	
test eax, eax	
mov edi, eax	
jz 0xb7febcbe	
shl edx, 0x2	
mov dword ptr [eax], esi	
lea eax, ptr [eax+0x4]	
mov dword ptr [esp+0x8], edx	
mov ecx, dword ptr [ebp-0x54]	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x4], ecx	
mov dword ptr [ebp-0x90], edx	
call 0xb7ff6a30	realloc
START: 0xb7feb447
mov ecx, dword ptr [ebp-0x50]	
mov edx, dword ptr [ebp-0x90]	
mov dword ptr [esp+0x4], edi	
lea eax, ptr [edi+ecx*4+0x8]	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp], eax	
call 0xb7ff6a30	realloc
START: 0xb7feb464
or byte ptr [esi+0x196], 0x1	
mov dword ptr [esi+0x1f0], edi	
mov esi, dword ptr [ebp-0x70]	
mov edi, dword ptr [esi]	
test edi, edi	
jz 0xb7feb28e	
mov eax, esi	
mov eax, dword ptr [eax+0x8]	
test eax, eax	
jz 0xb7feb50d	
mov edx, dword ptr [eax]	
test edx, edx	
jnz 0xb7feb480	
START: 0xb7feb3c3
mov eax, dword ptr [esi+0xf0]	
test eax, eax	
jnz 0xb7feb2ba	
mov eax, dword ptr [esi+0xe8]	
test eax, eax	
jnz 0xb7feb2ba	
mov dword ptr [ebp-0x50], 0x0	
mov eax, dword ptr [ebp-0x54]	
test eax, eax	
jz 0xb7feb471	
START: 0xb7feb50d
mov ecx, dword ptr [ebx+0x90c]	
mov dword ptr [ebp-0x60], 0x0	
test ecx, ecx	
setz al	
test al, al	
jz 0xb7feb539	
mov eax, dword ptr [ebp-0x88]	
test eax, eax	
jz 0xb7feb539	
mov esi, dword ptr [ebp-0x88]	
mov dword ptr [ebx+0x90c], esi	
mov eax, dword ptr [ebp-0x78]	
mov eax, dword ptr [eax+0x1f0]	
test eax, eax	
mov dword ptr [ebp-0x6c], eax	
jz 0xb7feb565	
START: 0xb7feb565
mov esi, dword ptr [ebp-0x68]	
lea eax, ptr [esi*8+0x4]	
mov dword ptr [esp], eax	
call 0xb7fde7d0	.plt
START: 0xb7feb577
test eax, eax	
mov dword ptr [ebp-0x5c], eax	
jz 0xb7fec08c	
mov esi, dword ptr [ebp-0x68]	
mov ecx, dword ptr [ebp-0x78]	
mov edx, dword ptr [ebp-0x5c]	
mov dword ptr [ebp-0x50], 0x0	
mov dword ptr [ecx+0x160], esi	
lea eax, ptr [edx+esi*4+0x4]	
mov edx, dword ptr [ebp-0x8c]	
mov esi, dword ptr [ebp-0x78]	
mov dword ptr [ecx+0x15c], eax	
xor ecx, ecx	
mov edi, dword ptr [ebp+0x8]	
mov eax, dword ptr [edx+0x4]	
test edi, edi	
jnz 0xb7fec00c	
mov edi, dword ptr [esi+0x15c]	
mov dword ptr [edi+ecx*4], eax	
mov eax, dword ptr [edx+0x4]	
add ecx, 0x1	
and byte ptr [eax+0x194], 0x9f	
mov edx, dword ptr [edx+0x8]	
test edx, edx	
jnz 0xb7feb5ad	
START: 0xb7feb5ad
mov edi, dword ptr [ebp+0x8]	
mov eax, dword ptr [edx+0x4]	
test edi, edi	
jnz 0xb7fec00c	
mov edi, dword ptr [esi+0x15c]	
mov dword ptr [edi+ecx*4], eax	
mov eax, dword ptr [edx+0x4]	
add ecx, 0x1	
and byte ptr [eax+0x194], 0x9f	
mov edx, dword ptr [edx+0x8]	
test edx, edx	
jnz 0xb7feb5ad	
test byte ptr [ebx-0x353], 0x8	
mov dword ptr [ebp-0x50], ecx	
jnz 0xb7febfb0	
START: 0xb7feb5e8
mov esi, dword ptr [ebp-0x78]	
mov eax, dword ptr [esi+0x15c]	
mov edx, dword ptr [eax]	
cmp edx, esi	
mov dword ptr [ebp-0x64], edx	
jnz 0xb7febf86	
mov ecx, dword ptr [ebp-0x78]	
mov edi, dword ptr [ecx+0x1f4]	
test edi, edi	
jz 0xb7febf5b	
cmp dword ptr [ebp-0x50], 0x1	
jbe 0xb7feb638	
START: 0xb7febf5b
mov ecx, dword ptr [ebp-0x50]	
shl ecx, 0x2	
mov dword ptr [ebp-0x64], ecx	
mov dword ptr [esp+0x8], ecx	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [ebp-0x5c]	
mov dword ptr [esp], eax	
call 0xb7ff6a30	realloc
START: 0xb7febf77
cmp dword ptr [ebp-0x50], 0x1	
jbe 0xb7feb89a	
jmp 0xb7feb75c	
START: 0xb7feb75c
mov eax, dword ptr [ebp-0x50]	
mov ecx, dword ptr [ebp-0x50]	
mov dword ptr [ebp-0x7c], esp	
add eax, 0x1e	
and eax, 0xfffffff0	
sub esp, eax	
lea edx, ptr [esp+0x1f]	
and edx, 0xfffffff0	
mov dword ptr [ebp-0x58], edx	
mov dword ptr [esp+0x8], ecx	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp], edx	
call 0xb7ff6920	realloc
START: 0xb7ff695b
rep stosb byte ptr [edi]	
START: 0xb7feb78b
mov esi, dword ptr [ebp-0x50]	
mov ecx, dword ptr [ebp-0x50]	
mov dword ptr [ebp-0x4c], 0x1	
mov dword ptr [ebp-0x54], 0x2	
sub esi, 0x1	
add ecx, 0x3fffffff	
mov dword ptr [ebp-0x70], esi	
mov dword ptr [ebp-0x74], ecx	
mov esi, dword ptr [ebp-0x4c]	
mov edx, dword ptr [ebp-0x58]	
mov eax, dword ptr [ebp-0x5c]	
add byte ptr [edx+esi*1], 0x1	
mov edx, dword ptr [ebp-0x70]	
lea eax, ptr [eax+esi*4]	
cmp dword ptr [ebp-0x4c], edx	
mov dword ptr [ebp-0x68], eax	
mov esi, dword ptr [eax]	
jnb 0xb7feb800	
mov ecx, dword ptr [ebp-0x74]	
mov eax, dword ptr [ebp-0x5c]	
mov edi, dword ptr [ebp-0x70]	
lea edx, ptr [eax+ecx*4]	
nop 	
mov eax, dword ptr [edx]	
mov eax, dword ptr [eax+0x1f0]	
test eax, eax	
jnz 0xb7feb7ef	
jmp 0xb7feb7f5	
START: 0xb7feb7f5
sub edi, 0x1	
sub edx, 0x4	
cmp dword ptr [ebp-0x4c], edi	
jb 0xb7feb7d8	
mov ecx, dword ptr [ebp-0x54]	
cmp dword ptr [ebp-0x50], ecx	
mov dword ptr [ebp-0x4c], ecx	
jz 0xb7feb897	
mov edx, dword ptr [ebp-0x50]	
mov eax, dword ptr [ebp-0x58]	
sub edx, dword ptr [ebp-0x54]	
add eax, dword ptr [ebp-0x54]	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp], eax	
call 0xb7ff6920	realloc
START: 0xb7ff693a
stosb byte ptr [edi]	
dec ecx	
jz 0xb7ff695d	
stosb byte ptr [edi]	
dec ecx	
jz 0xb7ff695d	
xor edx, 0x1	
jnz 0xb7ff6949	
START: 0xb7feb82f
mov edx, dword ptr [ebp-0x54]	
add edx, 0x1	
mov dword ptr [ebp-0x54], edx	
jmp 0xb7feb7ae	
START: 0xb7feb7ae
mov esi, dword ptr [ebp-0x4c]	
mov edx, dword ptr [ebp-0x58]	
mov eax, dword ptr [ebp-0x5c]	
add byte ptr [edx+esi*1], 0x1	
mov edx, dword ptr [ebp-0x70]	
lea eax, ptr [eax+esi*4]	
cmp dword ptr [ebp-0x4c], edx	
mov dword ptr [ebp-0x68], eax	
mov esi, dword ptr [eax]	
jnb 0xb7feb800	
mov ecx, dword ptr [ebp-0x74]	
mov eax, dword ptr [ebp-0x5c]	
mov edi, dword ptr [ebp-0x70]	
lea edx, ptr [eax+ecx*4]	
nop 	
mov eax, dword ptr [edx]	
mov eax, dword ptr [eax+0x1f0]	
test eax, eax	
jnz 0xb7feb7ef	
jmp 0xb7feb7f5	
START: 0xb7feb800
mov ecx, dword ptr [ebp-0x54]	
cmp dword ptr [ebp-0x50], ecx	
mov dword ptr [ebp-0x4c], ecx	
jz 0xb7feb897	
mov edx, dword ptr [ebp-0x50]	
mov eax, dword ptr [ebp-0x58]	
sub edx, dword ptr [ebp-0x54]	
add eax, dword ptr [ebp-0x54]	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp], eax	
call 0xb7ff6920	realloc
START: 0xb7feb897
mov esp, dword ptr [ebp-0x7c]	
mov eax, dword ptr [ebp-0x5c]	
mov ecx, dword ptr [ebp-0x64]	
mov dword ptr [eax+ecx*1], 0x0	
mov edx, dword ptr [ebp-0x78]	
or byte ptr [edx+0x196], 0x1	
mov ecx, dword ptr [ebp-0x6c]	
mov dword ptr [edx+0x1f0], eax	
test ecx, ecx	
jz 0xb7feb8c9	
mov ecx, dword ptr [ebp-0x6c]	
mov dword ptr [esp], ecx	
call 0xb7ff01e0	___tls_get_addr
START: 0xb7feb8c9
mov edx, dword ptr [ebp-0x60]	
test edx, edx	
jnz 0xb7fec166	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0x8	
START: 0xb7fe0d4a
sub esp, 0x8	
rdtsc 	
sub eax, dword ptr [ebp-0x88]	
sbb edx, dword ptr [ebp-0x84]	
add dword ptr [ebx-0x16c], eax	
mov eax, dword ptr [ebp-0x7c]	
adc dword ptr [ebx-0x168], edx	
mov edx, dword ptr [eax+0x160]	
test edx, edx	
jz 0xb7fe0d8d	
mov esi, dword ptr [eax+0x15c]	
mov eax, edx	
sub eax, 0x1	
mov ecx, dword ptr [esi+eax*4]	
or byte ptr [ecx+0x194], 0x10	
test eax, eax	
jnz 0xb7fe0d7c	
mov eax, dword ptr [ebx+0x554]	
mov ecx, dword ptr [ebx+0x558]	
mov dword ptr [ecx+0xc], eax	
mov eax, dword ptr [ebx+0x554]	
test eax, eax	
jz 0xb7fe0da9	
START: 0xb7fe0d7c
sub eax, 0x1	
mov ecx, dword ptr [esi+eax*4]	
or byte ptr [ecx+0x194], 0x10	
test eax, eax	
jnz 0xb7fe0d7c	
mov eax, dword ptr [ebx+0x554]	
mov ecx, dword ptr [ebx+0x558]	
mov dword ptr [ecx+0xc], eax	
mov eax, dword ptr [ebx+0x554]	
test eax, eax	
jz 0xb7fe0da9	
mov dword ptr [eax+0x10], ecx	
cmp edx, 0x1	
jbe 0xb7fe0de3	
START: 0xb7fe0dae
mov eax, dword ptr [ebp-0x7c]	
mov esi, dword ptr [ebp-0x9c]	
mov ecx, dword ptr [eax+0x15c]	
cmp dword ptr [ecx+0x4], esi	
jz 0xb7fe284b	
mov esi, 0x1	
mov eax, dword ptr [ebp-0x9c]	
jmp 0xb7fe0ddc	
START: 0xb7fe0ddc
add esi, 0x1	
cmp esi, edx	
jnz 0xb7fe0dd3	
mov byte ptr [ebp-0x80], 0x0	
mov eax, dword ptr [ebp-0x2c]	
xor edx, edx	
lea ecx, ptr [ebp-0x3c]	
test eax, eax	
setz dl	
cmp eax, 0x3	
setz al	
movzx eax, al	
mov dword ptr [ebp-0x3c], edx	
lea edx, ptr [ebx-0x1c3d4]	
mov dword ptr [ebp-0x38], eax	
lea eax, ptr [ebx-0x1fc54]	
call 0xb7fecd40	_dl_rtld_di_serinfo
START: 0xb7fe0dd3
cmp dword ptr [ecx+esi*4], eax	
jz 0xb7fe146c	
add esi, 0x1	
cmp esi, edx	
jnz 0xb7fe0dd3	
mov byte ptr [ebp-0x80], 0x0	
mov eax, dword ptr [ebp-0x2c]	
xor edx, edx	
lea ecx, ptr [ebp-0x3c]	
test eax, eax	
setz dl	
cmp eax, 0x3	
setz al	
movzx eax, al	
mov dword ptr [ebp-0x3c], edx	
lea edx, ptr [ebx-0x1c3d4]	
mov dword ptr [ebp-0x38], eax	
lea eax, ptr [ebx-0x1fc54]	
call 0xb7fecd40	_dl_rtld_di_serinfo
START: 0xb7fe146c
lea eax, ptr [esi*4-0x4]	
mov edi, dword ptr [ebp-0x2c]	
mov eax, dword ptr [ecx+eax*1]	
test edi, edi	
mov dword ptr [ebx+0x558], eax	
jnz 0xb7fe25b1	
add esi, 0x1	
xor edi, edi	
cmp edx, esi	
jbe 0xb7fe1493	
mov edi, dword ptr [ecx+esi*4]	
mov ecx, dword ptr [ebx-0x1c4]	
mov dword ptr [ebx+0x554], edi	
mov edx, dword ptr [eax+0xc]	
test ecx, ecx	
jz 0xb7fe14ae	
START: 0xb7fe1493
mov ecx, dword ptr [ebx-0x1c4]	
mov dword ptr [ebx+0x554], edi	
mov edx, dword ptr [eax+0xc]	
test ecx, ecx	
jz 0xb7fe14ae	
cmp ecx, edx	
jz 0xb7fe2599	
cmp edx, edi	
jnz 0xb7fe256f	
START: 0xb7fe14b6
mov edi, dword ptr [ebp-0x9c]	
mov dword ptr [eax+0xc], edi	
mov edx, dword ptr [ebx+0x554]	
test edx, edx	
jz 0xb7fe14f6	
cmp eax, dword ptr [edx+0x10]	
jnz 0xb7fe2545	
mov esi, dword ptr [ebp-0x9c]	
mov byte ptr [ebp-0x80], 0x1	
mov dword ptr [edx+0x10], esi	
jmp 0xb7fe0de7	
START: 0xb7fe14f6
mov byte ptr [ebp-0x80], 0x1	
jmp 0xb7fe0de7	
START: 0xb7fe0de7
mov eax, dword ptr [ebp-0x2c]	
xor edx, edx	
lea ecx, ptr [ebp-0x3c]	
test eax, eax	
setz dl	
cmp eax, 0x3	
setz al	
movzx eax, al	
mov dword ptr [ebp-0x3c], edx	
lea edx, ptr [ebx-0x1c3d4]	
mov dword ptr [ebp-0x38], eax	
lea eax, ptr [ebx-0x1fc54]	
call 0xb7fecd40	_dl_rtld_di_serinfo
START: 0xb7fecd40
sub esp, 0x3c	
mov dword ptr [esp+0x2c], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fecd4c
add ebx, 0x122a8	
mov dword ptr [esp+0x30], esi	
mov esi, eax	
mov dword ptr [esp+0x34], edi	
mov edi, edx	
mov dword ptr [esp+0x38], ebp	
mov ebp, ecx	
call dword ptr [ebx+0x544]	
START: 0xb7fecd6a
mov edx, dword ptr [ebx+0x8b0]	
mov dword ptr [ebx+0x8b0], esi	
mov ecx, dword ptr [eax]	
mov dword ptr [eax], 0x0	
mov dword ptr [esp], ebp	
mov dword ptr [esp+0x1c], eax	
mov dword ptr [esp+0x14], edx	
mov dword ptr [esp+0x18], ecx	
call edi	
START: 0xb7fe2c20
sub esp, 0xc	
mov edx, 0x1	
mov dword ptr [esp+0x4], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe2c31
add ebx, 0x1c3c3	
mov dword ptr [esp+0x8], esi	
mov esi, dword ptr [esp+0x10]	
mov ecx, dword ptr [esi+0x4]	
mov eax, dword ptr [ebx+0x2c]	
call 0xb7fee690	_dl_debug_state
START: 0xb7fee690
push ebp	
mov ebp, ecx	
push edi	
xor edi, edi	
push esi	
push ebx	
sub esp, 0x1c	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fee6a0
add ebx, 0x10954	
test eax, eax	
mov dword ptr [esp+0xc], edx	
jz 0xb7fee6ea	
mov esi, eax	
jmp 0xb7fee6c1	
START: 0xb7fee6c1
xor eax, eax	
test byte ptr [esi+0x195], 0x2	
jnz 0xb7fee6b8	
mov edx, dword ptr [esp+0xc]	
mov eax, esi	
mov ecx, ebp	
call 0xb7fee220	_dl_debug_state
START: 0xb7fee220
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
sub esp, 0x8c	
mov dword ptr [ebp-0x48], eax	
mov dword ptr [ebp-0x58], edx	
mov edx, eax	
mov eax, dword ptr [eax+0x34]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fee23c
add ebx, 0x10db8	
mov dword ptr [ebp-0x60], ecx	
test eax, eax	
jz 0xb7fee569	
mov edi, dword ptr [edx+0xac]	
mov eax, dword ptr [eax+0x4]	
mov dword ptr [ebp-0x68], edi	
mov ecx, dword ptr [ebp-0x68]	
mov edi, dword ptr [edx+0xb4]	
mov dword ptr [ebp-0x50], eax	
test ecx, ecx	
mov dword ptr [ebp-0x6c], edi	
jz 0xb7fee3ea	
mov edi, dword ptr [ebp-0x68]	
mov eax, dword ptr [edx]	
mov edi, dword ptr [edi+0x4]	
add edi, eax	
cmp word ptr [edi], 0x1	
mov dword ptr [ebp-0x5c], edi	
jnz 0xb7fee5d2	
START: 0xb7fee287
lea edi, ptr [ebx+0x2c]	
mov dword ptr [ebp-0x3c], 0x0	
mov dword ptr [ebp-0x4c], 0x0	
mov dword ptr [ebp-0x64], edi	
data16 nop 	
mov edi, dword ptr [ebp-0x5c]	
mov eax, dword ptr [ebp-0x50]	
mov edx, dword ptr [ebp-0x48]	
mov ecx, dword ptr [ebp-0x64]	
add eax, dword ptr [edi+0x4]	
mov dword ptr [ebp-0x40], eax	
imul eax, dword ptr [edx+0x18], 0x4c	
mov edi, dword ptr [ecx+eax*1]	
test edi, edi	
jz 0xb7fee390	
mov esi, dword ptr [ebp-0x40]	
jmp 0xb7fee2d3	
START: 0xb7fee2d3
mov edx, edi	
mov eax, esi	
call 0xb7feddc0	_dl_debug_state
START: 0xb7fee2dc
test eax, eax	
jz 0xb7fee2c8	
test edi, edi	
jz 0xb7fee5a8	
mov eax, dword ptr [ebp-0x60]	
test eax, eax	
jnz 0xb7fee671	
START: 0xb7fee2c8
mov edi, dword ptr [edi+0xc]	
test edi, edi	
jz 0xb7fee390	
mov edx, edi	
mov eax, esi	
call 0xb7feddc0	_dl_debug_state
START: 0xb7fee2f3
mov esi, dword ptr [ebp-0x5c]	
mov dword ptr [ebp-0x54], edi	
add esi, dword ptr [esi+0x8]	
jmp 0xb7fee302	
START: 0xb7fee302
mov eax, dword ptr [ebp-0x50]	
add eax, dword ptr [esi+0x8]	
mov edx, dword ptr [ebp-0x48]	
mov ecx, dword ptr [ebp-0x54]	
mov dword ptr [ebp-0x44], eax	
mov eax, dword ptr [ebp-0x48]	
movzx edi, word ptr [esi+0x4]	
mov ecx, dword ptr [ecx+0x14]	
mov eax, dword ptr [eax+0x18]	
and edi, 0x2	
mov dword ptr [ebp-0x40], ecx	
mov ecx, dword ptr [esi]	
mov dword ptr [ebp-0x70], eax	
mov eax, dword ptr [edx+0x4]	
cmp byte ptr [eax], 0x0	
jnz 0xb7fee339	
mov eax, dword ptr [ebx-0x188]	
mov eax, dword ptr [eax]	
mov edx, dword ptr [ebp-0x58]	
mov dword ptr [esp+0xc], edi	
mov edi, dword ptr [ebp-0x40]	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [ebp-0x44]	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], edx	
mov edx, dword ptr [ebp-0x70]	
call 0xb7fedea0	_dl_debug_state
START: 0xb7fedea0
push ebp	
mov ebp, esp	
push edi	
mov edi, ecx	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fedead
add ebx, 0x11147	
sub esp, 0x5c	
mov esi, dword ptr [ebp+0xc]	
mov dword ptr [ebp-0x40], eax	
mov eax, dword ptr [esi+0x34]	
test byte ptr [ebx-0x354], 0x10	
mov ecx, dword ptr [eax+0x4]	
jnz 0xb7fee153	
mov esi, dword ptr [ebp+0xc]	
mov eax, dword ptr [esi+0xb4]	
test eax, eax	
jz 0xb7fee0b2	
mov esi, dword ptr [eax+0x4]	
test esi, esi	
jz 0xb7fee129	
START: 0xb7fedeeb
mov edx, dword ptr [ebp+0xc]	
add esi, dword ptr [edx]	
cmp word ptr [esi], 0x1	
jnz 0xb7fedf12	
cmp dword ptr [esi+0x8], edi	
jz 0xb7fedfe0	
mov eax, dword ptr [esi+0x10]	
test eax, eax	
jz 0xb7fee018	
START: 0xb7fedf0a
add esi, eax	
cmp word ptr [esi], 0x1	
jz 0xb7fedef6	
lea eax, ptr [ebp-0x25]	
mov dword ptr [esp+0x10], 0x0	
mov dword ptr [esp+0xc], 0xa	
mov dword ptr [esp+0x8], eax	
mov byte ptr [ebp-0x25], 0x0	
movzx eax, word ptr [esi]	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp], eax	
call 0xb7ff3c60	realloc
START: 0xb7fedef6
cmp dword ptr [esi+0x8], edi	
jz 0xb7fedfe0	
mov eax, dword ptr [esi+0x10]	
test eax, eax	
jz 0xb7fee018	
add esi, eax	
cmp word ptr [esi], 0x1	
jz 0xb7fedef6	
START: 0xb7fedfe0
mov eax, dword ptr [esi+0xc]	
mov edx, dword ptr [ebp+0x8]	
mov eax, dword ptr [esi+eax*1]	
mov dword ptr [esp], edx	
mov dword ptr [ebp-0x44], ecx	
add eax, ecx	
mov dword ptr [esp+0x4], eax	
call 0xb7ff6220	realloc
START: 0xb7fedffa
mov ecx, dword ptr [ebp-0x44]	
test eax, eax	
jnz 0xb7fedeff	
xor esi, esi	
lea esp, ptr [ebp-0xc]	
mov eax, esi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0x10	
START: 0xb7fee359
or dword ptr [ebp-0x4c], eax	
movzx eax, word ptr [esi+0x6]	
sub esp, 0x10	
and eax, 0x7fff	
cmp dword ptr [ebp-0x3c], eax	
cmovnb eax, dword ptr [ebp-0x3c]	
mov dword ptr [ebp-0x3c], eax	
mov eax, dword ptr [esi+0xc]	
test eax, eax	
jnz 0xb7fee300	
mov edi, dword ptr [ebp-0x5c]	
mov eax, dword ptr [edi+0xc]	
test eax, eax	
jz 0xb7fee3f8	
add edi, eax	
mov dword ptr [ebp-0x5c], edi	
jmp 0xb7fee2a0	
START: 0xb7fee300
add esi, eax	
mov eax, dword ptr [ebp-0x50]	
add eax, dword ptr [esi+0x8]	
mov edx, dword ptr [ebp-0x48]	
mov ecx, dword ptr [ebp-0x54]	
mov dword ptr [ebp-0x44], eax	
mov eax, dword ptr [ebp-0x48]	
movzx edi, word ptr [esi+0x4]	
mov ecx, dword ptr [ecx+0x14]	
mov eax, dword ptr [eax+0x18]	
and edi, 0x2	
mov dword ptr [ebp-0x40], ecx	
mov ecx, dword ptr [esi]	
mov dword ptr [ebp-0x70], eax	
mov eax, dword ptr [edx+0x4]	
cmp byte ptr [eax], 0x0	
jnz 0xb7fee339	
mov eax, dword ptr [ebx-0x188]	
mov eax, dword ptr [eax]	
mov edx, dword ptr [ebp-0x58]	
mov dword ptr [esp+0xc], edi	
mov edi, dword ptr [ebp-0x40]	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [ebp-0x44]	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], edx	
mov edx, dword ptr [ebp-0x70]	
call 0xb7fedea0	_dl_debug_state
START: 0xb7fee3f8
mov eax, dword ptr [ebp-0x6c]	
test eax, eax	
jz 0xb7fee442	
mov edi, dword ptr [ebp-0x6c]	
mov eax, dword ptr [ebp-0x48]	
mov edx, dword ptr [edi+0x4]	
add edx, dword ptr [eax]	
movzx eax, word ptr [edx+0x4]	
and eax, 0x7fff	
cmp dword ptr [ebp-0x3c], eax	
cmovnb eax, dword ptr [ebp-0x3c]	
mov dword ptr [ebp-0x3c], eax	
mov eax, dword ptr [edx+0x10]	
test eax, eax	
jz 0xb7fee442	
mov ecx, dword ptr [ebp-0x3c]	
nop 	
add edx, eax	
movzx eax, word ptr [edx+0x4]	
and eax, 0x7fff	
cmp ecx, eax	
cmovb ecx, eax	
mov eax, dword ptr [edx+0x10]	
test eax, eax	
jnz 0xb7fee428	
START: 0xb7fee442
mov edi, dword ptr [ebp-0x3c]	
test edi, edi	
jnz 0xb7fee454	
mov eax, dword ptr [ebp-0x4c]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fee454
mov edi, dword ptr [ebp-0x3c]	
mov dword ptr [esp+0x4], 0x10	
add edi, 0x1	
mov dword ptr [ebp-0x44], edi	
mov dword ptr [esp], edi	
call 0xb7fde7e0	.plt
START: 0xb7fee46d
mov edx, dword ptr [ebp-0x48]	
test eax, eax	
mov dword ptr [ebp-0x40], eax	
mov dword ptr [edx+0x170], eax	
jz 0xb7fee57b	
mov eax, dword ptr [edx+0xe4]	
mov esi, dword ptr [ebp-0x68]	
mov dword ptr [edx+0x174], edi	
mov eax, dword ptr [eax+0x4]	
test esi, esi	
mov dword ptr [edx+0x1a4], eax	
jz 0xb7fee506	
mov ecx, dword ptr [ebp-0x68]	
mov esi, dword ptr [ebp-0x50]	
mov edi, dword ptr [ecx+0x4]	
add edi, dword ptr [edx]	
mov eax, dword ptr [edi+0x8]	
mov dword ptr [ebp-0x3c], edi	
add eax, edi	
jmp 0xb7fee4ba	
START: 0xb7fee4ba
movzx ecx, word ptr [eax+0x6]	
mov edx, ecx	
and edx, 0x7fff	
cmp dword ptr [ebp-0x44], edx	
jbe 0xb7fee4f1	
mov edi, dword ptr [eax]	
shl edx, 0x4	
and ecx, 0x8000	
add edx, dword ptr [ebp-0x40]	
mov dword ptr [edx+0x8], ecx	
mov ecx, dword ptr [eax+0x8]	
mov dword ptr [edx+0x4], edi	
mov edi, dword ptr [ebp-0x3c]	
add ecx, esi	
mov dword ptr [edx], ecx	
mov ecx, esi	
add ecx, dword ptr [edi+0x4]	
mov dword ptr [edx+0xc], ecx	
mov edx, dword ptr [eax+0xc]	
test edx, edx	
jnz 0xb7fee4b8	
mov edi, dword ptr [ebp-0x3c]	
mov eax, dword ptr [edi+0xc]	
test eax, eax	
jz 0xb7fee506	
START: 0xb7fee4b8
add eax, edx	
movzx ecx, word ptr [eax+0x6]	
mov edx, ecx	
and edx, 0x7fff	
cmp dword ptr [ebp-0x44], edx	
jbe 0xb7fee4f1	
mov edi, dword ptr [eax]	
shl edx, 0x4	
and ecx, 0x8000	
add edx, dword ptr [ebp-0x40]	
mov dword ptr [edx+0x8], ecx	
mov ecx, dword ptr [eax+0x8]	
mov dword ptr [edx+0x4], edi	
mov edi, dword ptr [ebp-0x3c]	
add ecx, esi	
mov dword ptr [edx], ecx	
mov ecx, esi	
add ecx, dword ptr [edi+0x4]	
mov dword ptr [edx+0xc], ecx	
mov edx, dword ptr [eax+0xc]	
test edx, edx	
jnz 0xb7fee4b8	
mov edi, dword ptr [ebp-0x3c]	
mov eax, dword ptr [edi+0xc]	
test eax, eax	
jz 0xb7fee506	
START: 0xb7fee506
mov ecx, dword ptr [ebp-0x6c]	
test ecx, ecx	
jz 0xb7fee449	
mov edi, dword ptr [ebp-0x6c]	
mov edx, dword ptr [ebp-0x48]	
mov eax, dword ptr [edi+0x4]	
add eax, dword ptr [edx]	
mov edi, dword ptr [ebp-0x50]	
jmp 0xb7fee52a	
START: 0xb7fee449
mov eax, dword ptr [ebp-0x4c]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fee6d9
mov esi, dword ptr [esi+0xc]	
test eax, eax	
setnz al	
movzx eax, al	
or edi, eax	
test esi, esi	
jnz 0xb7fee6c1	
add esp, 0x1c	
mov eax, edi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fee3ea
mov dword ptr [ebp-0x3c], 0x0	
mov dword ptr [ebp-0x4c], 0x0	
mov eax, dword ptr [ebp-0x6c]	
test eax, eax	
jz 0xb7fee442	
mov edi, dword ptr [ebp-0x6c]	
mov eax, dword ptr [ebp-0x48]	
mov edx, dword ptr [edi+0x4]	
add edx, dword ptr [eax]	
movzx eax, word ptr [edx+0x4]	
and eax, 0x7fff	
cmp dword ptr [ebp-0x3c], eax	
cmovnb eax, dword ptr [ebp-0x3c]	
mov dword ptr [ebp-0x3c], eax	
mov eax, dword ptr [edx+0x10]	
test eax, eax	
jz 0xb7fee442	
mov ecx, dword ptr [ebp-0x3c]	
nop 	
add edx, eax	
movzx eax, word ptr [edx+0x4]	
and eax, 0x7fff	
cmp ecx, eax	
cmovb ecx, eax	
mov eax, dword ptr [edx+0x10]	
test eax, eax	
jnz 0xb7fee428	
START: 0xb7fee43f
mov dword ptr [ebp-0x3c], ecx	
mov edi, dword ptr [ebp-0x3c]	
test edi, edi	
jnz 0xb7fee454	
mov eax, dword ptr [ebp-0x4c]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fee52a
test byte ptr [eax+0x2], 0x1	
mov ecx, dword ptr [eax+0xc]	
jnz 0xb7fee557	
movzx edx, word ptr [eax+0x4]	
mov ecx, dword ptr [eax+ecx*1]	
mov esi, dword ptr [eax+0x8]	
and edx, 0x7fff	
shl edx, 0x4	
add ecx, edi	
add edx, dword ptr [ebp-0x40]	
mov dword ptr [edx+0x4], esi	
mov dword ptr [edx], ecx	
mov dword ptr [edx+0xc], 0x0	
mov edx, dword ptr [eax+0x10]	
test edx, edx	
jnz 0xb7fee528	
mov eax, dword ptr [ebp-0x4c]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fee557
mov edx, dword ptr [eax+0x10]	
test edx, edx	
jnz 0xb7fee528	
mov eax, dword ptr [ebp-0x4c]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fee528
add eax, edx	
test byte ptr [eax+0x2], 0x1	
mov ecx, dword ptr [eax+0xc]	
jnz 0xb7fee557	
movzx edx, word ptr [eax+0x4]	
mov ecx, dword ptr [eax+ecx*1]	
mov esi, dword ptr [eax+0x8]	
and edx, 0x7fff	
shl edx, 0x4	
add ecx, edi	
add edx, dword ptr [ebp-0x40]	
mov dword ptr [edx+0x4], esi	
mov dword ptr [edx], ecx	
mov dword ptr [edx+0xc], 0x0	
mov edx, dword ptr [eax+0x10]	
test edx, edx	
jnz 0xb7fee528	
mov eax, dword ptr [ebp-0x4c]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fee339
mov edx, dword ptr [ebp-0x58]	
mov dword ptr [esp+0xc], edi	
mov edi, dword ptr [ebp-0x40]	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [ebp-0x44]	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], edx	
mov edx, dword ptr [ebp-0x70]	
call 0xb7fedea0	_dl_debug_state
START: 0xb7fee428
add edx, eax	
movzx eax, word ptr [edx+0x4]	
and eax, 0x7fff	
cmp ecx, eax	
cmovb ecx, eax	
mov eax, dword ptr [edx+0x10]	
test eax, eax	
jnz 0xb7fee428	
mov dword ptr [ebp-0x3c], ecx	
mov edi, dword ptr [ebp-0x3c]	
test edi, edi	
jnz 0xb7fee454	
mov eax, dword ptr [ebp-0x4c]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe2c4d
test eax, eax	
jz 0xb7fe2c57	
mov esi, dword ptr [esi]	
test esi, esi	
jnz 0xb7fe2c68	
mov ebx, dword ptr [esp+0x4]	
mov esi, dword ptr [esp+0x8]	
add esp, 0xc	
ret 	
START: 0xb7fe2c57
mov ebx, dword ptr [esp+0x4]	
mov esi, dword ptr [esp+0x8]	
add esp, 0xc	
ret 	
START: 0xb7fecd8f
mov eax, dword ptr [esp+0x1c]	
mov ecx, dword ptr [esp+0x18]	
mov edx, dword ptr [esp+0x14]	
mov esi, dword ptr [esp+0x30]	
mov edi, dword ptr [esp+0x34]	
mov dword ptr [eax], ecx	
mov ebp, dword ptr [esp+0x38]	
mov dword ptr [ebx+0x8b0], edx	
mov ebx, dword ptr [esp+0x2c]	
add esp, 0x3c	
ret 	
START: 0xb7fe0e14
mov edi, dword ptr [ebp-0x90]	
movzx eax, byte ptr [ebx+0x88c]	
test edi, edi	
mov byte ptr [ebp-0xa0], al	
jz 0xb7fe15c7	
mov ecx, dword ptr [ebx+0x888]	
test ecx, ecx	
jnz 0xb7fe0e3e	
call 0xb7fdff00	.text
START: 0xb7fe15c7
mov esi, dword ptr [ebx+0x84c]	
mov eax, dword ptr [ebx+0x834]	
test esi, esi	
mov dword ptr [ebx+0x83c], eax	
jnz 0xb7fe0e2f	
call 0xb7fdec9f	.text
START: 0xb7fdec9f
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fdeca6
add ebx, 0x2034e	
sub esp, 0x24	
mov dword ptr [esp+0x4], 0x1	
mov esi, dword ptr [ebx+0x834]	
lea eax, ptr [esi*8+0x200]	
mov dword ptr [esp], eax	
call 0xb7fde7e0	.plt
START: 0xb7ff3813
mov eax, dword ptr [ebx-0x344]	
mov edx, eax	
lea edi, ptr [eax+esi*1-0x1]	
neg edx	
and edi, edx	
jz 0xb7ff38bc	
mov dword ptr [esp+0x14], 0x0	
mov dword ptr [esp+0x10], 0xffffffff	
mov dword ptr [esp+0xc], 0x22	
mov dword ptr [esp+0x8], 0x3	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], 0x0	
call 0xb7ff5d40	realloc
START: 0xb7ff3859
cmp eax, 0xffffffff	
jz 0xb7ff38b8	
cmp eax, dword ptr [ebx+0x8e8]	
mov edx, eax	
cmovz edx, dword ptr [ebx+0x8ec]	
add edi, eax	
mov dword ptr [ebx+0x8e8], edi	
lea eax, ptr [edx+esi*1]	
mov dword ptr [ebx+0x8f0], edx	
mov dword ptr [ebx+0x8ec], eax	
mov eax, edx	
mov ebx, dword ptr [esp+0x20]	
mov esi, dword ptr [esp+0x24]	
mov edi, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb7fdeccc
lea edx, ptr [esi+0x3f]	
cmp dword ptr [ebx+0x78], 0x0	
mov dword ptr [ebx+0x838], eax	
mov dword ptr [eax], edx	
mov dword ptr [eax+0x4], 0x0	
jz 0xb7fded11	
lea eax, ptr [ebx-0x722b]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [ebx-0x758d]	
mov dword ptr [esp+0x4], eax	
lea eax, ptr [ebx-0x62c4]	
mov dword ptr [esp+0x8], 0x2ee	
mov dword ptr [esp], eax	
call 0xb7ff39d0	free
START: 0xb7fded11
mov edx, dword ptr [ebx+0x2c]	
xor ecx, ecx	
jmp 0xb7fded2c	
START: 0xb7fded2c
test edx, edx	
jnz 0xb7fded1b	
cmp ecx, esi	
jz 0xb7fded5e	
lea eax, ptr [ebx-0x722b]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [ebx-0x758d]	
mov dword ptr [esp+0x4], eax	
lea eax, ptr [ebx-0x6290]	
mov dword ptr [esp+0x8], 0x2fa	
mov dword ptr [esp], eax	
call 0xb7ff39d0	free
START: 0xb7fded1b
cmp dword ptr [edx+0x234], 0x0	
jz 0xb7fded29	
mov dword ptr [eax+ecx*8+0xc], edx	
inc ecx	
mov edx, dword ptr [edx+0xc]	
test edx, edx	
jnz 0xb7fded1b	
cmp ecx, esi	
jz 0xb7fded5e	
START: 0xb7fded29
mov edx, dword ptr [edx+0xc]	
test edx, edx	
jnz 0xb7fded1b	
cmp ecx, esi	
jz 0xb7fded5e	
lea eax, ptr [ebx-0x722b]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [ebx-0x758d]	
mov dword ptr [esp+0x4], eax	
lea eax, ptr [ebx-0x6290]	
mov dword ptr [esp+0x8], 0x2fa	
mov dword ptr [esp], eax	
call 0xb7ff39d0	free
START: 0xb7fded5e
call 0xb7fef450	__tls_get_addr
START: 0xb7fef450
push ebp	
push edi	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fef459
add ebx, 0xfb9b	
sub esp, 0x4c	
mov ecx, dword ptr [ebx+0x838]	
test ecx, ecx	
mov dword ptr [esp+0x38], ecx	
jz 0xb7fef64a	
mov ecx, dword ptr [esp+0x38]	
mov eax, dword ptr [ecx+0x4]	
test eax, eax	
jnz 0xb7fef620	
mov esi, dword ptr [ecx+0xc]	
test esi, esi	
jz 0xb7fef5dd	
START: 0xb7fef48e
mov ecx, dword ptr [ecx]	
test ecx, ecx	
mov dword ptr [esp+0x3c], ecx	
jz 0xb7fef5f6	
mov dword ptr [esp+0x20], 0x0	
mov dword ptr [esp+0x2c], 0x0	
mov dword ptr [esp+0x34], 0x0	
mov dword ptr [esp+0x30], 0x0	
mov dword ptr [esp+0x24], 0x40	
jmp 0xb7fef514	
START: 0xb7fef514
mov ecx, dword ptr [esi+0x238]	
mov eax, dword ptr [esi+0x23c]	
mov edx, dword ptr [esp+0x34]	
lea ebp, ptr [ecx-0x1]	
neg eax	
and ebp, eax	
mov eax, dword ptr [esp+0x24]	
cmp dword ptr [esp+0x24], ecx	
cmovb eax, ecx	
mov dword ptr [esp+0x24], eax	
mov eax, dword ptr [esi+0x234]	
sub edx, dword ptr [esp+0x30]	
lea edi, ptr [ecx+eax*1-0x1]	
sub edi, ebp	
cmp edx, eax	
mov dword ptr [esp+0x28], edx	
mov dword ptr [esp+0x1c], eax	
jnb 0xb7fef4c8	
mov eax, dword ptr [esp+0x2c]	
xor edx, edx	
add eax, edi	
div ecx	
mov edx, dword ptr [esp+0x2c]	
add edx, dword ptr [esp+0x1c]	
add edx, dword ptr [esp+0x28]	
imul eax, ecx	
add eax, ebp	
cmp eax, edx	
jbe 0xb7fef58b	
mov ecx, eax	
sub ecx, dword ptr [esp+0x1c]	
mov dword ptr [esp+0x34], ecx	
mov ecx, dword ptr [esp+0x2c]	
mov dword ptr [esp+0x30], ecx	
mov dword ptr [esi+0x240], eax	
mov dword ptr [esp+0x2c], eax	
jmp 0xb7fef4ed	
START: 0xb7fef58b
mov dword ptr [esi+0x240], eax	
mov dword ptr [esp+0x2c], eax	
jmp 0xb7fef4ed	
START: 0xb7fef4ed
add dword ptr [esp+0x20], 0x1	
mov ecx, dword ptr [esp+0x20]	
mov eax, dword ptr [esp+0x38]	
mov esi, dword ptr [eax+ecx*8+0xc]	
test esi, esi	
jz 0xb7fef5a0	
mov ecx, dword ptr [esp+0x3c]	
cmp dword ptr [esp+0x20], ecx	
jz 0xb7fef5f6	
mov ecx, dword ptr [esi+0x238]	
mov eax, dword ptr [esi+0x23c]	
mov edx, dword ptr [esp+0x34]	
lea ebp, ptr [ecx-0x1]	
neg eax	
and ebp, eax	
mov eax, dword ptr [esp+0x24]	
cmp dword ptr [esp+0x24], ecx	
cmovb eax, ecx	
mov dword ptr [esp+0x24], eax	
mov eax, dword ptr [esi+0x234]	
sub edx, dword ptr [esp+0x30]	
lea edi, ptr [ecx+eax*1-0x1]	
sub edi, ebp	
cmp edx, eax	
mov dword ptr [esp+0x28], edx	
mov dword ptr [esp+0x1c], eax	
jnb 0xb7fef4c8	
START: 0xb7fef5a0
mov ecx, dword ptr [esp+0x2c]	
mov edx, dword ptr [esp+0x24]	
mov dword ptr [ebx+0x844], ecx	
lea eax, ptr [ecx+edx*1+0x67f]	
xor edx, edx	
div dword ptr [esp+0x24]	
imul eax, dword ptr [esp+0x24]	
add eax, 0x4c0	
mov ecx, dword ptr [esp+0x24]	
mov dword ptr [ebx+0x840], eax	
mov dword ptr [ebx+0x848], ecx	
add esp, 0x4c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fded63
call 0xb7fef770	_dl_get_tls_static_info
START: 0xb7fef770
sub esp, 0x3c	
mov dword ptr [esp+0x2c], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fef77c
add ebx, 0xf878	
mov dword ptr [esp+0x30], esi	
mov dword ptr [esp+0x38], ebp	
mov dword ptr [esp+0x34], edi	
mov esi, dword ptr [ebx+0x840]	
mov eax, dword ptr [ebx+0x848]	
mov dword ptr [esp+0x4], esi	
mov dword ptr [esp], eax	
call 0xb7fde7c0	.plt
START: 0xb7fef7a6
test eax, eax	
mov ebp, eax	
jz 0xb7fef858	
lea edx, ptr [eax+esi*1-0x4c0]	
mov esi, 0x4c0	
test dl, 0x1	
mov edi, edx	
jnz 0xb7fef830	
test edi, 0x2	
jnz 0xb7fef848	
START: 0xb7fef7cb
mov ecx, esi	
xor eax, eax	
shr ecx, 0x2	
test esi, 0x2	
rep stosd dword ptr [edi]	
START: 0xb7fef7d8
rep stosd dword ptr [edi]	
START: 0xb7fef7da
jnz 0xb7fef820	
and esi, 0x1	
jnz 0xb7fef800	
mov eax, edx	
call 0xb7fef2d0	_dl_mcount
START: 0xb7fef2d0
sub esp, 0x1c	
mov dword ptr [esp+0x10], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fef2dc
add ebx, 0xfd18	
mov dword ptr [esp+0x18], edi	
mov dword ptr [esp+0x14], esi	
mov esi, eax	
mov dword ptr [esp+0x4], 0x8	
mov edi, dword ptr [ebx+0x834]	
lea eax, ptr [edi+0x10]	
mov dword ptr [esp], eax	
call 0xb7fde7e0	.plt
START: 0xb7fef305
test eax, eax	
jz 0xb7fef328	
add edi, 0xe	
mov dword ptr [eax], edi	
add eax, 0x8	
mov dword ptr [esi+0x4], eax	
mov eax, esi	
mov ebx, dword ptr [esp+0x10]	
mov esi, dword ptr [esp+0x14]	
mov edi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb7fef7e8
test eax, eax	
jz 0xb7fef80e	
mov ebx, dword ptr [esp+0x2c]	
mov esi, dword ptr [esp+0x30]	
mov edi, dword ptr [esp+0x34]	
mov ebp, dword ptr [esp+0x38]	
add esp, 0x3c	
ret 	
START: 0xb7fded68
test eax, eax	
mov edx, eax	
jnz 0xb7fded92	
lea esi, ptr [ebx-0x6268]	
mov dword ptr [esp+0x4], esi	
mov dword ptr [esp], 0x2	
call 0xb7fedd90	_dl_debug_state
START: 0xb7fded92
mov eax, dword ptr [eax+0x4]	
lea ecx, ptr [esp+0x10]	
mov dword ptr [ebx+0x84c], eax	
mov eax, dword ptr [ebx-0x1cc]	
mov dword ptr [edx], edx	
mov dword ptr [edx+0x8], edx	
mov dword ptr [esp+0x10], 0xffffffff	
mov dword ptr [edx+0x10], eax	
mov eax, 0xf3	
mov dword ptr [esp+0x14], edx	
mov dword ptr [esp+0x18], 0xfffff	
mov dword ptr [esp+0x1c], 0x51	
xchg ebx, ecx	
int 0x80	
START: 0xb7fdedd2
xchg ebx, ecx	
test eax, eax	
lea esi, ptr [ebx-0x6230]	
jnz 0xb7fdedfa	
mov eax, dword ptr [esp+0x10]	
lea eax, ptr [eax*8+0x3]	
mov gs, ax	
mov byte ptr [ebx+0x88c], 0x1	
add esp, 0x24	
mov eax, edx	
pop ebx	
pop esi	
ret 	
START: 0xb7fe15e6
mov dword ptr [ebp-0x90], eax	
jmp 0xb7fe0e2f	
START: 0xb7fe0e2f
mov ecx, dword ptr [ebx+0x888]	
test ecx, ecx	
jnz 0xb7fe0e3e	
call 0xb7fdff00	.text
START: 0xb7fdff00
sub esp, 0x3c	
mov dword ptr [esp+0x34], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fdff0c
add ebx, 0x1f0e8	
mov dword ptr [esp+0x38], esi	
mov eax, dword ptr [ebx-0xe8]	
test eax, eax	
jz 0xb7fdff6e	
mov ecx, dword ptr [eax]	
xor cl, cl	
mov dword ptr [esp+0x28], ecx	
mov dword ptr gs:[0x14], ecx	
mov esi, dword ptr [ebx-0x194]	
test esi, esi	
jz 0xb7fdff52	
mov eax, dword ptr [ebx-0xe8]	
test eax, eax	
jz 0xb7fdff68	
START: 0xb7fdff43
mov eax, dword ptr [eax+0x4]	
mov dword ptr gs:[0x18], eax	
mov dword ptr [ebx-0x190], eax	
mov dword ptr [ebx-0xe8], 0x0	
mov esi, dword ptr [esp+0x38]	
mov ebx, dword ptr [esp+0x34]	
add esp, 0x3c	
ret 	
START: 0xb7fe0e3e
mov eax, dword ptr [ebp-0x2c]	
test eax, eax	
jnz 0xb7fe18a5	
mov eax, dword ptr [ebp-0x7c]	
mov edx, dword ptr [eax+0x13c]	
test edx, edx	
jz 0xb7fe14e4	
mov eax, dword ptr [ebx-0x1e8]	
test eax, eax	
jnz 0xb7fe14e4	
START: 0xb7fe14e4
mov eax, dword ptr [ebx-0x354]	
mov byte ptr [ebp-0x88], 0x0	
jmp 0xb7fe0f53	
START: 0xb7fe0f53
mov edx, dword ptr [ebp-0x7c]	
add edx, 0x15c	
test ah, 0x2	
mov dword ptr [ebx+0x34], edx	
mov edx, dword ptr [ebp-0x7c]	
mov esi, dword ptr [edx+0x15c]	
mov edi, dword ptr [edx+0x160]	
mov edx, dword ptr [ebx+0x540]	
mov dword ptr [ebx-0x340], esi	
mov dword ptr [ebx-0x33c], edi	
mov dword ptr [ebx-0x1d8], edx	
jnz 0xb7fe2691	
cmp byte ptr [ebp-0x88], 0x0	
jz 0xb7fe11d4	
mov eax, dword ptr [ebp-0x7c]	
mov ecx, dword ptr [eax+0x140]	
test ecx, ecx	
jz 0xb7fe1000	
START: 0xb7fe11d4
mov esi, dword ptr [ebx-0x1e8]	
xor ecx, ecx	
test esi, esi	
setnz cl	
mov dword ptr [ebp-0xa8], ecx	
or dword ptr [ebx-0x32c], ecx	
rdtsc 	
mov dword ptr [ebp-0xb0], eax	
mov eax, dword ptr [ebp-0x7c]	
mov dword ptr [ebp-0xac], edx	
mov edi, dword ptr [eax+0x160]	
lea edx, ptr [edi*4-0x4]	
mov dword ptr [ebp-0x98], edx	
jmp 0xb7fe1297	
START: 0xb7fe1297
test edi, edi	
jnz 0xb7fe1216	
rdtsc 	
sub eax, dword ptr [ebp-0xb0]	
sbb edx, dword ptr [ebp-0xac]	
mov dword ptr [ebx+0x894], eax	
mov eax, dword ptr [ebx+0x534]	
mov dword ptr [ebx+0x898], edx	
test eax, eax	
jz 0xb7fe12c8	
call 0xb7fee700	_dl_debug_state
START: 0xb7fe1216
mov ecx, dword ptr [ebp-0x7c]	
sub edi, 0x1	
mov edx, dword ptr [ebp-0x98]	
mov eax, dword ptr [ecx+0x1f0]	
mov esi, dword ptr [eax+edx*1]	
mov eax, dword ptr [esi+0x1c]	
mov eax, dword ptr [eax+0x4]	
test eax, eax	
jnz 0xb7fe25c2	
and byte ptr [esi+0x196], 0xfe	
cmp esi, dword ptr [ebp-0x9c]	
jz 0xb7fe1275	
mov edx, dword ptr [ebx-0x32c]	
xor eax, eax	
mov ecx, dword ptr [ebp-0xa8]	
test edx, edx	
setnz al	
mov dword ptr [esp+0xc], ecx	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esi+0x1cc]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], eax	
call 0xb7fe9400	_dl_rtld_di_serinfo
START: 0xb7fe25c2
mov dword ptr [eax+0x8], 0x1	
mov eax, dword ptr [eax+0x4]	
test eax, eax	
jz 0xb7fe1239	
jmp 0xb7fe25c2	
START: 0xb7fe1239
and byte ptr [esi+0x196], 0xfe	
cmp esi, dword ptr [ebp-0x9c]	
jz 0xb7fe1275	
mov edx, dword ptr [ebx-0x32c]	
xor eax, eax	
mov ecx, dword ptr [ebp-0xa8]	
test edx, edx	
setnz al	
mov dword ptr [esp+0xc], ecx	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esi+0x1cc]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], eax	
call 0xb7fe9400	_dl_rtld_di_serinfo
START: 0xb7fe1275
mov eax, dword ptr [esi+0x234]	
test eax, eax	
jz 0xb7fe1290	
cmp byte ptr [ebx+0x88c], 0x0	
jz 0xb7fe1290	
mov dword ptr [esp], esi	
call 0xb7feff70	___tls_get_addr
START: 0xb7fe1290
sub dword ptr [ebp-0x98], 0x4	
test edi, edi	
jnz 0xb7fe1216	
rdtsc 	
sub eax, dword ptr [ebp-0xb0]	
sbb edx, dword ptr [ebp-0xac]	
mov dword ptr [ebx+0x894], eax	
mov eax, dword ptr [ebx+0x534]	
mov dword ptr [ebx+0x898], edx	
test eax, eax	
jz 0xb7fe12c8	
call 0xb7fee700	_dl_debug_state
START: 0xb7fe9400
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
sub esp, 0xec	
mov eax, dword ptr [ebp+0x10]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe9414
add ebx, 0x15be0	
mov edi, dword ptr [ebp+0x8]	
mov esi, eax	
and esi, 0x1	
mov dword ptr [ebp-0xb4], esi	
mov esi, eax	
and esi, 0x2000000	
test eax, 0x8000000	
mov dword ptr [ebp-0xbc], esi	
jnz 0xb7fe944d	
mov edx, dword ptr [ebx-0x19c]	
xor eax, eax	
test edx, edx	
setnz al	
or dword ptr [ebp+0x14], eax	
test byte ptr [edi+0x194], 0x4	
jnz 0xb7fe98c0	
mov eax, dword ptr [ebp+0x14]	
test eax, eax	
jz 0xb7fe9900	
START: 0xb7fe9900
mov eax, dword ptr [edi+0x80]	
test eax, eax	
mov eax, dword ptr [ebp+0x14]	
cmovz eax, dword ptr [ebp-0xb4]	
mov dword ptr [ebp-0xb4], eax	
jmp 0xb7fe9465	
START: 0xb7fe9465
test byte ptr [ebx-0x354], 0x20	
jnz 0xb7feae3e	
mov esi, dword ptr [edi+0x78]	
test esi, esi	
jnz 0xb7feaa59	
mov dword ptr [ebp-0xc4], 0x0	
mov eax, dword ptr [edi+0x34]	
cmp byte ptr [ebp-0xb4], 0x0	
mov eax, dword ptr [eax+0x4]	
mov dword ptr [ebp-0xb8], eax	
jnz 0xb7fe98c8	
START: 0xb7fe98c8
mov ecx, dword ptr [edi+0x7c]	
test ecx, ecx	
jz 0xb7fe94a0	
mov eax, dword ptr [edi+0x2c]	
mov eax, dword ptr [eax+0x4]	
mov edx, dword ptr [eax+0x4]	
test edx, edx	
jnz 0xb7fe991d	
mov edx, dword ptr [ebp+0x14]	
mov dword ptr [eax+0x4], edi	
test edx, edx	
jnz 0xb7fea7fc	
START: 0xb7fe98ee
lea edx, ptr [ebx-0xc954]	
mov dword ptr [eax+0x8], edx	
jmp 0xb7fe94a0	
START: 0xb7fe94a0
xor eax, eax	
mov dword ptr [ebp+eax*1-0x5c], 0x0	
add eax, 0x4	
cmp eax, 0x20	
jb 0xb7fe94a2	
mov eax, dword ptr [edi+0x64]	
test eax, eax	
jz 0xb7fe9d44	
mov edx, dword ptr [edi+0x68]	
mov ecx, dword ptr [edi+0xbc]	
mov eax, dword ptr [eax+0x4]	
mov edx, dword ptr [edx+0x4]	
test ecx, ecx	
mov dword ptr [ebp-0x5c], eax	
mov dword ptr [ebp-0x58], edx	
jz 0xb7fe94e6	
START: 0xb7fe94a2
mov dword ptr [ebp+eax*1-0x5c], 0x0	
add eax, 0x4	
cmp eax, 0x20	
jb 0xb7fe94a2	
mov eax, dword ptr [edi+0x64]	
test eax, eax	
jz 0xb7fe9d44	
mov edx, dword ptr [edi+0x68]	
mov ecx, dword ptr [edi+0xbc]	
mov eax, dword ptr [eax+0x4]	
mov edx, dword ptr [edx+0x4]	
test ecx, ecx	
mov dword ptr [ebp-0x5c], eax	
mov dword ptr [ebp-0x58], edx	
jz 0xb7fe94e6	
START: 0xb7fe94d6
mov ecx, dword ptr [ecx+0x4]	
mov esi, edx	
shr esi, 0x3	
cmp esi, ecx	
cmovbe ecx, esi	
mov dword ptr [ebp-0x54], ecx	
lea esi, ptr [edx+eax*1]	
mov ecx, dword ptr [edi+0x70]	
test ecx, ecx	
jz 0xb7fe94fa	
cmp dword ptr [ecx+0x4], 0x11	
jz 0xb7fe9d12	
lea esi, ptr [ebp-0x50]	
mov dword ptr [ebp-0x88], esi	
lea esi, ptr [ebp-0x30]	
mov dword ptr [ebp-0x6c], esi	
mov esi, dword ptr [edi]	
mov dword ptr [ebp-0x70], edi	
mov dword ptr [ebp-0x74], esi	
lea esi, ptr [ebx+0x548]	
mov dword ptr [ebp-0xc0], esi	
mov edi, dword ptr [ebp-0x88]	
add edx, eax	
mov esi, dword ptr [ebp-0x88]	
mov dword ptr [ebp-0x78], edx	
mov edi, dword ptr [edi]	
mov ecx, dword ptr [esi-0x4]	
mov esi, eax	
test edi, edi	
jz 0xb7fe9930	
START: 0xb7fe9d12
mov ecx, dword ptr [edi+0x7c]	
cmp dword ptr [ebp-0xb4], 0x0	
mov ecx, dword ptr [ecx+0x4]	
jnz 0xb7fe9d4f	
cmp ecx, esi	
jnz 0xb7fe9d4f	
mov ecx, dword ptr [edi+0x28]	
add edx, dword ptr [ecx+0x4]	
mov dword ptr [ebp-0x58], edx	
jmp 0xb7fe94fa	
START: 0xb7fe9d4f
mov dword ptr [ebp-0x4c], ecx	
mov ecx, dword ptr [edi+0x28]	
mov ecx, dword ptr [ecx+0x4]	
mov dword ptr [ebp-0x48], ecx	
mov ecx, dword ptr [ebp-0xb4]	
mov dword ptr [ebp-0x40], ecx	
jmp 0xb7fe94fa	
START: 0xb7fe94fa
lea esi, ptr [ebp-0x50]	
mov dword ptr [ebp-0x88], esi	
lea esi, ptr [ebp-0x30]	
mov dword ptr [ebp-0x6c], esi	
mov esi, dword ptr [edi]	
mov dword ptr [ebp-0x70], edi	
mov dword ptr [ebp-0x74], esi	
lea esi, ptr [ebx+0x548]	
mov dword ptr [ebp-0xc0], esi	
mov edi, dword ptr [ebp-0x88]	
add edx, eax	
mov esi, dword ptr [ebp-0x88]	
mov dword ptr [ebp-0x78], edx	
mov edi, dword ptr [edi]	
mov ecx, dword ptr [esi-0x4]	
mov esi, eax	
test edi, edi	
jz 0xb7fe9930	
cmp eax, edx	
jnb 0xb7fe958a	
lea edi, ptr [ebx-0x9f64]	
mov dword ptr [ebp-0x7c], edi	
lea esi, ptr [esi]	
mov eax, dword ptr [esi+0x4]	
mov edi, dword ptr [ebp-0x74]	
add edi, dword ptr [esi]	
movzx edx, al	
cmp edx, 0x7	
jnz 0xb7fea4a1	
START: 0xb7fe9930
mov esi, dword ptr [ebp-0x70]	
mov edi, dword ptr [ebp-0xc0]	
cmp dword ptr [ebp-0x70], edi	
mov edx, dword ptr [esi+0x38]	
lea esi, ptr [eax+ecx*8]	
mov edx, dword ptr [edx+0x4]	
mov dword ptr [ebp-0xac], edx	
jz 0xb7fe9991	
mov edi, dword ptr [ebp-0x74]	
test edi, edi	
jz 0xb7fe9991	
cmp eax, esi	
jnb 0xb7fe9991	
START: 0xb7fe9958
cmp byte ptr [eax+0x4], 0x8	
mov edx, dword ptr [eax]	
jnz 0xb7fea65c	
add edx, dword ptr [ebp-0x74]	
mov ecx, 0x8	
mov edi, dword ptr [ebp-0x74]	
jmp 0xb7fe9988	
START: 0xb7fe9988
add eax, 0x8	
add dword ptr [edx], edi	
cmp esi, eax	
jnbe 0xb7fe9978	
mov edx, dword ptr [ebp-0x70]	
mov eax, dword ptr [edx+0xe4]	
test eax, eax	
jz 0xb7fe9d69	
mov eax, dword ptr [eax+0x4]	
cmp dword ptr [ebp-0x78], esi	
mov dword ptr [ebp-0xb0], eax	
jbe 0xb7fe9582	
START: 0xb7fe9978
mov edx, dword ptr [eax+ecx*1-0x8]	
add edx, edi	
cmp byte ptr [eax+0x4], 0x8	
jnz 0xb7fea65c	
add eax, 0x8	
add dword ptr [edx], edi	
cmp esi, eax	
jnbe 0xb7fe9978	
mov edx, dword ptr [ebp-0x70]	
mov eax, dword ptr [edx+0xe4]	
test eax, eax	
jz 0xb7fe9d69	
START: 0xb7fe99a2
mov eax, dword ptr [eax+0x4]	
cmp dword ptr [ebp-0x78], esi	
mov dword ptr [ebp-0xb0], eax	
jbe 0xb7fe9582	
lea edi, ptr [ebx-0x76ce]	
mov dword ptr [ebp-0xc8], edi	
mov edi, esi	
lea esi, ptr [esi]	
mov eax, dword ptr [edi+0x4]	
mov esi, dword ptr [ebp-0xb0]	
mov ecx, dword ptr [ebp-0x70]	
mov edx, eax	
and eax, 0xff	
shr edx, 0x8	
movzx esi, word ptr [esi+edx*2]	
shl edx, 0x4	
mov ecx, dword ptr [ecx+0x170]	
add edx, dword ptr [ebp-0xac]	
mov dword ptr [ebp-0x7c], eax	
mov word ptr [ebp-0xa8], si	
mov esi, dword ptr [ebp-0x74]	
add esi, dword ptr [edi]	
cmp eax, 0x8	
mov dword ptr [ebp-0x84], ecx	
mov dword ptr [ebp-0x80], edx	
mov dword ptr [ebp-0x98], esi	
mov dword ptr [ebp-0x1c], edx	
jz 0xb7fea64a	
mov esi, dword ptr [ebp-0x7c]	
test esi, esi	
jz 0xb7fe9b87	
START: 0xb7fe9a26
mov esi, dword ptr [ebp-0x80]	
movzx eax, byte ptr [esi+0xc]	
mov edx, esi	
mov esi, dword ptr [ebp-0x70]	
shr al, 0x4	
test al, al	
jz 0xb7fe9b1a	
cmp edx, dword ptr [esi+0x21c]	
jz 0xb7fea6a6	
cmp dword ptr [ebp-0x7c], 0x7	
setz al	
cmp dword ptr [ebp-0x7c], 0x23	
setz dl	
or eax, edx	
test al, al	
mov ecx, 0x1	
jnz 0xb7fe9a89	
START: 0xb7fe9a62
cmp dword ptr [ebp-0x7c], 0x25	
jz 0xb7fe9d08	
cmp dword ptr [ebp-0x7c], 0x24	
jz 0xb7fe9d08	
cmp dword ptr [ebp-0x7c], 0x29	
setz cl	
cmp dword ptr [ebp-0x7c], 0xe	
setz al	
or ecx, eax	
movzx ecx, cl	
xor eax, eax	
movzx edx, word ptr [ebp-0xa8]	
cmp dword ptr [ebp-0x7c], 0x5	
mov esi, dword ptr [ebp-0x70]	
setz al	
and edx, 0x7fff	
add eax, eax	
or eax, ecx	
mov ecx, dword ptr [ebp-0x80]	
shl edx, 0x4	
add edx, dword ptr [ebp-0x84]	
mov dword ptr [esi+0x220], eax	
mov dword ptr [esi+0x21c], ecx	
jz 0xb7fe9acd	
START: 0xb7fe9ac0
mov ecx, dword ptr [edx+0x4]	
test ecx, ecx	
mov ecx, 0x0	
cmovz edx, ecx	
mov ecx, dword ptr [ebp-0x80]	
mov esi, dword ptr [ebp-0xb8]	
add esi, dword ptr [ecx]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [ebp+0xc]	
lea ecx, ptr [ebp-0x1c]	
mov dword ptr [esp+0x4], edx	
mov edx, dword ptr [ebp-0x70]	
mov dword ptr [esp+0x10], 0x0	
mov dword ptr [esp+0xc], 0x1	
mov dword ptr [esp], eax	
mov eax, esi	
call 0xb7fe7dd0	_dl_rtld_di_serinfo
START: 0xb7fe7dd0
push ebp	
mov ebp, esp	
push edi	
mov edi, 0x1505	
push esi	
push ebx	
sub esp, 0xbc	
mov dword ptr [ebp-0x60], eax	
mov dword ptr [ebp-0x64], edx	
mov edx, eax	
movzx eax, byte ptr [eax]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe7df1
add ebx, 0x17203	
mov dword ptr [ebp-0x70], ecx	
test al, al	
jz 0xb7fe7e16	
data16 nop 	
mov ecx, edi	
add edx, 0x1	
shl ecx, 0x5	
add ecx, edi	
movzx edi, al	
movzx eax, byte ptr [edx]	
add edi, ecx	
test al, al	
jnz 0xb7fe7e00	
mov esi, dword ptr [ebp+0xc]	
add dword ptr [ebx+0x538], 0x1	
mov dword ptr [ebp-0x20], 0xffffffff	
test esi, esi	
mov dword ptr [ebp-0x38], 0x0	
mov dword ptr [ebp-0x34], 0x0	
jz 0xb7fe7e46	
START: 0xb7fe7e00
mov ecx, edi	
add edx, 0x1	
shl ecx, 0x5	
add ecx, edi	
movzx edi, al	
movzx eax, byte ptr [edx]	
add edi, ecx	
test al, al	
jnz 0xb7fe7e00	
mov esi, dword ptr [ebp+0xc]	
add dword ptr [ebx+0x538], 0x1	
mov dword ptr [ebp-0x20], 0xffffffff	
test esi, esi	
mov dword ptr [ebp-0x38], 0x0	
mov dword ptr [ebp-0x34], 0x0	
jz 0xb7fe7e46	
test dword ptr [ebp+0x14], 0xfffffffa	
jnz 0xb7fe84e7	
START: 0xb7fe7e46
mov ecx, dword ptr [ebp+0x18]	
mov esi, dword ptr [ebp+0x8]	
test ecx, ecx	
mov eax, dword ptr [esi]	
jnz 0xb7fe822c	
mov dword ptr [ebp-0x78], 0x0	
test eax, eax	
jz 0xb7fe817b	
mov dword ptr [ebp-0x68], edi	
mov edx, dword ptr [ebp-0x78]	
mov esi, dword ptr [ebp+0x8]	
mov edi, dword ptr [ebp-0x70]	
jmp 0xb7fe7e90	
START: 0xb7fe7e90
mov ecx, dword ptr [ebp-0x64]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [ebp-0x38]	
mov dword ptr [esp+0x10], edx	
lea edx, ptr [ebp-0x20]	
mov dword ptr [esp+0x8], eax	
mov dword ptr [esp+0x24], ecx	
mov ecx, dword ptr [ebp+0x10]	
mov dword ptr [esp+0x20], ecx	
mov ecx, dword ptr [ebp+0x18]	
mov dword ptr [esp+0x1c], ecx	
mov ecx, dword ptr [ebp+0x14]	
mov dword ptr [esp+0x18], ecx	
mov ecx, dword ptr [ebp+0xc]	
mov dword ptr [esp+0x14], ecx	
mov eax, dword ptr [edi]	
mov dword ptr [esp], edx	
mov edx, dword ptr [ebp-0x68]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [ebp-0x60]	
call 0xb7fe76d0	_dl_rtld_di_serinfo
START: 0xb7fe76d0
push ebp	
push edi	
push esi	
push ebx	
sub esp, 0x8c	
mov dword ptr [esp+0x70], eax	
mov eax, dword ptr [esp+0xa4]	
mov dword ptr [esp+0x30], edx	
mov edx, dword ptr [esp+0xac]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe76f5
add ebx, 0x178ff	
mov edi, dword ptr [esp+0xb0]	
mov dword ptr [esp+0x78], eax	
mov eax, dword ptr [esp+0xb4]	
mov dword ptr [esp+0x68], eax	
mov eax, dword ptr [esp+0xb8]	
mov dword ptr [esp+0x60], eax	
mov eax, dword ptr [esp+0xc0]	
mov dword ptr [esp+0x7c], eax	
mov eax, dword ptr [edx+0x4]	
mov dword ptr [esp+0x2c], eax	
mov eax, dword ptr [esp+0x30]	
lea esi, ptr [ebx-0x5298]	
mov ebp, dword ptr [edx]	
mov dword ptr [esp+0x44], esi	
shr eax, 0x5	
mov dword ptr [esp+0x3c], eax	
mov dword ptr [esp+0x1c], ebp	
mov esi, dword ptr [esp+0x1c]	
mov dword ptr [esp+0x5c], 0x0	
mov dword ptr [esp+0x58], 0x0	
mov eax, dword ptr [esi+edi*4]	
mov esi, dword ptr [eax+0x14]	
cmp esi, dword ptr [esp+0xbc]	
mov dword ptr [esp+0x6c], esi	
jz 0xb7fe7840	
test byte ptr [esp+0x7c], 0x2	
jz 0xb7fe7788	
test byte ptr [esi+0x194], 0x3	
jz 0xb7fe7840	
START: 0xb7fe7788
test byte ptr [esi+0x195], 0x20	
jnz 0xb7fe7840	
test byte ptr [ebx-0x354], 0x8	
jnz 0xb7fe7c08	
mov edx, dword ptr [esi+0x178]	
test edx, edx	
mov dword ptr [esp+0x34], edx	
jz 0xb7fe7840	
START: 0xb7fe77b4
mov eax, dword ptr [esi+0x38]	
mov eax, dword ptr [eax+0x4]	
mov dword ptr [esp+0x48], eax	
mov eax, dword ptr [esi+0x34]	
mov eax, dword ptr [eax+0x4]	
mov dword ptr [esp+0x74], eax	
mov eax, dword ptr [esi+0x184]	
test eax, eax	
jz 0xb7fe7b96	
mov ecx, dword ptr [esp+0x3c]	
and ecx, dword ptr [esi+0x17c]	
mov ebp, dword ptr [esp+0x30]	
mov edx, dword ptr [eax+ecx*4]	
mov ecx, dword ptr [esi+0x180]	
mov eax, edx	
shr ebp, cl	
mov ecx, ebp	
shr eax, cl	
movzx ecx, byte ptr [esp+0x30]	
shr edx, cl	
and eax, edx	
test al, 0x1	
jnz 0xb7fe7c40	
mov dword ptr [esp+0x64], 0x0	
cmp dword ptr [esp+0x5c], 0x1	
jz 0xb7fe7860	
START: 0xb7fe7815
mov eax, dword ptr [esp+0x64]	
test eax, eax	
jnz 0xb7fe7840	
mov eax, dword ptr [esp+0x68]	
test eax, eax	
jz 0xb7fe7840	
mov eax, dword ptr [eax+0xc]	
test eax, eax	
jz 0xb7fe7840	
START: 0xb7fe7840
add edi, 0x1	
cmp dword ptr [esp+0x2c], edi	
jnbe 0xb7fe7749	
xor eax, eax	
add esp, 0x8c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe7749
mov esi, dword ptr [esp+0x1c]	
mov dword ptr [esp+0x5c], 0x0	
mov dword ptr [esp+0x58], 0x0	
mov eax, dword ptr [esi+edi*4]	
mov esi, dword ptr [eax+0x14]	
cmp esi, dword ptr [esp+0xbc]	
mov dword ptr [esp+0x6c], esi	
jz 0xb7fe7840	
test byte ptr [esp+0x7c], 0x2	
jz 0xb7fe7788	
test byte ptr [esi+0x194], 0x3	
jz 0xb7fe7840	
START: 0xb7fe7c40
mov eax, dword ptr [esp+0x30]	
xor edx, edx	
div dword ptr [esp+0x34]	
mov eax, dword ptr [esi+0x188]	
mov edx, dword ptr [eax+edx*4]	
test edx, edx	
jz 0xb7fe7806	
mov ecx, dword ptr [esi+0x18c]	
mov ebp, dword ptr [esp+0x1c]	
lea edx, ptr [ecx+edx*4]	
mov esi, edx	
jmp 0xb7fe7c7d	
START: 0xb7fe7c7d
mov eax, dword ptr [esp+0x30]	
xor eax, dword ptr [esi]	
shr eax, 0x1	
jnz 0xb7fe7c70	
mov eax, dword ptr [esp+0x6c]	
mov ecx, esi	
sub ecx, dword ptr [eax+0x18c]	
mov eax, ecx	
sar eax, 0x2	
mov dword ptr [esp+0x64], eax	
shl eax, 0x4	
add eax, dword ptr [esp+0x48]	
lea ecx, ptr [esp+0x58]	
call 0xb7fe7530	_dl_rtld_di_serinfo
START: 0xb7fe7c70
mov eax, dword ptr [esi]	
add esi, 0x4	
test al, 0x1	
jnz 0xb7fe7d3c	
mov eax, dword ptr [esp+0x30]	
xor eax, dword ptr [esi]	
shr eax, 0x1	
jnz 0xb7fe7c70	
mov eax, dword ptr [esp+0x6c]	
mov ecx, esi	
sub ecx, dword ptr [eax+0x18c]	
mov eax, ecx	
sar eax, 0x2	
mov dword ptr [esp+0x64], eax	
shl eax, 0x4	
add eax, dword ptr [esp+0x48]	
lea ecx, ptr [esp+0x58]	
call 0xb7fe7530	_dl_rtld_di_serinfo
START: 0xb7fe7530
sub esp, 0x3c	
mov dword ptr [esp+0x2c], ebx	
mov dword ptr [esp+0x30], esi	
mov esi, eax	
mov dword ptr [esp+0x34], edi	
mov edi, ecx	
mov dword ptr [esp+0x38], ebp	
movzx eax, byte ptr [eax+0xc]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe7550
add ebx, 0x17aa4	
and eax, 0xf	
cmp eax, 0x6	
jnz 0xb7fe7679	
xor edx, edx	
cmp word ptr [esi+0xe], 0x0	
setz dl	
test dword ptr [edi+0x24], edx	
jnz 0xb7fe7640	
mov edx, 0x467	
bt edx, eax	
jnb 0xb7fe7640	
START: 0xb7fe7679
cmp dword ptr [esi+0x4], 0x0	
lea esi, ptr [esi]	
jnz 0xb7fe7562	
xor esi, esi	
jmp 0xb7fe75ec	
START: 0xb7fe7562
xor edx, edx	
cmp word ptr [esi+0xe], 0x0	
setz dl	
test dword ptr [edi+0x24], edx	
jnz 0xb7fe7640	
mov edx, 0x467	
bt edx, eax	
jnb 0xb7fe7640	
cmp esi, dword ptr [edi+0x20]	
jz 0xb7fe75a4	
START: 0xb7fe75a4
mov ebp, dword ptr [edi+0x10]	
mov edx, dword ptr [edi+0x14]	
test ebp, ebp	
mov eax, dword ptr [edx+0x1a4]	
jz 0xb7fe7608	
test eax, eax	
jz 0xb7fe768d	
mov ecx, dword ptr [edi+0xc]	
movzx ecx, word ptr [eax+ecx*2]	
mov eax, ecx	
and eax, 0x7fff	
shl eax, 0x4	
add eax, dword ptr [edx+0x170]	
mov edi, dword ptr [eax+0x4]	
cmp edi, dword ptr [ebp+0x4]	
jz 0xb7fe7648	
START: 0xb7fe7648
mov edx, dword ptr [ebp]	
mov dword ptr [esp+0x4], edx	
mov eax, dword ptr [eax]	
mov dword ptr [esp+0x1c], ecx	
mov dword ptr [esp], eax	
call 0xb7ff6220	realloc
START: 0xb7fe765d
mov ecx, dword ptr [esp+0x1c]	
test eax, eax	
jz 0xb7fe75ec	
jmp 0xb7fe75db	
START: 0xb7fe75ec
mov eax, esi	
mov ebx, dword ptr [esp+0x2c]	
mov esi, dword ptr [esp+0x30]	
mov edi, dword ptr [esp+0x34]	
mov ebp, dword ptr [esp+0x38]	
add esp, 0x3c	
ret 	
START: 0xb7fe7cac
test eax, eax	
jz 0xb7fe7c70	
mov dword ptr [esp+0x1c], ebp	
jmp 0xb7fe7868	
START: 0xb7fe7868
movzx edx, byte ptr [eax+0xc]	
shr dl, 0x4	
cmp dl, 0x2	
jz 0xb7fe78a8	
cmp dl, 0xa	
jz 0xb7fe78d0	
cmp dl, 0x1	
jnz 0xb7fe7815	
START: 0xb7fe787e
mov dword ptr [esp+0x3c], eax	
mov ebp, dword ptr [esp+0xa8]	
mov eax, dword ptr [esp+0x3c]	
mov dword ptr [ebp], eax	
mov eax, dword ptr [esp+0x6c]	
mov dword ptr [ebp+0x4], eax	
add esp, 0x8c	
mov eax, 0x1	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe7ed9
test eax, eax	
jle 0xb7fe7e78	
mov eax, dword ptr [ebp-0x38]	
mov edi, dword ptr [ebp-0x68]	
test eax, eax	
jz 0xb7fe817b	
mov ecx, dword ptr [ebp-0x70]	
mov edx, dword ptr [ecx]	
test edx, edx	
jz 0xb7fe7f04	
START: 0xb7fe7ef4
movzx eax, byte ptr [edx+0xd]	
and eax, 0x3	
cmp eax, 0x3	
jz 0xb7fe8080	
mov esi, dword ptr [ebp-0x34]	
mov dword ptr [ebp-0x68], 0x0	
movzx eax, byte ptr [esi+0x194]	
and eax, 0x3	
cmp al, 0x2	
jz 0xb7fe8255	
mov eax, dword ptr [esi+0x1fc]	
test eax, eax	
jz 0xb7fe86ac	
START: 0xb7fe7f2e
mov eax, dword ptr [ebx-0x354]	
test eax, 0x804	
jnz 0xb7fe82bf	
mov eax, dword ptr [ebp-0x38]	
mov ecx, dword ptr [ebp-0x70]	
mov dword ptr [ecx], eax	
lea esp, ptr [ebp-0xc]	
mov eax, esi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0x14	
START: 0xb7fe9b03
mov edx, dword ptr [ebp-0x1c]	
mov esi, eax	
mov eax, dword ptr [ebp-0x70]	
sub esp, 0x14	
mov dword ptr [eax+0x228], edx	
mov dword ptr [eax+0x224], esi	
xor eax, eax	
test esi, esi	
jz 0xb7fe9b25	
mov eax, dword ptr [edx+0x4]	
add eax, dword ptr [esi]	
test edx, edx	
jz 0xb7fe9b39	
movzx ecx, byte ptr [edx+0xc]	
and ecx, 0xf	
cmp ecx, 0xa	
jz 0xb7fea686	
START: 0xb7fe9b39
cmp dword ptr [ebp-0x7c], 0x2a	
jbe 0xb7fe9b98	
mov edi, dword ptr [ebp-0x70]	
xor ecx, ecx	
mov edx, dword ptr [ebp-0x7c]	
mov eax, edi	
call 0xb7fe9390	_dl_rtld_di_serinfo
START: 0xb7fe9b98
mov ecx, dword ptr [ebp-0x7c]	
mov edx, dword ptr [ebx+ecx*4-0x7e74]	
add edx, ebx	
jmp edx	
START: 0xb7fe9bac
mov esi, dword ptr [ebp-0x98]	
add edi, 0x8	
add dword ptr [esi], eax	
cmp dword ptr [ebp-0x78], edi	
jnbe 0xb7fe99c8	
jmp 0xb7fe9582	
START: 0xb7fe99c8
mov eax, dword ptr [edi+0x4]	
mov esi, dword ptr [ebp-0xb0]	
mov ecx, dword ptr [ebp-0x70]	
mov edx, eax	
and eax, 0xff	
shr edx, 0x8	
movzx esi, word ptr [esi+edx*2]	
shl edx, 0x4	
mov ecx, dword ptr [ecx+0x170]	
add edx, dword ptr [ebp-0xac]	
mov dword ptr [ebp-0x7c], eax	
mov word ptr [ebp-0xa8], si	
mov esi, dword ptr [ebp-0x74]	
add esi, dword ptr [edi]	
cmp eax, 0x8	
mov dword ptr [ebp-0x84], ecx	
mov dword ptr [ebp-0x80], edx	
mov dword ptr [ebp-0x98], esi	
mov dword ptr [ebp-0x1c], edx	
jz 0xb7fea64a	
mov esi, dword ptr [ebp-0x7c]	
test esi, esi	
jz 0xb7fe9b87	
mov esi, dword ptr [ebp-0x80]	
movzx eax, byte ptr [esi+0xc]	
mov edx, esi	
mov esi, dword ptr [ebp-0x70]	
shr al, 0x4	
test al, al	
jz 0xb7fe9b1a	
START: 0xb7fe9a3d
cmp edx, dword ptr [esi+0x21c]	
jz 0xb7fea6a6	
cmp dword ptr [ebp-0x7c], 0x7	
setz al	
cmp dword ptr [ebp-0x7c], 0x23	
setz dl	
or eax, edx	
test al, al	
mov ecx, 0x1	
jnz 0xb7fe9a89	
cmp dword ptr [ebp-0x7c], 0x25	
jz 0xb7fe9d08	
START: 0xb7fe9a6c
cmp dword ptr [ebp-0x7c], 0x24	
jz 0xb7fe9d08	
cmp dword ptr [ebp-0x7c], 0x29	
setz cl	
cmp dword ptr [ebp-0x7c], 0xe	
setz al	
or ecx, eax	
movzx ecx, cl	
xor eax, eax	
movzx edx, word ptr [ebp-0xa8]	
cmp dword ptr [ebp-0x7c], 0x5	
mov esi, dword ptr [ebp-0x70]	
setz al	
and edx, 0x7fff	
add eax, eax	
or eax, ecx	
mov ecx, dword ptr [ebp-0x80]	
shl edx, 0x4	
add edx, dword ptr [ebp-0x84]	
mov dword ptr [esi+0x220], eax	
mov dword ptr [esi+0x21c], ecx	
jz 0xb7fe9acd	
mov ecx, dword ptr [edx+0x4]	
test ecx, ecx	
mov ecx, 0x0	
cmovz edx, ecx	
mov ecx, dword ptr [ebp-0x80]	
mov esi, dword ptr [ebp-0xb8]	
add esi, dword ptr [ecx]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [ebp+0xc]	
lea ecx, ptr [ebp-0x1c]	
mov dword ptr [esp+0x4], edx	
mov edx, dword ptr [ebp-0x70]	
mov dword ptr [esp+0x10], 0x0	
mov dword ptr [esp+0xc], 0x1	
mov dword ptr [esp], eax	
mov eax, esi	
call 0xb7fe7dd0	_dl_rtld_di_serinfo
START: 0xb7fe9b1a
xor eax, eax	
test esi, esi	
jz 0xb7fe9b25	
mov eax, dword ptr [edx+0x4]	
add eax, dword ptr [esi]	
test edx, edx	
jz 0xb7fe9b39	
movzx ecx, byte ptr [edx+0xc]	
and ecx, 0xf	
cmp ecx, 0xa	
jz 0xb7fea686	
START: 0xb7fe9c18
mov eax, dword ptr [ebp-0x1c]	
test eax, eax	
jz 0xb7fe9b87	
mov ecx, dword ptr [esi+0x240]	
cmp ecx, 0x1	
jbe 0xb7feabbd	
mov esi, dword ptr [ebp-0x98]	
add edi, 0x8	
mov edx, dword ptr [esi]	
add edx, dword ptr [eax+0x4]	
sub edx, ecx	
cmp dword ptr [ebp-0x78], edi	
mov dword ptr [esi], edx	
jnbe 0xb7fe99c8	
START: 0xb7fe9bc8
test esi, esi	
jz 0xb7fe9b87	
mov eax, dword ptr [esi+0x244]	
mov esi, dword ptr [ebp-0x98]	
add edi, 0x8	
mov dword ptr [esi], eax	
cmp dword ptr [ebp-0x78], edi	
jnbe 0xb7fe99c8	
jmp 0xb7fe9582	
START: 0xb7fe782c
mov edx, dword ptr [esp+0x6c]	
call 0xb7feddc0	_dl_debug_state
START: 0xb7fe7835
test eax, eax	
jnz 0xb7fe7d45	
lea esi, ptr [esi]	
add edi, 0x1	
cmp dword ptr [esp+0x2c], edi	
jnbe 0xb7fe7749	
xor eax, eax	
add esp, 0x8c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe7d3c
mov dword ptr [esp+0x1c], ebp	
jmp 0xb7fe7806	
START: 0xb7fe7806
mov dword ptr [esp+0x64], 0x0	
cmp dword ptr [esp+0x5c], 0x1	
jz 0xb7fe7860	
mov eax, dword ptr [esp+0x64]	
test eax, eax	
jnz 0xb7fe7840	
mov eax, dword ptr [esp+0x68]	
test eax, eax	
jz 0xb7fe7840	
START: 0xb7fe7825
mov eax, dword ptr [eax+0xc]	
test eax, eax	
jz 0xb7fe7840	
mov edx, dword ptr [esp+0x6c]	
call 0xb7feddc0	_dl_debug_state
START: 0xb7fe7588
mov eax, dword ptr [edi+0x18]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [edi+0x1c]	
add eax, dword ptr [esi]	
mov dword ptr [esp], eax	
call 0xb7ff6220	realloc
START: 0xb7fe759c
test eax, eax	
jnz 0xb7fe7640	
mov ebp, dword ptr [edi+0x10]	
mov edx, dword ptr [edi+0x14]	
test ebp, ebp	
mov eax, dword ptr [edx+0x1a4]	
jz 0xb7fe7608	
test eax, eax	
jz 0xb7fe768d	
START: 0xb7fe75bc
mov ecx, dword ptr [edi+0xc]	
movzx ecx, word ptr [eax+ecx*2]	
mov eax, ecx	
and eax, 0x7fff	
shl eax, 0x4	
add eax, dword ptr [edx+0x170]	
mov edi, dword ptr [eax+0x4]	
cmp edi, dword ptr [ebp+0x4]	
jz 0xb7fe7648	
mov eax, dword ptr [ebp+0x8]	
test eax, eax	
jnz 0xb7fe7640	
test edi, edi	
jnz 0xb7fe7640	
START: 0xb7fe86ac
mov dword ptr [esi+0x1fc], 0x1	
jmp 0xb7fe7f2e	
START: 0xb7fe9bd2
mov esi, dword ptr [ebp-0x98]	
add edi, 0x8	
mov dword ptr [esi], eax	
cmp dword ptr [ebp-0x78], edi	
jnbe 0xb7fe99c8	
jmp 0xb7fe9582	
START: 0xb7fe78a8
mov edx, dword ptr [ebx-0x324]	
test edx, edx	
jz 0xb7fe787e	
mov esi, dword ptr [esp+0xa8]	
cmp dword ptr [esi], 0x0	
jnz 0xb7fe7815	
mov dword ptr [esi], eax	
mov eax, dword ptr [esp+0x6c]	
mov dword ptr [esi+0x4], eax	
jmp 0xb7fe7815	
START: 0xb7fe7608
test eax, eax	
jz 0xb7fe75ec	
mov edx, dword ptr [edi+0xc]	
movzx edx, word ptr [eax+edx*2]	
mov eax, dword ptr [edi+0x8]	
mov ecx, edx	
shl eax, 0x1e	
and ecx, 0x7fff	
sar eax, 0x1f	
add eax, 0x3	
cmp eax, ecx	
jnle 0xb7fe75ec	
test dx, dx	
js 0xb7fe7640	
START: 0xb7fea6a6
cmp dword ptr [ebp-0x7c], 0x23	
mov ecx, 0x1	
setz al	
cmp dword ptr [ebp-0x7c], 0x7	
setz dl	
or al, dl	
jnz 0xb7fea6dc	
cmp dword ptr [ebp-0x7c], 0x25	
jz 0xb7fea713	
cmp dword ptr [ebp-0x7c], 0x24	
jz 0xb7fea713	
START: 0xb7fea6c9
cmp dword ptr [ebp-0x7c], 0x29	
setz cl	
cmp dword ptr [ebp-0x7c], 0xe	
setz dl	
or ecx, edx	
movzx ecx, cl	
xor edx, edx	
cmp dword ptr [ebp-0x7c], 0x5	
setz dl	
add edx, edx	
or edx, ecx	
mov ecx, dword ptr [ebp-0x70]	
cmp edx, dword ptr [ecx+0x220]	
jnz 0xb7fe9a59	
mov edx, dword ptr [ecx+0x228]	
add dword ptr [ebx+0x53c], 0x1	
mov esi, dword ptr [ecx+0x224]	
mov dword ptr [ebp-0x1c], edx	
jmp 0xb7fe9b1a	
START: 0xb7fe7e78
mov edx, eax	
shr edx, 0x1f	
test dl, dl	
jnz 0xb7fe7f58	
add esi, 0x4	
mov eax, dword ptr [esi]	
test eax, eax	
jz 0xb7fe7edd	
xor edx, edx	
mov ecx, dword ptr [ebp-0x64]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [ebp-0x38]	
mov dword ptr [esp+0x10], edx	
lea edx, ptr [ebp-0x20]	
mov dword ptr [esp+0x8], eax	
mov dword ptr [esp+0x24], ecx	
mov ecx, dword ptr [ebp+0x10]	
mov dword ptr [esp+0x20], ecx	
mov ecx, dword ptr [ebp+0x18]	
mov dword ptr [esp+0x1c], ecx	
mov ecx, dword ptr [ebp+0x14]	
mov dword ptr [esp+0x18], ecx	
mov ecx, dword ptr [ebp+0xc]	
mov dword ptr [esp+0x14], ecx	
mov eax, dword ptr [edi]	
mov dword ptr [esp], edx	
mov edx, dword ptr [ebp-0x68]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [ebp-0x60]	
call 0xb7fe76d0	_dl_rtld_di_serinfo
START: 0xb7fe7edd
mov eax, dword ptr [ebp-0x38]	
mov edi, dword ptr [ebp-0x68]	
test eax, eax	
jz 0xb7fe817b	
mov ecx, dword ptr [ebp-0x70]	
mov edx, dword ptr [ecx]	
test edx, edx	
jz 0xb7fe7f04	
movzx eax, byte ptr [edx+0xd]	
and eax, 0x3	
cmp eax, 0x3	
jz 0xb7fe8080	
START: 0xb7fe817b
mov ecx, dword ptr [ebp-0x70]	
mov eax, dword ptr [ecx]	
test eax, eax	
jz 0xb7fe818f	
movzx eax, byte ptr [eax+0xc]	
shr al, 0x4	
cmp al, 0x2	
jz 0xb7fe8196	
mov edi, dword ptr [ebp+0x18]	
test edi, edi	
jz 0xb7fe81a6	
START: 0xb7fe8196
mov ecx, dword ptr [ebp-0x70]	
xor esi, esi	
mov dword ptr [ecx], 0x0	
jmp 0xb7fe7f47	
START: 0xb7fe7f47
lea esp, ptr [ebp-0xc]	
mov eax, esi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0x14	
START: 0xb7fe9b25
test edx, edx	
jz 0xb7fe9b39	
movzx ecx, byte ptr [edx+0xc]	
and ecx, 0xf	
cmp ecx, 0xa	
jz 0xb7fea686	
cmp dword ptr [ebp-0x7c], 0x2a	
jbe 0xb7fe9b98	
START: 0xb7fe9582
mov eax, dword ptr [ebp-0x70]	
mov eax, dword ptr [eax]	
mov dword ptr [ebp-0x74], eax	
add dword ptr [ebp-0x88], 0x10	
mov esi, dword ptr [ebp-0x6c]	
cmp dword ptr [ebp-0x88], esi	
jnz 0xb7fe9d33	
mov edi, dword ptr [ebp-0x70]	
xor eax, eax	
mov dword ptr [ebp+eax*1-0x3c], 0x0	
add eax, 0x4	
cmp eax, 0x20	
jb 0xb7fe95a5	
mov eax, dword ptr [edi+0x3c]	
test eax, eax	
jz 0xb7fea41c	
START: 0xb7fe9d33
mov edi, dword ptr [ebp-0x88]	
mov edx, dword ptr [edi-0x8]	
mov eax, dword ptr [edi-0xc]	
jmp 0xb7fe951d	
START: 0xb7fe951d
mov edi, dword ptr [ebp-0x88]	
add edx, eax	
mov esi, dword ptr [ebp-0x88]	
mov dword ptr [ebp-0x78], edx	
mov edi, dword ptr [edi]	
mov ecx, dword ptr [esi-0x4]	
mov esi, eax	
test edi, edi	
jz 0xb7fe9930	
cmp eax, edx	
jnb 0xb7fe958a	
lea edi, ptr [ebx-0x9f64]	
mov dword ptr [ebp-0x7c], edi	
lea esi, ptr [esi]	
mov eax, dword ptr [esi+0x4]	
mov edi, dword ptr [ebp-0x74]	
add edi, dword ptr [esi]	
movzx edx, al	
cmp edx, 0x7	
jnz 0xb7fea4a1	
START: 0xb7fe9564
mov edx, dword ptr [ebp-0x70]	
mov eax, dword ptr [edx+0x210]	
test eax, eax	
jnz 0xb7fea48c	
mov ecx, dword ptr [ebp-0x74]	
add dword ptr [edi], ecx	
add esi, 0x8	
cmp dword ptr [ebp-0x78], esi	
jnbe 0xb7fe9550	
mov eax, dword ptr [ebp-0x70]	
mov eax, dword ptr [eax]	
mov dword ptr [ebp-0x74], eax	
add dword ptr [ebp-0x88], 0x10	
mov esi, dword ptr [ebp-0x6c]	
cmp dword ptr [ebp-0x88], esi	
jnz 0xb7fe9d33	
START: 0xb7fe9550
mov eax, dword ptr [esi+0x4]	
mov edi, dword ptr [ebp-0x74]	
add edi, dword ptr [esi]	
movzx edx, al	
cmp edx, 0x7	
jnz 0xb7fea4a1	
mov edx, dword ptr [ebp-0x70]	
mov eax, dword ptr [edx+0x210]	
test eax, eax	
jnz 0xb7fea48c	
mov ecx, dword ptr [ebp-0x74]	
add dword ptr [edi], ecx	
add esi, 0x8	
cmp dword ptr [ebp-0x78], esi	
jnbe 0xb7fe9550	
START: 0xb7fea4a1
cmp edx, 0x29	
jnz 0xb7fea7e8	
mov edx, eax	
shr edx, 0x8	
test edx, edx	
jnz 0xb7fea4e9	
lea eax, ptr [ebx-0x9ef4]	
mov dword ptr [edi], eax	
jmp 0xb7fe957a	
START: 0xb7fea7e8
cmp edx, 0x2a	
jz 0xb7fea84f	
mov edi, dword ptr [ebp-0x70]	
mov ecx, 0x1	
mov eax, edi	
call 0xb7fe9390	_dl_rtld_di_serinfo
START: 0xb7fea84f
mov edx, dword ptr [ebp-0x70]	
mov eax, dword ptr [edi]	
add eax, dword ptr [edx]	
mov edx, dword ptr [ebp-0xbc]	
test edx, edx	
jnz 0xb7fea862	
call eax	
START: 0xb63b9010
push ebx	
call 0xb6465f83	
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63b9016
add ebx, 0x126fde	
cmp dword ptr [ebx+0x368c], 0x0	
jnz 0xb63b902a	
call 0xb6354850	
START: 0xb6354850
sub esp, 0x1c	
xor eax, eax	
mov dword ptr [esp+0xc], ebx	
call 0xb6465f83	
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb635485e
add ebx, 0x18b796	
mov dword ptr [esp+0x10], esi	
xchg esi, ebx	
cpuid 	
START: 0xb635486c
xchg esi, ebx	
cmp ecx, 0x6c65746e	
mov dword ptr [esp+0x14], edi	
mov dword ptr [esp+0x18], ebp	
mov dword ptr [ebx+0x3690], eax	
jnz 0xb6354898	
cmp esi, 0x756e6547	
jnz 0xb6354898	
cmp edx, 0x49656e69	
jz 0xb63549e0	
START: 0xb6354898
cmp ecx, 0x444d4163	
jz 0xb6354900	
mov edi, dword ptr [ebx+0x369c]	
xor ebp, ebp	
mov dword ptr [esp], 0x0	
mov dword ptr [esp+0x4], 0x3	
test edi, 0x8000000	
jz 0xb63548d0	
xor ecx, ecx	
xgetbv 	
and eax, 0x6	
cmp eax, 0x6	
jz 0xb63549a0	
START: 0xb6354900
cmp esi, 0x68747541	
jnz 0xb63548a0	
cmp edx, 0x69746e65	
jnz 0xb63548a0	
mov eax, 0x1	
xchg esi, ebx	
cpuid 	
START: 0xb6354919
xchg esi, ebx	
mov ebp, eax	
mov edi, ecx	
shr ebp, 0x8	
mov dword ptr [ebx+0x3694], eax	
shr eax, 0x4	
and ebp, 0xf	
and eax, 0xf	
test ch, 0x2	
mov dword ptr [ebx+0x3698], esi	
mov dword ptr [ebx+0x369c], ecx	
mov dword ptr [ebx+0x36a0], edx	
mov dword ptr [esp], eax	
jz 0xb6354952	
or dword ptr [ebx+0x36bc], 0x8	
mov eax, 0x80000000	
xchg esi, ebx	
cpuid 	
START: 0xb635495b
xchg esi, ebx	
cmp eax, 0x80000000	
mov dword ptr [esp+0x4], 0x2	
jbe 0xb63548b7	
mov eax, 0x80000001	
mov edi, dword ptr [ebx+0x369c]	
xchg esi, ebx	
cpuid 	
START: 0xb635497f
xchg esi, ebx	
mov dword ptr [ebx+0x36a4], eax	
mov dword ptr [ebx+0x36a8], esi	
mov dword ptr [ebx+0x36ac], ecx	
mov dword ptr [ebx+0x36b0], edx	
jmp 0xb63548b7	
START: 0xb63548b7
test edi, 0x8000000	
jz 0xb63548d0	
xor ecx, ecx	
xgetbv 	
and eax, 0x6	
cmp eax, 0x6	
jz 0xb63549a0	
mov edx, dword ptr [esp]	
mov dword ptr [ebx+0x36b4], ebp	
mov dword ptr [ebx+0x36b8], edx	
mov ecx, dword ptr [esp+0x4]	
mov esi, dword ptr [esp+0x10]	
mov edi, dword ptr [esp+0x14]	
mov ebp, dword ptr [esp+0x18]	
mov dword ptr [ebx+0x368c], ecx	
mov ebx, dword ptr [esp+0xc]	
add esp, 0x1c	
ret 	
START: 0xb63548d0
mov edx, dword ptr [esp]	
mov dword ptr [ebx+0x36b4], ebp	
mov dword ptr [ebx+0x36b8], edx	
mov ecx, dword ptr [esp+0x4]	
mov esi, dword ptr [esp+0x10]	
mov edi, dword ptr [esp+0x14]	
mov ebp, dword ptr [esp+0x18]	
mov dword ptr [ebx+0x368c], ecx	
mov ebx, dword ptr [esp+0xc]	
add esp, 0x1c	
ret 	
START: 0xb63b902a
lea eax, ptr [ebx-0x10eaf4]	
test dword ptr [ebx+0x36a0], 0x4000000	
jz 0xb63b9042	
lea eax, ptr [ebx-0x5b174]	
pop ebx	
ret 	
START: 0xb7fea862
mov dword ptr [edi], eax	
jmp 0xb7fe957a	
START: 0xb7fe957a
add esi, 0x8	
cmp dword ptr [ebp-0x78], esi	
jnbe 0xb7fe9550	
mov eax, dword ptr [ebp-0x70]	
mov eax, dword ptr [eax]	
mov dword ptr [ebp-0x74], eax	
add dword ptr [ebp-0x88], 0x10	
mov esi, dword ptr [ebp-0x6c]	
cmp dword ptr [ebp-0x88], esi	
jnz 0xb7fe9d33	
mov edi, dword ptr [ebp-0x70]	
xor eax, eax	
mov dword ptr [ebp+eax*1-0x3c], 0x0	
add eax, 0x4	
cmp eax, 0x20	
jb 0xb7fe95a5	
START: 0xb63ba560
push ebx	
call 0xb6465f83	
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63ba566
add ebx, 0x125a8e	
cmp dword ptr [ebx+0x368c], 0x0	
jnz 0xb63ba57a	
call 0xb6354850	
START: 0xb63ba57a
lea eax, ptr [ebx-0x10e914]	
test dword ptr [ebx+0x369c], 0x200	
jz 0xb63ba5a4	
lea eax, ptr [ebx-0x610f4]	
test dword ptr [ebx+0x369c], 0x100000	
jz 0xb63ba5a4	
lea eax, ptr [ebx-0x71ec4]	
pop ebx	
ret 	
START: 0xb63ba5a4
pop ebx	
ret 	
START: 0xb63befa0
push ebx	
call 0xb6465f83	
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63befa6
add ebx, 0x12104e	
cmp dword ptr [ebx+0x368c], 0x0	
jnz 0xb63befba	
call 0xb6354850	
START: 0xb63befba
test dword ptr [ebx+0x36a0], 0x4000000	
jz 0xb63befda	
test dword ptr [ebx+0x36bc], 0x4	
jz 0xb63befe2	
lea eax, ptr [ebx-0x5bc34]	
pop ebx	
ret 	
START: 0xb63befe2
lea eax, ptr [ebx-0x10f1c4]	
pop ebx	
ret 	
START: 0xb63d3650
push ebx	
call 0xb6465f83	
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63d3656
add ebx, 0x10c99e	
cmp dword ptr [ebx+0x368c], 0x0	
jnz 0xb63d366a	
call 0xb6354850	
START: 0xb63d366a
lea eax, ptr [ebx-0xfd6f4]	
test dword ptr [ebx+0x36a0], 0x4000000	
jz 0xb63d3682	
lea eax, ptr [ebx-0xfd8f4]	
pop ebx	
ret 	
START: 0xb7fe95a5
mov dword ptr [ebp+eax*1-0x3c], 0x0	
add eax, 0x4	
cmp eax, 0x20	
jb 0xb7fe95a5	
mov eax, dword ptr [edi+0x3c]	
test eax, eax	
jz 0xb7fea41c	
mov ecx, dword ptr [eax+0x4]	
mov eax, dword ptr [edi+0x40]	
mov dword ptr [ebp-0x3c], ecx	
mov esi, dword ptr [eax+0x4]	
mov eax, dword ptr [edi+0xc0]	
mov dword ptr [ebp-0x38], esi	
test eax, eax	
mov dword ptr [ebp-0x70], eax	
jz 0xb7fe95f6	
START: 0xb7fea41c
xor edx, edx	
xor esi, esi	
xor ecx, ecx	
jmp 0xb7fe95f9	
START: 0xb7fe95f9
mov eax, dword ptr [edi+0x70]	
test eax, eax	
jz 0xb7fe960a	
cmp dword ptr [eax+0x4], 0x7	
jz 0xb7fea162	
lea eax, ptr [ebx+0x548]	
lea edx, ptr [ebx-0x76ce]	
mov dword ptr [ebp-0xac], 0x0	
mov dword ptr [ebp-0xb0], eax	
mov dword ptr [ebp-0xb4], edx	
mov edx, dword ptr [edi+0x38]	
add esi, ecx	
mov eax, ecx	
mov dword ptr [ebp-0x98], esi	
mov esi, dword ptr [ebp-0xac]	
cmp edi, dword ptr [ebp-0xb0]	
mov edx, dword ptr [edx+0x4]	
mov dword ptr [ebp-0x84], edx	
mov edx, dword ptr [ebp+esi*1-0x34]	
lea edx, ptr [edx+edx*2]	
lea esi, ptr [ecx+edx*4]	
jz 0xb7fe9673	
START: 0xb7fe965a
mov edx, dword ptr [ebp-0x74]	
test edx, edx	
jnz 0xb7fea128	
mov edx, dword ptr [edi+0x11c]	
test edx, edx	
jz 0xb7fea128	
mov eax, dword ptr [edi+0xe4]	
test eax, eax	
jz 0xb7fea18b	
START: 0xb7fea128
cmp ecx, esi	
jnb 0xb7fe9673	
mov edx, dword ptr [ebp-0x74]	
mov dword ptr [ebp-0x70], edi	
data16 nop 	
mov edi, dword ptr [eax+0x8]	
mov ecx, dword ptr [eax]	
add eax, 0xc	
add edi, edx	
cmp esi, eax	
mov dword ptr [ecx+edx*1], edi	
jnbe 0xb7fea138	
mov edi, dword ptr [ebp-0x70]	
jmp 0xb7fe9673	
START: 0xb7fe9673
mov eax, dword ptr [edi+0xe4]	
test eax, eax	
jz 0xb7fea18b	
mov eax, dword ptr [eax+0x4]	
cmp dword ptr [ebp-0x98], esi	
mov dword ptr [ebp-0xa8], eax	
jbe 0xb7fe9877	
data16 nop 	
mov eax, dword ptr [esi+0x4]	
mov ecx, dword ptr [ebp-0xa8]	
mov edx, eax	
and eax, 0xff	
shr edx, 0x8	
movzx ecx, word ptr [ecx+edx*2]	
shl edx, 0x4	
add edx, dword ptr [ebp-0x84]	
mov dword ptr [ebp-0x70], eax	
mov word ptr [ebp-0x88], cx	
mov ecx, dword ptr [ebp-0x74]	
add ecx, dword ptr [esi]	
cmp eax, 0x8	
mov dword ptr [ebp-0x78], edx	
mov dword ptr [ebp-0x1c], edx	
mov dword ptr [ebp-0x7c], ecx	
mov ecx, dword ptr [edi+0x170]	
mov dword ptr [ebp-0x80], ecx	
jz 0xb7fea018	
START: 0xb7fe9877
add dword ptr [ebp-0xac], 0x10	
cmp dword ptr [ebp-0xac], 0x20	
jnz 0xb7fea45e	
mov ecx, dword ptr [ebp+0x14]	
test ecx, ecx	
jnz 0xb7feac1f	
or byte ptr [edi+0x194], 0x4	
mov edx, dword ptr [ebp-0xc4]	
test edx, edx	
jnz 0xb7feacf7	
START: 0xb7fea45e
mov ecx, dword ptr [ebp-0xac]	
mov edx, dword ptr [edi]	
mov esi, dword ptr [ebp+ecx*1-0x38]	
mov dword ptr [ebp-0x74], edx	
mov ecx, dword ptr [ebp+ecx*1-0x3c]	
jmp 0xb7fe962c	
START: 0xb7fe962c
mov edx, dword ptr [edi+0x38]	
add esi, ecx	
mov eax, ecx	
mov dword ptr [ebp-0x98], esi	
mov esi, dword ptr [ebp-0xac]	
cmp edi, dword ptr [ebp-0xb0]	
mov edx, dword ptr [edx+0x4]	
mov dword ptr [ebp-0x84], edx	
mov edx, dword ptr [ebp+esi*1-0x34]	
lea edx, ptr [edx+edx*2]	
lea esi, ptr [ecx+edx*4]	
jz 0xb7fe9673	
mov edx, dword ptr [ebp-0x74]	
test edx, edx	
jnz 0xb7fea128	
mov edx, dword ptr [edi+0x11c]	
test edx, edx	
jz 0xb7fea128	
START: 0xb7fe98ab
mov eax, dword ptr [edi+0x24c]	
test eax, eax	
jz 0xb7fe98c0	
mov eax, edi	
call 0xb7fe9310	_dl_rtld_di_serinfo
START: 0xb7fe9310
sub esp, 0x1c	
mov edx, dword ptr [eax+0x248]	
mov dword ptr [esp+0x14], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe9322
add ebx, 0x15cd2	
add edx, dword ptr [eax]	
mov dword ptr [esp+0x18], esi	
mov esi, eax	
mov eax, dword ptr [ebx-0x344]	
neg eax	
mov ecx, eax	
and ecx, edx	
add edx, dword ptr [esi+0x24c]	
and edx, eax	
cmp ecx, edx	
jz 0xb7fe9362	
sub edx, ecx	
mov dword ptr [esp+0x8], 0x1	
mov dword ptr [esp+0x4], edx	
mov dword ptr [esp], ecx	
call 0xb7ff5de0	realloc
START: 0xb7ff5de0
push ebx	
mov edx, dword ptr [esp+0x10]	
mov ecx, dword ptr [esp+0xc]	
mov ebx, dword ptr [esp+0x8]	
mov eax, 0x7d	
int 0x80	
START: 0xb7ff5df4
pop ebx	
cmp eax, 0xfffff001	
jnb 0xb7ff5dfd	
ret 	
START: 0xb7fe935e
test eax, eax	
js 0xb7fe936e	
mov ebx, dword ptr [esp+0x14]	
mov esi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb7fe98bc
lea esi, ptr [esi]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe1275
mov eax, dword ptr [esi+0x234]	
test eax, eax	
jz 0xb7fe1290	
cmp byte ptr [ebx+0x88c], 0x0	
jz 0xb7fe1290	
mov dword ptr [esp], esi	
call 0xb7feff70	___tls_get_addr
START: 0xb7feff70
sub esp, 0x3c	
mov dword ptr [esp+0x2c], ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7feff7c
add ebx, 0xf078	
mov dword ptr [esp+0x38], ebp	
mov ebp, dword ptr [esp+0x40]	
mov dword ptr [esp+0x30], esi	
mov dword ptr [esp+0x34], edi	
mov esi, dword ptr [ebp+0x244]	
mov edi, dword ptr [ebx+0x838]	
jmp 0xb7feffa2	
START: 0xb7feffa2
mov eax, dword ptr [edi]	
cmp esi, eax	
jb 0xb7fefff5	
sub esi, eax	
mov eax, dword ptr [edi+0x4]	
test eax, eax	
jnz 0xb7feffa0	
test esi, esi	
jnz 0xb7ff003c	
START: 0xb7fefff5
mov eax, dword ptr [ebx+0x850]	
mov dword ptr [edi+esi*8+0xc], ebp	
mov ebx, dword ptr [esp+0x2c]	
mov ebp, dword ptr [esp+0x38]	
add eax, 0x1	
mov dword ptr [edi+esi*8+0x8], eax	
mov esi, dword ptr [esp+0x30]	
mov edi, dword ptr [esp+0x34]	
add esp, 0x3c	
ret 	
START: 0xb7fe1290
sub dword ptr [ebp-0x98], 0x4	
test edi, edi	
jnz 0xb7fe1216	
rdtsc 	
sub eax, dword ptr [ebp-0xb0]	
sbb edx, dword ptr [ebp-0xac]	
mov dword ptr [ebx+0x894], eax	
mov eax, dword ptr [ebx+0x534]	
mov dword ptr [ebx+0x898], edx	
test eax, eax	
jz 0xb7fe12c8	
call 0xb7fee700	_dl_debug_state
START: 0xb7fe94e6
lea esi, ptr [edx+eax*1]	
mov ecx, dword ptr [edi+0x70]	
test ecx, ecx	
jz 0xb7fe94fa	
cmp dword ptr [ecx+0x4], 0x11	
jz 0xb7fe9d12	
lea esi, ptr [ebp-0x50]	
mov dword ptr [ebp-0x88], esi	
lea esi, ptr [ebp-0x30]	
mov dword ptr [ebp-0x6c], esi	
mov esi, dword ptr [edi]	
mov dword ptr [ebp-0x70], edi	
mov dword ptr [ebp-0x74], esi	
lea esi, ptr [ebx+0x548]	
mov dword ptr [ebp-0xc0], esi	
mov edi, dword ptr [ebp-0x88]	
add edx, eax	
mov esi, dword ptr [ebp-0x88]	
mov dword ptr [ebp-0x78], edx	
mov edi, dword ptr [edi]	
mov ecx, dword ptr [esi-0x4]	
mov esi, eax	
test edi, edi	
jz 0xb7fe9930	
START: 0xb7fe9991
mov edx, dword ptr [ebp-0x70]	
mov eax, dword ptr [edx+0xe4]	
test eax, eax	
jz 0xb7fe9d69	
mov eax, dword ptr [eax+0x4]	
cmp dword ptr [ebp-0x78], esi	
mov dword ptr [ebp-0xb0], eax	
jbe 0xb7fe9582	
lea edi, ptr [ebx-0x76ce]	
mov dword ptr [ebp-0xc8], edi	
mov edi, esi	
lea esi, ptr [esi]	
mov eax, dword ptr [edi+0x4]	
mov esi, dword ptr [ebp-0xb0]	
mov ecx, dword ptr [ebp-0x70]	
mov edx, eax	
and eax, 0xff	
shr edx, 0x8	
movzx esi, word ptr [esi+edx*2]	
shl edx, 0x4	
mov ecx, dword ptr [ecx+0x170]	
add edx, dword ptr [ebp-0xac]	
mov dword ptr [ebp-0x7c], eax	
mov word ptr [ebp-0xa8], si	
mov esi, dword ptr [ebp-0x74]	
add esi, dword ptr [edi]	
cmp eax, 0x8	
mov dword ptr [ebp-0x84], ecx	
mov dword ptr [ebp-0x80], edx	
mov dword ptr [ebp-0x98], esi	
mov dword ptr [ebp-0x1c], edx	
jz 0xb7fea64a	
START: 0xb7fe9a1b
mov esi, dword ptr [ebp-0x7c]	
test esi, esi	
jz 0xb7fe9b87	
mov esi, dword ptr [ebp-0x80]	
movzx eax, byte ptr [esi+0xc]	
mov edx, esi	
mov esi, dword ptr [ebp-0x70]	
shr al, 0x4	
test al, al	
jz 0xb7fe9b1a	
cmp edx, dword ptr [esi+0x21c]	
jz 0xb7fea6a6	
START: 0xb7fe9a49
cmp dword ptr [ebp-0x7c], 0x7	
setz al	
cmp dword ptr [ebp-0x7c], 0x23	
setz dl	
or eax, edx	
test al, al	
mov ecx, 0x1	
jnz 0xb7fe9a89	
cmp dword ptr [ebp-0x7c], 0x25	
jz 0xb7fe9d08	
cmp dword ptr [ebp-0x7c], 0x24	
jz 0xb7fe9d08	
START: 0xb7fe9a76
cmp dword ptr [ebp-0x7c], 0x29	
setz cl	
cmp dword ptr [ebp-0x7c], 0xe	
setz al	
or ecx, eax	
movzx ecx, cl	
xor eax, eax	
movzx edx, word ptr [ebp-0xa8]	
cmp dword ptr [ebp-0x7c], 0x5	
mov esi, dword ptr [ebp-0x70]	
setz al	
and edx, 0x7fff	
add eax, eax	
or eax, ecx	
mov ecx, dword ptr [ebp-0x80]	
shl edx, 0x4	
add edx, dword ptr [ebp-0x84]	
mov dword ptr [esi+0x220], eax	
mov dword ptr [esi+0x21c], ecx	
jz 0xb7fe9acd	
mov ecx, dword ptr [edx+0x4]	
test ecx, ecx	
mov ecx, 0x0	
cmovz edx, ecx	
mov ecx, dword ptr [ebp-0x80]	
mov esi, dword ptr [ebp-0xb8]	
add esi, dword ptr [ecx]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [ebp+0xc]	
lea ecx, ptr [ebp-0x1c]	
mov dword ptr [esp+0x4], edx	
mov edx, dword ptr [ebp-0x70]	
mov dword ptr [esp+0x10], 0x0	
mov dword ptr [esp+0xc], 0x1	
mov dword ptr [esp], eax	
mov eax, esi	
call 0xb7fe7dd0	_dl_rtld_di_serinfo
START: 0xb7fe12c8
cmp byte ptr [ebp-0xa0], 0x0	
jnz 0xb7fe12e2	
mov eax, dword ptr [ebx+0x834]	
test eax, eax	
jz 0xb7fe12e2	
add dword ptr [ebx+0x850], 0x1	
mov eax, dword ptr [ebp-0x90]	
call 0xb7fef860	_dl_allocate_tls_init
START: 0xb7fef860
push ebp	
push edi	
push esi	
push ebx	
sub esp, 0x3c	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fef86c
add ebx, 0xf788	
test eax, eax	
mov dword ptr [esp+0x2c], eax	
jz 0xb7fefa0e	
mov edx, dword ptr [eax+0x4]	
xor ebp, ebp	
mov ecx, dword ptr [ebx+0x838]	
mov dword ptr [esp+0x24], 0x0	
mov dword ptr [esp+0x28], edx	
mov edx, dword ptr [ebx+0x834]	
mov dword ptr [esp+0x20], ecx	
nop 	
mov ecx, dword ptr [esp+0x24]	
xor eax, eax	
test ecx, ecx	
mov ecx, dword ptr [esp+0x20]	
setz al	
mov esi, eax	
cmp esi, dword ptr [ecx]	
jnb 0xb7fef9ba	
mov eax, dword ptr [esp+0x24]	
add eax, esi	
cmp edx, eax	
jb 0xb7fefa08	
START: 0xb7fef8c7
lea edi, ptr [ecx+esi*8+0xc]	
jmp 0xb7fef975	
START: 0xb7fef975
mov eax, dword ptr [edi]	
test eax, eax	
jz 0xb7fef955	
mov edx, dword ptr [edi-0x4]	
mov ecx, dword ptr [eax+0x240]	
cmp ebp, edx	
cmovb ebp, edx	
cmp ecx, 0x1	
jnbe 0xb7fef8d0	
mov edx, dword ptr [esp+0x28]	
add esi, 0x1	
mov eax, dword ptr [eax+0x244]	
lea eax, ptr [edx+eax*8]	
mov edx, dword ptr [esp+0x20]	
mov dword ptr [eax], 0xffffffff	
mov byte ptr [eax+0x4], 0x0	
cmp dword ptr [edx], esi	
jnbe 0xb7fef960	
START: 0xb7fef8d0
cmp dword ptr [eax+0x244], esi	
jnz 0xb7fefa1a	
mov edx, dword ptr [eax+0x234]	
mov dword ptr [esp+0x18], edx	
mov edx, dword ptr [eax+0x230]	
cmp dword ptr [esp+0x18], edx	
mov dword ptr [esp+0x10], edx	
jb 0xb7fefa44	
cmp ecx, dword ptr [esp+0x18]	
jb 0xb7fefa6e	
START: 0xb7fef904
mov edx, dword ptr [esp+0x2c]	
sub edx, ecx	
mov dword ptr [esp+0x1c], edx	
mov edx, dword ptr [esp+0x28]	
lea ecx, ptr [edx+esi*8]	
mov edx, dword ptr [esp+0x1c]	
mov byte ptr [ecx+0x4], 0x1	
mov dword ptr [ecx], edx	
mov ecx, dword ptr [esp+0x10]	
mov dword ptr [esp+0x8], ecx	
mov eax, dword ptr [eax+0x22c]	
mov dword ptr [esp], edx	
mov dword ptr [esp+0x4], eax	
call 0xb7ff6970	realloc
START: 0xb7fef939
mov edx, dword ptr [esp+0x18]	
sub edx, dword ptr [esp+0x10]	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp], eax	
call 0xb7ff6920	realloc
START: 0xb7fef955
mov edx, dword ptr [esp+0x20]	
add esi, 0x1	
cmp dword ptr [edx], esi	
jbe 0xb7fef9b4	
mov eax, dword ptr [esp+0x24]	
add edi, 0x8	
add eax, esi	
cmp eax, dword ptr [ebx+0x834]	
jnbe 0xb7fefa08	
mov eax, dword ptr [edi]	
test eax, eax	
jz 0xb7fef955	
START: 0xb7fefa08
mov edx, dword ptr [esp+0x28]	
mov dword ptr [edx], ebp	
mov eax, dword ptr [esp+0x2c]	
add esp, 0x3c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe12ed
cmp byte ptr [ebx+0x88c], 0x0	
jnz 0xb7fe1356	
mov eax, dword ptr [ebp-0x90]	
mov edx, dword ptr [ebp-0x90]	
mov dword ptr [eax], eax	
mov dword ptr [eax+0x8], eax	
mov eax, dword ptr [ebx-0x1cc]	
mov dword ptr [ebp-0x68], 0xffffffff	
mov dword ptr [edx+0x10], eax	
mov eax, 0xf3	
mov dword ptr [ebp-0x64], edx	
lea edx, ptr [ebp-0x68]	
mov dword ptr [ebp-0x60], 0xfffff	
mov dword ptr [ebp-0x5c], 0x51	
xchg ebx, edx	
int 0x80	
START: 0xb7fe1356
mov ecx, dword ptr [ebx+0x540]	
cmp dword ptr [ebx-0x1d8], ecx	
jnz 0xb7fe263d	
cmp byte ptr [ebp-0x88], 0x0	
jnz 0xb7fe13d1	
cmp byte ptr [ebp-0x80], 0x0	
jz 0xb7fe13d1	
START: 0xb7fe1377
rdtsc 	
mov dword ptr [ebp-0x8c], edx	
mov edx, dword ptr [ebp-0x7c]	
and byte ptr [ebx+0x6dc], 0xfb	
mov esi, dword ptr [ebp-0x9c]	
mov dword ptr [ebp-0x90], eax	
mov dword ptr [esp+0xc], 0x0	
mov dword ptr [esp+0x8], 0x0	
mov eax, dword ptr [edx+0x1cc]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], eax	
call 0xb7fe9400	_dl_rtld_di_serinfo
START: 0xb7fe9a89
xor eax, eax	
movzx edx, word ptr [ebp-0xa8]	
cmp dword ptr [ebp-0x7c], 0x5	
mov esi, dword ptr [ebp-0x70]	
setz al	
and edx, 0x7fff	
add eax, eax	
or eax, ecx	
mov ecx, dword ptr [ebp-0x80]	
shl edx, 0x4	
add edx, dword ptr [ebp-0x84]	
mov dword ptr [esi+0x220], eax	
mov dword ptr [esi+0x21c], ecx	
jz 0xb7fe9acd	
mov ecx, dword ptr [edx+0x4]	
test ecx, ecx	
mov ecx, 0x0	
cmovz edx, ecx	
mov ecx, dword ptr [ebp-0x80]	
mov esi, dword ptr [ebp-0xb8]	
add esi, dword ptr [ecx]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [ebp+0xc]	
lea ecx, ptr [ebp-0x1c]	
mov dword ptr [esp+0x4], edx	
mov edx, dword ptr [ebp-0x70]	
mov dword ptr [esp+0x10], 0x0	
mov dword ptr [esp+0xc], 0x1	
mov dword ptr [esp], eax	
mov eax, esi	
call 0xb7fe7dd0	_dl_rtld_di_serinfo
START: 0xb7fe13b7
rdtsc 	
sub eax, dword ptr [ebp-0x90]	
sbb edx, dword ptr [ebp-0x8c]	
add dword ptr [ebx+0x894], eax	
adc dword ptr [ebx+0x898], edx	
call 0xb7ff2b50	_dl_make_stack_executable
START: 0xb7ff2b50
ret 	
START: 0xb7fe13d6
mov edi, dword ptr [ebx-0x198]	
test edi, edi	
jnz 0xb7fe25d6	
xor edx, edx	
xor eax, eax	
call 0xb7fed680	_dl_debug_state
START: 0xb7fe13ed
mov dword ptr [eax+0xc], 0x0	
call 0xb7fed670	_dl_debug_state
START: 0xb7fed670
ret 	
START: 0xb7fe13f9
call 0xb7fe7470	_dl_rtld_di_serinfo
START: 0xb7fe7470
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fe7476
add ebx, 0x17b7e	
sub esp, 0x18	
mov eax, dword ptr [ebx+0x8a4]	
lea edx, ptr [eax-0x1]	
cmp edx, 0xfffffffd	
jnbe 0xb7fe74a9	
mov edx, dword ptr [ebx+0x8a8]	
mov dword ptr [esp], eax	
mov dword ptr [esp+0x4], edx	
call 0xb7ff5da0	realloc
START: 0xb7ff5da0
mov edx, ebx	
mov ecx, dword ptr [esp+0x8]	
mov ebx, dword ptr [esp+0x4]	
mov eax, 0x5b	
int 0x80	
START: 0xb7ff5db1
mov ebx, edx	
cmp eax, 0xfffff001	
jnb 0xb7ff5dbb	
ret 	
START: 0xb7fe749f
mov dword ptr [ebx+0x8a4], 0x0	
add esp, 0x18	
pop ebx	
ret 	
START: 0xb7fe13fe
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7ff2987
mov eax, dword ptr [esp+0x5c]	
add esp, 0x6c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fe2efb
mov esi, eax	
rdtsc 	
sub eax, dword ptr [ebx-0x17c]	
sbb edx, dword ptr [ebx-0x178]	
test byte ptr [ebx-0x354], 0x80	
mov dword ptr [ebp-0x20], eax	
mov dword ptr [ebp-0x1c], edx	
jnz 0xb7fe31e9	
add esp, 0x5c	
mov eax, esi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7fdf1d7
mov edi, eax	
call 0xb7fdf1c0	.text
START: 0xb7fdf1c0
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fdf1de
add ebx, 0x1fe16	
mov eax, dword ptr [ebx-0x18c]	
pop edx	
lea esp, ptr [esp+eax*4]	
sub edx, eax	
push edx	
mov eax, dword ptr [ebx+0x2c]	
lea esi, ptr [esp+edx*4+0x8]	
lea ecx, ptr [esp+0x4]	
mov ebp, esp	
and esp, 0xfffffff0	
push eax	
push eax	
push ebp	
push esi	
xor ebp, ebp	
call 0xb7fecf20	_dl_rtld_di_serinfo
START: 0xb7fecf20
push ebp	
push edi	
push esi	
mov esi, eax	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fecf2b
add ebx, 0x120c9	
sub esp, 0x2c	
mov edi, dword ptr [eax+0xa4]	
mov dword ptr [esp+0x18], ecx	
mov ecx, dword ptr [eax+0xa0]	
mov dword ptr [esp+0x14], edx	
mov eax, dword ptr [ebx+0x528]	
test eax, eax	
jnz 0xb7fed01e	
test edi, edi	
jz 0xb7fecf5e	
test ecx, ecx	
jnz 0xb7fecfa8	
START: 0xb7fecf5e
mov ebp, dword ptr [esi+0x160]	
test ebp, ebp	
jz 0xb7fecf99	
lea edi, ptr [ebp*4-0x4]	
nop 	
mov eax, dword ptr [esi+0x1f0]	
mov edx, dword ptr [esp+0x40]	
mov eax, dword ptr [eax+edi*1]	
sub edi, 0x4	
mov dword ptr [esp+0x4], edx	
mov edx, dword ptr [esp+0x18]	
mov dword ptr [esp], edx	
mov edx, dword ptr [esp+0x14]	
call 0xb7fecdc0	_dl_rtld_di_serinfo
START: 0xb7fecdc0
sub esp, 0x4c	
mov dword ptr [esp+0x3c], ebx	
mov dword ptr [esp+0x40], esi	
mov esi, edx	
mov dword ptr [esp+0x44], edi	
mov edi, dword ptr [esp+0x50]	
mov dword ptr [esp+0x48], ebp	
movzx edx, byte ptr [eax+0x194]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fecde5
add ebx, 0x1220f	
mov ebp, dword ptr [esp+0x54]	
test dl, 0x8	
jnz 0xb7feceb2	
mov ecx, dword ptr [eax+0x4]	
or edx, 0x8	
mov byte ptr [esp+0x24], dl	
mov byte ptr [eax+0x194], dl	
movzx edx, byte ptr [ecx]	
test dl, dl	
mov byte ptr [esp+0x20], dl	
jz 0xb7feced6	
mov edx, dword ptr [eax+0x50]	
test edx, edx	
jz 0xb7fecec8	
START: 0xb7fecec8
cmp dword ptr [eax+0x84], 0x0	
jz 0xb7feceb2	
jmp 0xb7fece22	
START: 0xb7feceb2
mov ebx, dword ptr [esp+0x3c]	
mov esi, dword ptr [esp+0x40]	
mov edi, dword ptr [esp+0x44]	
mov ebp, dword ptr [esp+0x48]	
add esp, 0x4c	
ret 	
START: 0xb7fecf94
sub ebp, 0x1	
jnz 0xb7fecf70	
add esp, 0x2c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0x4	
START: 0xb7fecf70
mov eax, dword ptr [esi+0x1f0]	
mov edx, dword ptr [esp+0x40]	
mov eax, dword ptr [eax+edi*1]	
sub edi, 0x4	
mov dword ptr [esp+0x4], edx	
mov edx, dword ptr [esp+0x18]	
mov dword ptr [esp], edx	
mov edx, dword ptr [esp+0x14]	
call 0xb7fecdc0	_dl_rtld_di_serinfo
START: 0xb7fece22
test byte ptr [ebx-0x354], 0x2	
jnz 0xb7fecee3	
test edx, edx	
jz 0xb7fece4d	
mov edx, dword ptr [edx+0x4]	
add edx, dword ptr [eax]	
mov dword ptr [esp+0x1c], eax	
mov dword ptr [esp+0x8], ebp	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], esi	
call edx	
START: 0xb6354320
sub esp, 0x2c	
mov dword ptr [esp+0x1c], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb635432c
add ebx, 0x18bcc8	
mov dword ptr [esp+0x20], esi	
mov esi, dword ptr [esp+0x30]	
mov dword ptr [esp+0x24], edi	
mov edi, dword ptr [esp+0x34]	
mov dword ptr [esp+0x28], ebp	
mov ebp, dword ptr [esp+0x38]	
mov eax, dword ptr [ebx-0x80]	
test eax, eax	
jz 0xb63543a0	
mov eax, dword ptr [eax]	
test eax, eax	
jnz 0xb63543a0	
mov dword ptr [ebx+0x4c], 0x1	
mov eax, dword ptr [ebx-0xd4]	
mov dword ptr [ebx+0x3688], esi	
mov dword ptr [ebx+0x3684], edi	
mov dword ptr [eax], ebp	
mov dword ptr [esp+0x8], ebp	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], esi	
call 0xb6429b30	qecvt_r
START: 0xb63543a0
mov eax, dword ptr [ebx-0x38]	
mov edx, dword ptr [ebx-0xfc]	
mov dword ptr [ebx+0x4c], 0x0	
movzx eax, word ptr [eax]	
cmp word ptr [edx+0x34], ax	
jz 0xb6354364	
movzx eax, ax	
mov dword ptr [esp], eax	
call 0xb6368e20	__signbitl
START: 0xb6354364
mov eax, dword ptr [ebx-0xd4]	
mov dword ptr [ebx+0x3688], esi	
mov dword ptr [ebx+0x3684], edi	
mov dword ptr [eax], ebp	
mov dword ptr [esp+0x8], ebp	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], esi	
call 0xb6429b30	qecvt_r
START: 0xb6429b30
sub esp, 0x1c	
mov dword ptr [esp+0x14], esi	
mov esi, dword ptr [esp+0x24]	
mov dword ptr [esp+0x10], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb6429b44
add ebx, 0xb64b0	
mov dword ptr [esp+0x18], edi	
test esi, esi	
jz 0xb6429b81	
mov edi, dword ptr [esi]	
test edi, edi	
jz 0xb6429b81	
mov dword ptr [esp+0x4], 0x2f	
mov dword ptr [esp], edi	
call 0xb63b91b0	strerror_r
START: 0xb63b91b0
push edi	
push esi	
xor eax, eax	
mov esi, dword ptr [esp+0xc]	
mov ecx, dword ptr [esp+0x10]	
mov ch, cl	
mov edx, ecx	
shl ecx, 0x10	
mov cx, dx	
test esi, 0x3	
jz 0xb63b9253	
mov dl, byte ptr [esi]	
cmp cl, dl	
jnz 0xb63b91da	
mov eax, esi	
or dl, dl	
jz 0xb63b9366	
START: 0xb63b91da
or dl, dl	
jz 0xb63b9366	
inc esi	
test esi, 0x3	
jz 0xb63b9253	
mov dl, byte ptr [esi]	
cmp cl, dl	
jnz 0xb63b91f3	
START: 0xb63b91f3
or dl, dl	
jz 0xb63b9366	
inc esi	
test esi, 0x3	
jz 0xb63b9253	
mov dl, byte ptr [esi]	
cmp cl, dl	
jnz 0xb63b920c	
START: 0xb63b9253
mov edx, dword ptr [esi]	
mov edi, 0xfefefeff	
add edi, edx	
jnb 0xb63b933c	
xor edi, edx	
or edi, 0xfefefeff	
inc edi	
jnz 0xb63b933c	
xor edx, ecx	
mov edi, 0xfefefeff	
add edi, edx	
jnb 0xb63b921a	
START: 0xb63b927c
xor edi, edx	
or edi, 0xfefefeff	
inc edi	
jnz 0xb63b9230	
mov edx, dword ptr [esi+0x4]	
mov edi, 0xfefefeff	
add edi, edx	
jnb 0xb63b9339	
xor edi, edx	
or edi, 0xfefefeff	
inc edi	
jnz 0xb63b9339	
START: 0xb63b9230
sub esi, 0x4	
sub esi, 0x4	
sub esi, 0x4	
test edx, 0xff0000	
jnz 0xb63b9246	
lea eax, ptr [esi+0xe]	
jmp 0xb63b9250	
START: 0xb63b9246
lea eax, ptr [esi+0xc]	
test dh, dh	
jnz 0xb63b9250	
lea eax, ptr [esi+0xd]	
add esi, 0x10	
mov edx, dword ptr [esi]	
mov edi, 0xfefefeff	
add edi, edx	
jnb 0xb63b933c	
xor edi, edx	
or edi, 0xfefefeff	
inc edi	
jnz 0xb63b933c	
START: 0xb63b9250
add esi, 0x10	
mov edx, dword ptr [esi]	
mov edi, 0xfefefeff	
add edi, edx	
jnb 0xb63b933c	
xor edi, edx	
or edi, 0xfefefeff	
inc edi	
jnz 0xb63b933c	
xor edx, ecx	
mov edi, 0xfefefeff	
add edi, edx	
jnb 0xb63b921a	
START: 0xb63b92a6
xor edx, ecx	
mov edi, 0xfefefeff	
add edi, edx	
jnb 0xb63b921d	
xor edi, edx	
or edi, 0xfefefeff	
inc edi	
jnz 0xb63b9233	
mov edx, dword ptr [esi+0x8]	
mov edi, 0xfefefeff	
add edi, edx	
jnb 0xb63b9336	
START: 0xb63b92d0
xor edi, edx	
or edi, 0xfefefeff	
inc edi	
jnz 0xb63b9336	
xor edx, ecx	
mov edi, 0xfefefeff	
add edi, edx	
jnb 0xb63b9220	
xor edi, edx	
or edi, 0xfefefeff	
inc edi	
jnz 0xb63b9236	
START: 0xb63b92f9
mov edx, dword ptr [esi+0xc]	
mov edi, 0xfefefeff	
add edi, edx	
jnb 0xb63b9333	
xor edi, edx	
or edi, 0xfefefeff	
inc edi	
jnz 0xb63b9333	
xor edx, ecx	
mov edi, 0xfefefeff	
add edi, edx	
jnb 0xb63b9223	
START: 0xb63b931f
xor edi, edx	
or edi, 0xfefefeff	
inc edi	
jz 0xb63b9250	
jmp 0xb63b9239	
START: 0xb63b9233
sub esi, 0x4	
sub esi, 0x4	
test edx, 0xff0000	
jnz 0xb63b9246	
lea eax, ptr [esi+0xe]	
jmp 0xb63b9250	
START: 0xb63b933c
cmp dl, cl	
jnz 0xb63b9342	
mov eax, esi	
test dl, dl	
jz 0xb63b9366	
cmp dh, cl	
jnz 0xb63b934d	
START: 0xb63b9342
test dl, dl	
jz 0xb63b9366	
cmp dh, cl	
jnz 0xb63b934d	
lea eax, ptr [esi+0x1]	
test dh, dh	
jz 0xb63b9366	
START: 0xb63b934d
test dh, dh	
jz 0xb63b9366	
shr edx, 0x10	
cmp dl, cl	
jnz 0xb63b935b	
lea eax, ptr [esi+0x2]	
test dl, dl	
jz 0xb63b9366	
START: 0xb63b935b
test dl, dl	
jz 0xb63b9366	
cmp dh, cl	
jnz 0xb63b9366	
lea eax, ptr [esi+0x3]	
pop esi	
pop edi	
ret 	
START: 0xb63b9366
pop esi	
pop edi	
ret 	
START: 0xb6429b68
test eax, eax	
jz 0xb6429b98	
mov edx, dword ptr [ebx-0x138]	
add eax, 0x1	
mov dword ptr [edx], eax	
mov edx, dword ptr [esi]	
mov eax, dword ptr [ebx-0x14c]	
mov dword ptr [eax], edx	
mov ebx, dword ptr [esp+0x10]	
mov esi, dword ptr [esp+0x14]	
mov edi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb6354388
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
jmp 0xb6362780	
START: 0xb6362780
sub esp, 0x8	
mov eax, dword ptr gs:[0x0]	
mov dword ptr [esp], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb6362791
add ebx, 0x17d863	
mov dword ptr [esp+0x4], esi	
mov edx, dword ptr [ebx-0x158]	
mov ecx, dword ptr [ebx-0x130]	
mov edx, dword ptr [eax+edx*1]	
mov edx, dword ptr [edx]	
mov esi, dword ptr [edx+0x24]	
add esi, 0x100	
mov dword ptr [eax+ecx*1], esi	
mov esi, dword ptr [edx+0x28]	
mov ecx, dword ptr [ebx-0xc0]	
add esi, 0x200	
mov dword ptr [eax+ecx*1], esi	
mov ecx, dword ptr [edx+0x30]	
mov edx, dword ptr [ebx-0x90]	
mov esi, dword ptr [esp+0x4]	
mov ebx, dword ptr [esp]	
add ecx, 0x200	
mov dword ptr [eax+edx*1], ecx	
add esp, 0x8	
ret 	
START: 0xb7fece49
mov eax, dword ptr [esp+0x1c]	
mov edx, dword ptr [eax+0x84]	
test edx, edx	
jz 0xb7feceb2	
mov ecx, dword ptr [eax+0x8c]	
mov eax, dword ptr [eax]	
mov ecx, dword ptr [ecx+0x4]	
mov dword ptr [esp+0x2c], eax	
mov eax, dword ptr [edx+0x4]	
add dword ptr [esp+0x2c], eax	
shr ecx, 0x2	
test ecx, ecx	
jz 0xb7feceb2	
mov dword ptr [esp+0x28], ebp	
mov ebp, dword ptr [esp+0x2c]	
xor eax, eax	
mov dword ptr [esp+0x20], esi	
mov esi, eax	
mov dword ptr [esp+0x24], edi	
mov edi, ecx	
lea esi, ptr [esi]	
mov edx, dword ptr [esp+0x28]	
mov eax, dword ptr [esp+0x24]	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [esp+0x20]	
mov dword ptr [esp+0x4], eax	
mov dword ptr [esp], edx	
call dword ptr [ebp+esi*4]	
START: 0xb63542e0
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63542e6
add ebx, 0x18bd0e	
mov ecx, dword ptr [ebx-0x13c]	
mov eax, dword ptr [ecx+0x504]	
or eax, dword ptr [ecx+0x500]	
jnz 0xb635430e	
rdtsc 	
mov dword ptr [ecx+0x500], eax	
mov dword ptr [ecx+0x504], edx	
pop ebx	
ret 	
START: 0xb635430e
pop ebx	
ret 	
START: 0xb7feceab
add esi, 0x1	
cmp esi, edi	
jnz 0xb7fece90	
mov ebx, dword ptr [esp+0x3c]	
mov esi, dword ptr [esp+0x40]	
mov edi, dword ptr [esp+0x44]	
mov ebp, dword ptr [esp+0x48]	
add esp, 0x4c	
ret 	
START: 0xb7fece90
mov edx, dword ptr [esp+0x28]	
mov eax, dword ptr [esp+0x24]	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [esp+0x20]	
mov dword ptr [esp+0x4], eax	
mov dword ptr [esp], edx	
call dword ptr [ebp+esi*4]	
START: 0xb6354060
push ebp	
push edi	
push esi	
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb6354069
add ebx, 0x18bf8b	
sub esp, 0x1c	
mov eax, dword ptr [ebx+0x368c]	
test eax, eax	
jz 0xb6354092	
cmp eax, 0x1	
jz 0xb635409f	
cmp eax, 0x2	
jz 0xb6354209	
START: 0xb6354209
mov al, 0xbc	
call 0xb63d2da0	envz_strip
START: 0xb63d2da0
sub esp, 0x1c	
mov dword ptr [esp+0x18], edi	
mov edi, eax	
mov eax, 0x80000000	
mov dword ptr [esp+0x10], ebx	
mov dword ptr [esp+0x14], esi	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63d2dbb
add ebx, 0x10d239	
xchg esi, ebx	
cpuid 	
START: 0xb63d2dc5
xchg esi, ebx	
cmp edi, 0xc4	
jnle 0xb63d2e30	
xor edx, edx	
cmp edi, 0xbf	
setnl dl	
sub edx, 0x7ffffffb	
cmp edx, eax	
jnbe 0xb63d2e30	
mov eax, edx	
xchg esi, ebx	
cpuid 	
START: 0xb63d2dea
xchg esi, ebx	
cmp edi, 0xbb	
jnle 0xb63d2df9	
add edi, 0x3	
mov ecx, edx	
sub edi, 0xbc	
cmp edi, 0x8	
jbe 0xb63d2e48	
lea eax, ptr [ebx-0x42bb7]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [ebx-0x42c04]	
mov dword ptr [esp+0x4], eax	
lea eax, ptr [ebx-0x42be6]	
mov dword ptr [esp+0x8], 0x1de	
mov dword ptr [esp], eax	
call 0xb63620e0	__assert_fail
START: 0xb63d2df9
sub edi, 0xbc	
cmp edi, 0x8	
jbe 0xb63d2e48	
lea eax, ptr [ebx-0x42bb7]	
mov dword ptr [esp+0xc], eax	
lea eax, ptr [ebx-0x42c04]	
mov dword ptr [esp+0x4], eax	
lea eax, ptr [ebx-0x42be6]	
mov dword ptr [esp+0x8], 0x1de	
mov dword ptr [esp], eax	
call 0xb63620e0	__assert_fail
START: 0xb63d2e48
mov eax, dword ptr [ebx+edi*4-0x48574]	
add eax, ebx	
jmp eax	
START: 0xb63d2eb0
mov eax, ecx	
shr eax, 0xe	
and eax, 0x3fc00	
jmp 0xb63d2e32	
START: 0xb63d2e32
mov ebx, dword ptr [esp+0x10]	
mov esi, dword ptr [esp+0x14]	
mov edi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb6354210
mov ebp, eax	
mov eax, 0xbf	
call 0xb63d2da0	envz_strip
START: 0xb63d2ee8
xor eax, eax	
test ch, 0xf0	
jz 0xb63d2e32	
mov eax, ecx	
shr eax, 0x6	
and eax, 0x3fffc00	
jmp 0xb63d2e32	
START: 0xb635421c
mov dword ptr [esp+0x4], eax	
mov eax, 0xc2	
call 0xb63d2da0	envz_strip
START: 0xb63d2e70
xor eax, eax	
test dh, 0xf0	
jz 0xb63d2e32	
mov eax, edx	
and eax, 0x3ffc0000	
add eax, eax	
jmp 0xb63d2e32	
START: 0xb635422a
mov edi, dword ptr [esp+0x4]	
mov dword ptr [esp], eax	
mov eax, 0x80000000	
xchg esi, ebx	
cpuid 	
START: 0xb635423a
xchg esi, ebx	
cmp dword ptr [esp], 0x0	
jle 0xb635419f	
cmp eax, 0x80000007	
jnbe 0xb635428f	
mov eax, 0x1	
xchg esi, ebx	
cpuid 	
START: 0xb635419f
test ebp, ebp	
jle 0xb63541c9	
mov eax, ebp	
sar eax, 0x1	
mov dword ptr [ebx+0x17c], ebp	
and ebp, 0xffffff00	
mov dword ptr [ebx+0x180], eax	
mov eax, ebp	
sar eax, 0x1	
mov dword ptr [ebx+0x188], eax	
mov dword ptr [ebx+0x184], ebp	
test edi, edi	
jle 0xb635408a	
mov eax, edi	
mov dword ptr [ebx+0x16c], edi	
sar eax, 0x1	
and edi, 0xffffff00	
mov dword ptr [ebx+0x170], eax	
mov eax, edi	
sar eax, 0x1	
mov dword ptr [ebx+0x174], edi	
mov dword ptr [ebx+0x178], eax	
add esp, 0x1c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb6353ff0
push esi	
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb6353ff7
add ebx, 0x18bffd	
mov eax, dword ptr [ebx-0x118]	
test eax, eax	
jnz 0xb6354055	
mov edx, dword ptr [ebx-0x50]	
mov eax, dword ptr [ebx-0x30]	
mov ecx, dword ptr [ebx-0xdc]	
mov esi, dword ptr [ebx-0x16c]	
mov dword ptr [ebx+0xdb0], edx	
mov dword ptr [eax], edx	
mov eax, dword ptr [ebx-0x7c]	
mov dword ptr [ebx+0xdac], ecx	
mov byte ptr [ecx+0x46], 0xb8	
mov byte ptr [edx+0x46], 0xb8	
mov dword ptr [eax], ecx	
mov eax, dword ptr [ebx-0xec]	
mov dword ptr [esi], eax	
mov dword ptr [ebx+0xda8], eax	
mov dword ptr [ebx+0x96c], eax	
mov byte ptr [eax+0x46], 0xb8	
pop ebx	
pop esi	
ret 	
START: 0xb6354055
pop ebx	
pop esi	
ret 	
START: 0xb7feced6
test byte ptr [esp+0x24], 0x3	
jnz 0xb7fece17	
jmp 0xb7feceb2	
START: 0xb7fdf20f
lea edx, ptr [ebx-0x11d74]	
mov esp, dword ptr [esp]	
jmp edi	
START: 0x8048440
xor ebp, ebp	
pop esi	
mov ecx, esp	
and esp, 0xfffffff0	
push eax	
push esp	
push edx	
push 0x80485f0	
push 0x8048580	
push ecx	
push esi	
push 0x80484f4	
call 0x8048430	.plt
START: 0x8048430
jmp dword ptr [0x804a01c]	
START: 0x8048436
push 0x38	
jmp 0x80483b0	
START: 0x80483b0
push dword ptr [0x8049ff8]	
jmp dword ptr [0x8049ffc]	
START: 0xb7ff26a0
push eax	
push ecx	
push edx	
mov edx, dword ptr [esp+0x10]	
mov eax, dword ptr [esp+0xc]	
call 0xb7fec1d0	_dl_rtld_di_serinfo
START: 0xb7fec1d0
push ebp	
push edi	
push esi	
mov esi, eax	
push ebx	
sub esp, 0x4c	
mov eax, dword ptr [eax+0x34]	
mov ebp, dword ptr [esi+0x38]	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fec1e4
add ebx, 0x12e10	
mov eax, dword ptr [eax+0x4]	
mov dword ptr [esp+0x28], eax	
mov eax, dword ptr [esi+0x7c]	
add edx, dword ptr [eax+0x4]	
mov eax, dword ptr [edx+0x4]	
mov edx, dword ptr [edx]	
mov edi, eax	
shr edi, 0x8	
mov ecx, edi	
shl ecx, 0x4	
add ecx, dword ptr [ebp+0x4]	
cmp al, 0x7	
mov ebp, dword ptr [esi]	
mov dword ptr [esp+0x2c], edx	
mov dword ptr [esp+0x3c], ecx	
mov dword ptr [esp+0x24], ebp	
jnz 0xb7fec2ea	
movzx ebp, byte ptr [ecx+0xd]	
and ebp, 0x3	
jnz 0xb7fec358	
mov eax, dword ptr [esi+0xe4]	
xor edx, edx	
test eax, eax	
jz 0xb7fec256	
START: 0xb7fec238
mov eax, dword ptr [eax+0x4]	
movzx edx, word ptr [eax+edi*2]	
and edx, 0x7fff	
shl edx, 0x4	
add edx, dword ptr [esi+0x170]	
mov edi, dword ptr [edx+0x4]	
test edi, edi	
cmovz edx, ebp	
mov eax, dword ptr gs:[0xc]	
test eax, eax	
jnz 0xb7fec343	
mov edi, 0x1	
mov eax, dword ptr [esp+0x28]	
add eax, dword ptr [ecx]	
mov dword ptr [esp+0xc], edi	
lea ecx, ptr [esp+0x3c]	
mov dword ptr [esp+0x10], 0x0	
mov dword ptr [esp+0x8], 0x1	
mov dword ptr [esp+0x4], edx	
mov edx, dword ptr [esi+0x1cc]	
mov dword ptr [esp], edx	
mov edx, esi	
call 0xb7fe7dd0	_dl_rtld_di_serinfo
START: 0xb7fec29b
sub esp, 0x14	
mov esi, eax	
mov eax, dword ptr gs:[0xc]	
test eax, eax	
jnz 0xb7fec314	
mov ecx, dword ptr [esp+0x3c]	
xor eax, eax	
test ecx, ecx	
jz 0xb7fec2cd	
test esi, esi	
jz 0xb7fec2ba	
START: 0xb7fec2b8
mov eax, dword ptr [esi]	
movzx edx, byte ptr [ecx+0xc]	
add eax, dword ptr [ecx+0x4]	
and edx, 0xf	
cmp edx, 0xa	
jz 0xb7fec361	
mov edx, dword ptr [ebx-0x328]	
test edx, edx	
jnz 0xb7fec2e2	
mov edx, dword ptr [esp+0x2c]	
mov ebp, dword ptr [esp+0x24]	
mov dword ptr [edx+ebp*1], eax	
add esp, 0x4c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb7ff26b0
pop edx	
mov ecx, dword ptr [esp]	
mov dword ptr [esp], eax	
mov eax, dword ptr [esp+0x4]	
ret 0xc	
START: 0xb63543e0
push ebp	
push edi	
push esi	
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63543e9
add ebx, 0x18bc0b	
sub esp, 0x5c	
mov esi, dword ptr [esp+0x7c]	
mov eax, dword ptr [esp+0x84]	
mov edx, dword ptr [ebx-0x80]	
test edx, edx	
jz 0xb63544db	
mov edx, dword ptr [edx]	
xor ecx, ecx	
test edx, edx	
setz cl	
mov edx, dword ptr [ebx-0x104]	
test eax, eax	
mov dword ptr [edx], ecx	
jz 0xb6354438	
mov dword ptr [esp+0x8], 0x0	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp], eax	
call 0xb636e1f0	__cxa_atexit
START: 0xb63544db
xor ecx, ecx	
jmp 0xb6354414	
START: 0xb6354414
mov edx, dword ptr [ebx-0x104]	
test eax, eax	
mov dword ptr [edx], ecx	
jz 0xb6354438	
mov dword ptr [esp+0x8], 0x0	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp], eax	
call 0xb636e1f0	__cxa_atexit
START: 0xb636e1f0
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb636e1f6
add ebx, 0x171dfe	
sub esp, 0x18	
lea eax, ptr [ebx+0x3f0]	
mov dword ptr [esp+0xc], eax	
mov eax, dword ptr [esp+0x28]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esp+0x24]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [esp+0x20]	
mov dword ptr [esp], eax	
call 0xb636e190	on_exit
START: 0xb636e190
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb636e196
add ebx, 0x171e5e	
sub esp, 0x18	
mov eax, dword ptr [esp+0x2c]	
mov dword ptr [esp], eax	
call 0xb636e030	on_exit
START: 0xb636e030
push ebp	
xor eax, eax	
push edi	
mov ecx, 0x1	
push esi	
push ebx	
sub esp, 0x1c	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb636e043
add ebx, 0x171fb1	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb636e054	
lock cmpxchg dword ptr [ebx+0x11cc], ecx	
jnz 0xb636e22a	
mov eax, dword ptr [esp+0x30]	
xor edi, edi	
mov esi, dword ptr [eax]	
test esi, esi	
mov eax, esi	
jz 0xb636e12a	
START: 0xb636e054
cmpxchg dword ptr [ebx+0x11cc], ecx	
jnz 0xb636e22a	
mov eax, dword ptr [esp+0x30]	
xor edi, edi	
mov esi, dword ptr [eax]	
test esi, esi	
mov eax, esi	
jz 0xb636e12a	
nop 	
lea esi, ptr [esi]	
mov ecx, dword ptr [eax+0x4]	
test ecx, ecx	
jz 0xb636e0b2	
START: 0xb636e0b2
mov edx, dword ptr [eax]	
mov edi, eax	
mov dword ptr [eax+0x4], 0x0	
test edx, edx	
jz 0xb636e12c	
mov eax, edx	
jmp 0xb636e078	
START: 0xb636e12c
mov eax, 0x1	
jmp 0xb636e11a	
START: 0xb636e11a
test edi, edi	
jz 0xb636e133	
lea edx, ptr [edi+0x8]	
mov dword ptr [edi+0x4], 0x1	
jmp 0xb636e0dc	
START: 0xb636e0dc
mov dword ptr [edx], 0x1	
add dword ptr [ebx+0x37ac], 0x1	
adc dword ptr [ebx+0x37b0], 0x0	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb636e0fb	
lock sub dword ptr [ebx+0x11cc], 0x1	
jnz 0xb636e23a	
add esp, 0x1c	
mov eax, edx	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb636e0fb
sub dword ptr [ebx+0x11cc], 0x1	
jnz 0xb636e23a	
add esp, 0x1c	
mov eax, edx	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb636e1ab
test eax, eax	
jz 0xb636e1db	
mov edx, dword ptr [esp+0x20]	
xor edx, dword ptr gs:[0x18]	
rol edx, 0x9	
mov dword ptr [eax+0x4], edx	
mov edx, dword ptr [esp+0x24]	
mov dword ptr [eax+0x8], edx	
mov edx, dword ptr [esp+0x28]	
mov dword ptr [eax+0xc], edx	
mov dword ptr [eax], 0x4	
xor eax, eax	
add esp, 0x18	
pop ebx	
ret 	
START: 0xb636e225
add esp, 0x18	
pop ebx	
ret 	
START: 0xb6354438
mov eax, dword ptr [ebx-0xfc]	
mov edi, dword ptr [eax]	
and edi, 0x2	
jnz 0xb6354584	
test esi, esi	
jz 0xb635446a	
mov eax, dword ptr [ebx-0xd4]	
mov edx, dword ptr [esp+0x74]	
mov eax, dword ptr [eax]	
mov dword ptr [esp], edx	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esp+0x78]	
mov dword ptr [esp+0x4], eax	
call esi	
START: 0x8048580
push ebp	
push edi	
push esi	
push ebx	
call 0x80485f2	__i686.get_pc_thunk.bx
START: 0x80485f2
mov ebx, dword ptr [esp]	
ret 	
START: 0x8048589
add ebx, 0x1a6b	
sub esp, 0x1c	
mov ebp, dword ptr [esp+0x30]	
lea edi, ptr [ebx-0xe0]	
call 0x8048378	_init
START: 0x8048378
push ebx	
sub esp, 0x8	
call 0x8048381	_init
START: 0x8048381
pop ebx	
add ebx, 0x1c73	
mov eax, dword ptr [ebx-0x4]	
test eax, eax	
jz 0x8048397	
call 0x8048420	.plt
START: 0x8048397
call 0x80484d0	frame_dummy
START: 0x80484d0
push ebp	
mov ebp, esp	
sub esp, 0x18	
mov eax, dword ptr [0x8049f24]	
test eax, eax	
jz 0x80484f1	
mov eax, 0x0	
test eax, eax	
jz 0x80484f1	
mov dword ptr [esp], 0x8049f24	
call eax	
START: 0x80484f1
leave 	
ret 	
START: 0x804839c
call 0x8048600	__do_global_ctors_aux
START: 0x8048600
push ebp	
mov ebp, esp	
push ebx	
sub esp, 0x4	
mov eax, dword ptr [0x8049f14]	
cmp eax, 0xffffffff	
jz 0x8048624	
mov ebx, 0x8049f14	
data16 nop 	
sub ebx, 0x4	
call eax	
START: 0x8048624
add esp, 0x4	
pop ebx	
pop ebp	
ret 	
START: 0x80483a1
add esp, 0x8	
pop ebx	
ret 	
START: 0x80485a1
lea eax, ptr [ebx-0xe0]	
sub edi, eax	
sar edi, 0x2	
test edi, edi	
jz 0x80485d9	
xor esi, esi	
lea esi, ptr [esi]	
mov eax, dword ptr [esp+0x38]	
mov dword ptr [esp], ebp	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esp+0x34]	
mov dword ptr [esp+0x4], eax	
call dword ptr [ebx+esi*4-0xe0]	
START: 0x80485d9
add esp, 0x1c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb635446a
mov eax, dword ptr [ebx-0xfc]	
mov esi, dword ptr [eax+0x1bc]	
test esi, esi	
jnz 0xb6354540	
test edi, edi	
jnz 0xb635451c	
lea eax, ptr [esp+0x24]	
mov dword ptr [esp], eax	
call 0xb6368f80	_setjmp
START: 0xb6368f80
xor eax, eax	
mov edx, dword ptr [esp+0x4]	
mov dword ptr [edx], ebx	
mov dword ptr [edx+0x4], esi	
mov dword ptr [edx+0x8], edi	
lea ecx, ptr [esp+0x4]	
xor ecx, dword ptr gs:[0x18]	
rol ecx, 0x9	
mov dword ptr [edx+0x10], ecx	
mov ecx, dword ptr [esp]	
xor ecx, dword ptr gs:[0x18]	
rol ecx, 0x9	
mov dword ptr [edx+0x14], ecx	
mov dword ptr [edx+0xc], ebp	
mov dword ptr [edx+0x18], eax	
ret 	
START: 0xb6354492
test eax, eax	
jnz 0xb63544e2	
mov eax, dword ptr gs:[0x80]	
mov dword ptr [esp+0x40], eax	
mov eax, dword ptr gs:[0x7c]	
mov dword ptr [esp+0x44], eax	
lea eax, ptr [esp+0x24]	
mov dword ptr gs:[0x80], eax	
mov eax, dword ptr [ebx-0xd4]	
mov ecx, dword ptr [esp+0x78]	
mov eax, dword ptr [eax]	
mov dword ptr [esp+0x4], ecx	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esp+0x74]	
mov dword ptr [esp], eax	
call dword ptr [esp+0x70]	
START: 0x80484f4
push ebp	
mov ebp, esp	
and esp, 0xfffffff0	
sub esp, 0x50	
mov eax, dword ptr [ebp+0xc]	
mov dword ptr [esp+0x1c], eax	
mov eax, dword ptr gs:[0x14]	
mov dword ptr [esp+0x4c], eax	
xor eax, eax	
mov dword ptr [esp], 0x200	
call 0x8048410	.plt
START: 0x8048410
jmp dword ptr [0x804a014]	
START: 0x8048416
push 0x28	
jmp 0x80483b0	
START: 0xb63b4d80
sub esp, 0x3c	
mov dword ptr [esp+0x2c], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63b4d8c
add ebx, 0x12b268	
mov dword ptr [esp+0x38], ebp	
mov ebp, dword ptr [esp+0x40]	
mov dword ptr [esp+0x30], esi	
mov dword ptr [esp+0x34], edi	
mov eax, dword ptr [ebx-0xbc]	
mov eax, dword ptr [eax]	
test eax, eax	
jnz 0xb63b4f4a	
mov edx, dword ptr [ebx-0x188]	
mov ecx, dword ptr gs:[0x0]	
mov edi, dword ptr [ecx+edx*1]	
test edi, edi	
jz 0xb63b4ec8	
mov ecx, 0x1	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb63b4dda	
START: 0xb63b4f4a
mov edx, dword ptr [esp+0x3c]	
mov dword ptr [esp], ebp	
mov dword ptr [esp+0x4], edx	
call eax	
START: 0xb63b5060
sub esp, 0xc	
mov dword ptr [esp+0x4], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63b506c
add ebx, 0x12af88	
mov dword ptr [esp+0x8], esi	
mov esi, dword ptr [esp+0x10]	
mov eax, dword ptr [ebx-0xbc]	
mov dword ptr [eax], 0x0	
call 0xb63b42c0	_IO_str_pbackfail
START: 0xb63b42c0
push ebp	
push edi	
push esi	
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63b42c9
add ebx, 0x12bd2b	
sub esp, 0x4c	
mov eax, dword ptr [ebx+0x10c]	
test eax, eax	
js 0xb63b42e8	
add esp, 0x4c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63b42e8
mov eax, dword ptr [ebx+0x366c]	
mov dword ptr [ebx+0x10c], 0x0	
test eax, eax	
jz 0xb63b43e9	
mov eax, dword ptr [ebx-0x15c]	
lea edx, ptr [ebx-0x12ff44]	
mov dword ptr [eax], edx	
mov eax, dword ptr [ebx-0x188]	
lea ecx, ptr [ebx+0x44c]	
mov edx, dword ptr gs:[0x0]	
mov dword ptr [ebx+0x1938], 0x1	
mov dword ptr [edx+eax*1], ecx	
lea eax, ptr [ebx-0x1300f4]	
mov dword ptr [ebx+0x1928], eax	
lea eax, ptr [ebx-0x12f364]	
mov dword ptr [ebx+0x192c], eax	
lea eax, ptr [ebx-0x12ffe4]	
mov dword ptr [ebx+0x1930], eax	
mov eax, dword ptr [ebx-0xa8]	
mov eax, dword ptr [eax]	
mov dword ptr [ebx+0x1934], eax	
lea eax, ptr [ebx+0x1924]	
mov dword ptr [esp], eax	
call 0xb6437ca0	__register_atfork
START: 0xb63b43e9
lea ecx, ptr [esp+0x3c]	
lea edx, ptr [esp+0x2c]	
lea eax, ptr [ebx-0x12bd34]	
mov dword ptr [esp], 0x0	
call 0xb6462c00	_dl_addr
START: 0xb6462c00
push ebp	
mov ebp, eax	
push edi	
push esi	
xor esi, esi	
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb6462c0d
add ebx, 0x7d3e7	
sub esp, 0x4c	
mov dword ptr [esp+0x38], ecx	
mov dword ptr [esp+0x30], edx	
mov ecx, dword ptr [ebx-0x13c]	
lea eax, ptr [ecx+0x4c4]	
mov dword ptr [esp], eax	
call dword ptr [ecx+0x7f4]	
START: 0xb6462c33
mov ecx, dword ptr [ebx-0x13c]	
mov ecx, dword ptr [ecx+0x4c0]	
test ecx, ecx	
mov dword ptr [esp+0x18], ecx	
jz 0xb6462ca8	
mov dword ptr [esp+0x14], 0x0	
imul eax, dword ptr [esp+0x14], 0x4c	
mov ecx, dword ptr [ebx-0x13c]	
mov esi, dword ptr [ecx+eax*1]	
test esi, esi	
jz 0xb6462c97	
lea esi, ptr [esi]	
mov edi, dword ptr [esi+0x1ac]	
cmp ebp, edi	
jb 0xb6462c90	
START: 0xb6462c72
cmp ebp, dword ptr [esi+0x1b0]	
jnb 0xb6462c90	
test byte ptr [esi+0x195], 0x40	
jnz 0xb6462cd0	
mov edx, ebp	
mov eax, esi	
call 0xb6462bb0	dl_iterate_phdr
START: 0xb6462c90
mov esi, dword ptr [esi+0xc]	
test esi, esi	
jnz 0xb6462c68	
add dword ptr [esp+0x14], 0x1	
mov ecx, dword ptr [esp+0x18]	
cmp dword ptr [esp+0x14], ecx	
jnz 0xb6462c4f	
xor esi, esi	
mov ebp, dword ptr [ebx-0x13c]	
lea eax, ptr [ebp+0x4c4]	
mov dword ptr [esp], eax	
call dword ptr [ebp+0x7f8]	
START: 0xb6462c68
mov edi, dword ptr [esi+0x1ac]	
cmp ebp, edi	
jb 0xb6462c90	
cmp ebp, dword ptr [esi+0x1b0]	
jnb 0xb6462c90	
test byte ptr [esi+0x195], 0x40	
jnz 0xb6462cd0	
START: 0xb6462cd0
mov eax, dword ptr [esi+0x4]	
mov edx, dword ptr [esp+0x30]	
mov dword ptr [edx], eax	
mov dword ptr [edx+0x4], edi	
cmp byte ptr [eax], 0x0	
jz 0xb6462f3f	
mov edx, dword ptr [esi+0x34]	
mov eax, dword ptr [esi+0x38]	
mov edi, dword ptr [esi+0x14c]	
mov edx, dword ptr [edx+0x4]	
mov eax, dword ptr [eax+0x4]	
test edi, edi	
mov dword ptr [esp+0x3c], edx	
mov edx, dword ptr [esi+0x48]	
mov dword ptr [esp+0x2c], eax	
mov edx, dword ptr [edx+0x4]	
mov dword ptr [esp+0x34], edx	
jz 0xb6462e6c	
mov ecx, dword ptr [esi+0x178]	
mov dword ptr [esp+0x20], 0x0	
test ecx, ecx	
mov dword ptr [esp+0x24], ecx	
jz 0xb6462e18	
START: 0xb6462d2b
mov eax, dword ptr [esi+0x188]	
mov dword ptr [esp+0x14], 0x0	
mov dword ptr [esp+0x1c], esi	
mov dword ptr [esp+0x18], ebp	
mov dword ptr [esp+0x28], eax	
lea esi, ptr [esi]	
mov edx, dword ptr [esp+0x14]	
mov ecx, dword ptr [esp+0x28]	
mov eax, dword ptr [ecx+edx*4]	
test eax, eax	
jz 0xb6462e01	
mov ecx, dword ptr [esp+0x1c]	
lea edx, ptr [eax*4]	
mov ebp, dword ptr [esp+0x2c]	
shl eax, 0x4	
add edx, dword ptr [ecx+0x18c]	
lea eax, ptr [ebp+eax*1+0xe]	
nop 	
lea ecx, ptr [eax-0xe]	
mov dword ptr [esp+0x10], ecx	
movzx ecx, word ptr [eax]	
test cx, cx	
jnz 0xb6462d8e	
mov esi, dword ptr [eax-0xa]	
test esi, esi	
jz 0xb6462df0	
START: 0xb6462e01
add dword ptr [esp+0x14], 0x1	
mov ebp, dword ptr [esp+0x24]	
cmp dword ptr [esp+0x14], ebp	
jnz 0xb6462d48	
mov esi, dword ptr [esp+0x1c]	
mov ecx, dword ptr [esp+0x38]	
test ecx, ecx	
jz 0xb6462e26	
mov ecx, dword ptr [esp+0x38]	
mov dword ptr [ecx], esi	
mov edx, dword ptr [esp+0x60]	
test edx, edx	
jz 0xb6462e39	
START: 0xb6462d48
mov edx, dword ptr [esp+0x14]	
mov ecx, dword ptr [esp+0x28]	
mov eax, dword ptr [ecx+edx*4]	
test eax, eax	
jz 0xb6462e01	
mov ecx, dword ptr [esp+0x1c]	
lea edx, ptr [eax*4]	
mov ebp, dword ptr [esp+0x2c]	
shl eax, 0x4	
add edx, dword ptr [ecx+0x18c]	
lea eax, ptr [ebp+eax*1+0xe]	
nop 	
lea ecx, ptr [eax-0xe]	
mov dword ptr [esp+0x10], ecx	
movzx ecx, word ptr [eax]	
test cx, cx	
jnz 0xb6462d8e	
mov esi, dword ptr [eax-0xa]	
test esi, esi	
jz 0xb6462df0	
START: 0xb6462d8e
movzx esi, byte ptr [eax-0x2]	
and esi, 0xf	
cmp esi, 0x6	
jz 0xb6462df0	
mov edi, dword ptr [eax-0xa]	
mov ebp, dword ptr [esp+0x1c]	
mov esi, edi	
add esi, dword ptr [ebp]	
cmp dword ptr [esp+0x18], esi	
jb 0xb6462df0	
test cx, cx	
jz 0xb6462db8	
START: 0xb6462db1
mov ecx, dword ptr [eax-0x6]	
test ecx, ecx	
jnz 0xb6462dc1	
cmp dword ptr [esp+0x18], esi	
jz 0xb6462dc9	
mov ecx, dword ptr [eax-0x6]	
add esi, ecx	
cmp dword ptr [esp+0x18], esi	
jnb 0xb6462df0	
START: 0xb6462dc1
add esi, ecx	
cmp dword ptr [esp+0x18], esi	
jnb 0xb6462df0	
mov ecx, dword ptr [esp+0x20]	
test ecx, ecx	
jz 0xb6462dda	
mov ecx, dword ptr [esp+0x20]	
cmp edi, dword ptr [ecx+0x4]	
jbe 0xb6462df0	
START: 0xb6462df0
mov ecx, dword ptr [edx]	
add eax, 0x10	
add edx, 0x4	
and ecx, 0x1	
jz 0xb6462d78	
add dword ptr [esp+0x14], 0x1	
mov ebp, dword ptr [esp+0x24]	
cmp dword ptr [esp+0x14], ebp	
jnz 0xb6462d48	
mov esi, dword ptr [esp+0x1c]	
mov ecx, dword ptr [esp+0x38]	
test ecx, ecx	
jz 0xb6462e26	
START: 0xb6462d78
lea ecx, ptr [eax-0xe]	
mov dword ptr [esp+0x10], ecx	
movzx ecx, word ptr [eax]	
test cx, cx	
jnz 0xb6462d8e	
mov esi, dword ptr [eax-0xa]	
test esi, esi	
jz 0xb6462df0	
movzx esi, byte ptr [eax-0x2]	
and esi, 0xf	
cmp esi, 0x6	
jz 0xb6462df0	
START: 0xb6462e20
mov ecx, dword ptr [esp+0x38]	
mov dword ptr [ecx], esi	
mov edx, dword ptr [esp+0x60]	
test edx, edx	
jz 0xb6462e39	
mov eax, dword ptr [esp+0x20]	
mov ebp, dword ptr [esp+0x60]	
mov dword ptr [ebp], eax	
mov eax, dword ptr [esp+0x20]	
test eax, eax	
jz 0xb6462f23	
mov edx, dword ptr [esp+0x20]	
mov eax, dword ptr [esp+0x3c]	
mov ecx, dword ptr [esp+0x20]	
add eax, dword ptr [edx]	
mov edx, dword ptr [esp+0x30]	
mov dword ptr [edx+0x8], eax	
mov eax, dword ptr [ecx+0x4]	
add eax, dword ptr [esi]	
mov esi, 0x1	
mov dword ptr [edx+0xc], eax	
jmp 0xb6462ca8	
START: 0xb6462e39
mov eax, dword ptr [esp+0x20]	
test eax, eax	
jz 0xb6462f23	
mov edx, dword ptr [esp+0x20]	
mov eax, dword ptr [esp+0x3c]	
mov ecx, dword ptr [esp+0x20]	
add eax, dword ptr [edx]	
mov edx, dword ptr [esp+0x30]	
mov dword ptr [edx+0x8], eax	
mov eax, dword ptr [ecx+0x4]	
add eax, dword ptr [esi]	
mov esi, 0x1	
mov dword ptr [edx+0xc], eax	
jmp 0xb6462ca8	
START: 0xb6462f23
mov edx, dword ptr [esp+0x30]	
mov esi, 0x1	
mov dword ptr [edx+0x8], 0x0	
mov dword ptr [edx+0xc], 0x0	
jmp 0xb6462ca8	
START: 0xb6462ca8
mov ebp, dword ptr [ebx-0x13c]	
lea eax, ptr [ebp+0x4c4]	
mov dword ptr [esp], eax	
call dword ptr [ebp+0x7f8]	
START: 0xb6462cbd
add esp, 0x4c	
mov eax, esi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0x4	
START: 0xb63b4403
sub esp, 0x4	
test eax, eax	
jz 0xb63b430e	
mov eax, dword ptr [esp+0x3c]	
mov eax, dword ptr [eax+0x18]	
test eax, eax	
jz 0xb63b430e	
jmp 0xb63b4300	
START: 0xb63b430e
mov eax, dword ptr [ebx-0x188]	
lea ecx, ptr [ebx+0x44c]	
mov edx, dword ptr gs:[0x0]	
mov dword ptr [ebx+0x1938], 0x1	
mov dword ptr [edx+eax*1], ecx	
lea eax, ptr [ebx-0x1300f4]	
mov dword ptr [ebx+0x1928], eax	
lea eax, ptr [ebx-0x12f364]	
mov dword ptr [ebx+0x192c], eax	
lea eax, ptr [ebx-0x12ffe4]	
mov dword ptr [ebx+0x1930], eax	
mov eax, dword ptr [ebx-0xa8]	
mov eax, dword ptr [eax]	
mov dword ptr [ebx+0x1934], eax	
lea eax, ptr [ebx+0x1924]	
mov dword ptr [esp], eax	
call 0xb6437ca0	__register_atfork
START: 0xb6437ca0
push ebx	
mov ecx, dword ptr [esp+0x8]	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb6437caa
add ebx, 0xa834a	
mov edx, dword ptr [ebx+0x382c]	
mov dword ptr [ecx], edx	
mov eax, edx	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb6437cc5	
lock cmpxchg dword ptr [ebx+0x382c], ecx	
cmp edx, eax	
jnz 0xb6437cb0	
pop ebx	
ret 	
START: 0xb6437cc5
cmpxchg dword ptr [ebx+0x382c], ecx	
cmp edx, eax	
jnz 0xb6437cb0	
pop ebx	
ret 	
START: 0xb63b436e
mov eax, dword ptr [ebx-0x144]	
mov esi, dword ptr [eax]	
test esi, esi	
jz 0xb63b43a6	
xor edi, edi	
mov ebp, dword ptr [esi]	
test ebp, ebp	
jz 0xb63b439b	
lea esi, ptr [esi]	
cmp byte ptr [ebp], 0x4d	
jz 0xb63b4422	
START: 0xb63b4392
add esi, 0x4	
mov ebp, dword ptr [esi]	
test ebp, ebp	
jnz 0xb63b4388	
test edi, edi	
jz 0xb63b43a6	
movzx eax, byte ptr [edi]	
test al, al	
jnz 0xb63b43c8	
START: 0xb63b4388
cmp byte ptr [ebp], 0x4d	
jz 0xb63b4422	
add esi, 0x4	
mov ebp, dword ptr [esi]	
test ebp, ebp	
jnz 0xb63b4388	
test edi, edi	
jz 0xb63b43a6	
START: 0xb63b4422
cmp byte ptr [ebp+0x1], 0x41	
jnz 0xb63b4392	
cmp byte ptr [ebp+0x2], 0x4c	
jnz 0xb63b4392	
cmp byte ptr [ebp+0x3], 0x4c	
jnz 0xb63b4392	
START: 0xb63b43a6
mov eax, dword ptr [ebx-0x164]	
mov eax, dword ptr [eax]	
test eax, eax	
jz 0xb63b43b4	
call eax	
START: 0xb63b43b4
mov dword ptr [ebx+0x10c], 0x1	
add esp, 0x4c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63b508b
mov ebx, dword ptr [esp+0x4]	
mov dword ptr [esp+0x10], esi	
mov esi, dword ptr [esp+0x8]	
add esp, 0xc	
jmp 0xb63b4d80	
START: 0xb63b4d80
sub esp, 0x3c	
mov dword ptr [esp+0x2c], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb63b4dda
cmpxchg dword ptr [edi], ecx	
jnz 0xb63b6a57	
mov edx, ebp	
mov eax, edi	
call 0xb63b20a0	_IO_str_pbackfail
START: 0xb63b20a0
push ebp	
push edi	
mov edi, eax	
push esi	
push ebx	
sub esp, 0x8c	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63b20b1
add ebx, 0x12df43	
cmp edx, 0xffffffdf	
mov dword ptr [esp+0x48], edx	
jnbe 0xb63b27c4	
mov eax, dword ptr [esp+0x48]	
mov dword ptr [esp+0x38], 0x10	
add eax, 0xb	
mov edx, eax	
and edx, 0xfffffff8	
cmp eax, 0x10	
cmovb edx, dword ptr [esp+0x38]	
cmp edx, dword ptr [ebx+0x1914]	
mov dword ptr [esp+0x38], edx	
jnbe 0xb63b2190	
mov eax, edx	
shr eax, 0x3	
sub eax, 0x2	
mov edx, dword ptr [edi+eax*4+0x8]	
mov dword ptr [esp+0x34], eax	
test edx, edx	
mov dword ptr [esp+0x30], edx	
jz 0xb63b2190	
START: 0xb63b2190
cmp dword ptr [esp+0x38], 0x1ff	
jnbe 0xb63b21fb	
mov esi, dword ptr [esp+0x38]	
shr esi, 0x3	
lea eax, ptr [edi+esi*8+0x28]	
mov ecx, dword ptr [eax+0xc]	
mov dword ptr [esp+0x4c], esi	
cmp ecx, eax	
jz 0xb63b222f	
test ecx, ecx	
jz 0xb63b2228	
START: 0xb63b21fb
mov eax, dword ptr [esp+0x38]	
shr eax, 0x6	
cmp eax, 0x26	
jbe 0xb63b27b8	
mov eax, dword ptr [esp+0x38]	
shr eax, 0x9	
cmp eax, 0x14	
jnbe 0xb63b27e7	
add eax, 0x5b	
mov dword ptr [esp+0x4c], eax	
test byte ptr [edi+0x4], 0x1	
jnz 0xb63b222f	
START: 0xb63b27b8
add eax, 0x38	
mov dword ptr [esp+0x4c], eax	
jmp 0xb63b2222	
START: 0xb63b2222
test byte ptr [edi+0x4], 0x1	
jnz 0xb63b222f	
mov eax, edi	
call 0xb63b1060	_IO_str_pbackfail
START: 0xb63b1060
push ebp	
mov ecx, eax	
push edi	
mov edx, 0xfffffff8	
push esi	
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63b1070
add ebx, 0x12ef84	
sub esp, 0x4c	
lea esi, ptr [eax+0x38]	
mov edi, dword ptr [ebx+0x1914]	
test edi, edi	
jz 0xb63b11c8	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb63b1095	
lock or dword ptr [eax+0x4], 0x1	
lea eax, ptr [eax+0x30]	
lea edx, ptr [ecx+0x2c]	
mov dword ptr [esp+0x30], eax	
lea eax, ptr [ecx+0x8]	
mov dword ptr [esp+0x38], edx	
lea edx, ptr [ebx-0x4308c]	
mov dword ptr [esp+0x2c], eax	
mov dword ptr [esp+0x3c], edx	
xor esi, esi	
mov eax, dword ptr [esp+0x2c]	
xchg dword ptr [eax], esi	
test esi, esi	
jnz 0xb63b114c	
START: 0xb63b11c8
lea eax, ptr [esi+edx*1]	
add edx, 0x8	
cmp edx, 0x3f0	
mov dword ptr [eax+0xc], eax	
mov dword ptr [eax+0x8], eax	
jnz 0xb63b11c8	
lea eax, ptr [ebx+0x44c]	
cmp ecx, eax	
jz 0xb63b1230	
mov eax, dword ptr [ecx+0x4]	
or eax, 0x2	
or eax, 0x1	
mov dword ptr [ecx+0x4], eax	
lea eax, ptr [ecx+0x30]	
mov dword ptr [ecx+0x30], eax	
add esp, 0x4c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63b1230
mov dword ptr [ebx+0x1914], 0x40	
mov eax, dword ptr [ebx+0x450]	
jmp 0xb63b11ec	
START: 0xb63b11ec
or eax, 0x1	
mov dword ptr [ecx+0x4], eax	
lea eax, ptr [ecx+0x30]	
mov dword ptr [ecx+0x30], eax	
add esp, 0x4c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63b222f
mov ebp, dword ptr [esp+0x38]	
mov esi, dword ptr [esp+0x38]	
shr ebp, 0x6	
mov dword ptr [esp+0x50], ebp	
add ebp, 0x38	
mov dword ptr [esp+0x6c], ebp	
mov ebp, dword ptr [esp+0x38]	
shr esi, 0x3	
mov dword ptr [esp+0x68], esi	
mov esi, dword ptr [esp+0x38]	
shr ebp, 0xc	
mov dword ptr [esp+0x5c], ebp	
add ebp, 0x6e	
mov dword ptr [esp+0x74], ebp	
mov ebp, dword ptr [esp+0x38]	
shr esi, 0x9	
mov dword ptr [esp+0x58], esi	
add esi, 0x5b	
mov dword ptr [esp+0x70], esi	
mov esi, dword ptr [esp+0x38]	
shr ebp, 0x12	
mov dword ptr [esp+0x64], ebp	
add ebp, 0x7c	
mov dword ptr [esp+0x7c], ebp	
mov ebp, dword ptr [esp+0x38]	
shr esi, 0xf	
mov dword ptr [esp+0x60], esi	
add esi, 0x77	
mov dword ptr [esp+0x78], esi	
lea esi, ptr [edi+0x30]	
mov dword ptr [esp+0x3c], esi	
add ebp, 0x10	
mov dword ptr [esp+0x54], ebp	
mov dword ptr [esp+0x34], 0x2710	
jmp 0xb63b22ff	
START: 0xb63b22ff
mov esi, dword ptr [edi+0x3c]	
cmp esi, dword ptr [esp+0x3c]	
jz 0xb63b2576	
mov edx, dword ptr [esi+0x4]	
mov ebp, dword ptr [esi+0xc]	
cmp edx, 0x8	
jbe 0xb63b298e	
cmp edx, dword ptr [edi+0x448]	
jnbe 0xb63b298e	
START: 0xb63b2576
lea esi, ptr [edi+0x38]	
mov dword ptr [esp+0x40], esi	
cmp dword ptr [esp+0x38], 0x1ff	
jnbe 0xb63b26f5	
mov ecx, dword ptr [esp+0x4c]	
mov eax, 0x1	
mov esi, dword ptr [esp+0x4c]	
mov ebp, dword ptr [esp+0x40]	
add ecx, 0x1	
shl eax, cl	
lea edx, ptr [ebp+esi*8-0x8]	
mov ebp, ecx	
shr ebp, 0x5	
mov esi, dword ptr [edi+ebp*4+0x430]	
lea esi, ptr [esi]	
test eax, eax	
jz 0xb63b25c0	
cmp eax, esi	
jbe 0xb63b25fb	
START: 0xb63b26f5
mov eax, dword ptr [esp+0x40]	
mov ebp, dword ptr [esp+0x4c]	
lea edx, ptr [eax+ebp*8-0x10]	
mov eax, dword ptr [edx+0x8]	
cmp eax, edx	
jz 0xb63b258b	
mov esi, dword ptr [esp+0x38]	
cmp esi, dword ptr [eax+0x4]	
jnbe 0xb63b258b	
mov ecx, dword ptr [eax+0x14]	
jmp 0xb63b2721	
START: 0xb63b258b
mov ecx, dword ptr [esp+0x4c]	
mov eax, 0x1	
mov esi, dword ptr [esp+0x4c]	
mov ebp, dword ptr [esp+0x40]	
add ecx, 0x1	
shl eax, cl	
lea edx, ptr [ebp+esi*8-0x8]	
mov ebp, ecx	
shr ebp, 0x5	
mov esi, dword ptr [edi+ebp*4+0x430]	
lea esi, ptr [esi]	
test eax, eax	
jz 0xb63b25c0	
cmp eax, esi	
jbe 0xb63b25fb	
add ebp, 0x1	
cmp ebp, 0x3	
jnbe 0xb63b261e	
START: 0xb63b25c8
mov esi, dword ptr [edi+ebp*4+0x430]	
test esi, esi	
jz 0xb63b25c0	
mov ecx, dword ptr [esp+0x40]	
mov eax, ebp	
shl eax, 0x8	
lea edx, ptr [ecx+eax*1-0x10]	
mov eax, 0x1	
test eax, esi	
jnz 0xb63b25ff	
lea esi, ptr [esi]	
add edx, 0x8	
add eax, eax	
jz 0xb63b2949	
START: 0xb63b25c0
add ebp, 0x1	
cmp ebp, 0x3	
jnbe 0xb63b261e	
mov esi, dword ptr [edi+ebp*4+0x430]	
test esi, esi	
jz 0xb63b25c0	
mov ecx, dword ptr [esp+0x40]	
mov eax, ebp	
shl eax, 0x8	
lea edx, ptr [ecx+eax*1-0x10]	
mov eax, 0x1	
test eax, esi	
jnz 0xb63b25ff	
START: 0xb63b261e
mov esi, dword ptr [edi+0x30]	
mov eax, dword ptr [esi+0x4]	
mov ecx, eax	
and ecx, 0xfffffff8	
cmp ecx, dword ptr [esp+0x54]	
jnb 0xb63b29ad	
test byte ptr [edi+0x4], 0x1	
jnz 0xb63b29e6	
mov eax, edi	
call 0xb63b1060	_IO_str_pbackfail
START: 0xb63b29e6
mov dword ptr [esp+0x60], ecx	
mov ecx, dword ptr [ebx-0xfc]	
mov ebp, dword ptr [esp+0x38]	
mov ecx, dword ptr [ecx+0x10]	
mov dword ptr [esp+0x4c], ecx	
sub ecx, 0x1	
mov dword ptr [esp+0x34], ecx	
xor ecx, ecx	
cmp ebp, dword ptr [ebx+0x134]	
jb 0xb63b2a4a	
mov edx, dword ptr [ebx+0x144]	
cmp dword ptr [ebx+0x140], edx	
jnl 0xb63b2a4a	
mov ebp, dword ptr [esp+0x38]	
mov ecx, dword ptr [esp+0x4c]	
mov eax, dword ptr [esp+0x34]	
lea esi, ptr [ebp+ecx*1+0x3]	
not eax	
and esi, eax	
cmp ebp, esi	
jb 0xb63b31b8	
START: 0xb63b2a4a
mov ebp, dword ptr [esp+0x60]	
mov edx, dword ptr [esp+0x60]	
add ebp, esi	
test edx, edx	
mov dword ptr [esp+0x40], ebp	
setnz byte ptr [esp+0x50]	
jz 0xb63b2ab0	
cmp dword ptr [esp+0x60], 0xf	
jbe 0xb63b3271	
test al, 0x1	
jz 0xb63b3271	
START: 0xb63b2ab0
cmp dword ptr [esp+0x3c], esi	
jnz 0xb63b2a61	
lea ebp, ptr [ebx+0x44c]	
cmp edi, ebp	
mov dword ptr [esp+0x58], ebp	
jz 0xb63b2cf5	
mov ebp, esi	
and ebp, 0xfff00000	
mov edx, dword ptr [ebp+0x8]	
mov dword ptr [esp+0x30], ebp	
mov dword ptr [esp+0x40], edx	
mov edx, dword ptr [esp+0x54]	
sub edx, dword ptr [esp+0x60]	
test edx, edx	
jle 0xb63b2bf6	
START: 0xb63b2cf5
mov eax, dword ptr [ebx+0x130]	
mov ebp, dword ptr [esp+0x38]	
mov ecx, dword ptr [esp+0x34]	
lea edx, ptr [ebp+eax*1+0x10]	
mov eax, dword ptr [ebx+0x450]	
mov ebp, edx	
not ecx	
sub ebp, dword ptr [esp+0x60]	
mov dword ptr [esp+0x3c], ecx	
and eax, 0x2	
cmovz edx, ebp	
add edx, dword ptr [esp+0x34]	
and edx, ecx	
test edx, edx	
mov ecx, edx	
jle 0xb63b2dba	
mov eax, dword ptr [ebx-0x15c]	
mov dword ptr [esp], edx	
mov dword ptr [esp+0x28], edx	
mov dword ptr [esp+0x2c], edx	
call dword ptr [eax]	
START: 0xb63b6cf0
sub esp, 0x1c	
mov eax, dword ptr [esp+0x20]	
mov dword ptr [esp], eax	
call 0xb6421a80	__sbrk
START: 0xb6421a80
sub esp, 0x2c	
mov dword ptr [esp+0x1c], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb6421a8c
add ebx, 0xbe568	
mov dword ptr [esp+0x28], ebp	
mov dword ptr [esp+0x20], esi	
mov dword ptr [esp+0x24], edi	
mov edi, dword ptr [esp+0x30]	
mov ebp, dword ptr [ebx-0xd0]	
mov esi, dword ptr [ebp]	
test esi, esi	
jz 0xb6421af0	
mov eax, dword ptr [ebx+0x4c]	
test eax, eax	
jnz 0xb6421af0	
cmp edi, 0x0	
jz 0xb6421ad6	
START: 0xb6421af0
mov dword ptr [esp], 0x0	
mov esi, 0xffffffff	
call 0xb6421a10	brk
START: 0xb6421a10
sub esp, 0x8	
mov edx, dword ptr [esp+0xc]	
mov dword ptr [esp], ebx	
mov dword ptr [esp+0x4], esi	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb6421a23
add ebx, 0xbe5d1	
mov ecx, edx	
xchg ebx, ecx	
mov eax, 0x2d	
call dword ptr gs:[0x10]	
START: 0xb7fdd414
push ecx	
push edx	
push ebp	
mov ebp, esp	
sysenter 	
START: 0xb7fdd424
pop ebp	
pop edx	
pop ecx	
ret 	
START: 0xb6421a39
xchg ebx, ecx	
mov esi, eax	
mov eax, dword ptr [ebx-0xd0]	
mov dword ptr [eax], esi	
xor eax, eax	
cmp edx, esi	
jnbe 0xb6421a58	
mov ebx, dword ptr [esp]	
mov esi, dword ptr [esp+0x4]	
add esp, 0x8	
ret 	
START: 0xb6421b01
test eax, eax	
js 0xb6421ad6	
mov esi, dword ptr [ebp]	
jmp 0xb6421ab9	
START: 0xb6421ab9
cmp edi, 0x0	
jz 0xb6421ad6	
jle 0xb6421b18	
add edi, esi	
jb 0xb6421b10	
START: 0xb6421ac4
mov dword ptr [esp], edi	
call 0xb6421a10	brk
START: 0xb6421acc
test eax, eax	
mov eax, 0xffffffff	
cmovs esi, eax	
mov eax, esi	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb63b6cff
mov edx, 0x0	
cmp eax, 0xffffffff	
cmovz eax, edx	
add esp, 0x1c	
ret 	
START: 0xb63b2d42
mov edx, dword ptr [esp+0x28]	
mov ecx, dword ptr [esp+0x2c]	
test eax, eax	
mov ebp, eax	
jz 0xb63b2db1	
mov eax, dword ptr [ebx-0xd8]	
mov eax, dword ptr [eax]	
test eax, eax	
jz 0xb63b2d66	
mov dword ptr [esp+0x28], edx	
call eax	
START: 0xb63b2d66
mov byte ptr [esp+0x5c], 0x1	
xor ecx, ecx	
mov eax, dword ptr [ebx+0x15c]	
test eax, eax	
jnz 0xb63b2d7d	
mov dword ptr [ebx+0x15c], ebp	
mov eax, dword ptr [ebx+0x894]	
add eax, edx	
cmp dword ptr [esp+0x40], ebp	
mov dword ptr [esp+0x44], eax	
mov dword ptr [ebx+0x894], eax	
jnz 0xb63b2df6	
cmp byte ptr [esp+0x5c], 0x0	
jz 0xb63b2df6	
START: 0xb63b2df6
test byte ptr [ebx+0x450], 0x2	
setz al	
cmp byte ptr [esp+0x50], 0x0	
jz 0xb63b2f91	
test al, al	
jz 0xb63b2f99	
cmp dword ptr [esp+0x40], ebp	
jnbe 0xb63b2f6d	
START: 0xb63b2f91
test al, al	
jnz 0xb63b2e2d	
test ebp, 0x7	
jnz 0xb63b2fbe	
cmp byte ptr [esp+0x5c], 0x0	
jz 0xb63b2f34	
START: 0xb63b2e2d
mov ecx, ebp	
and ecx, 0x7	
mov dword ptr [esp+0x40], ebp	
mov dword ptr [esp+0x44], 0x0	
jz 0xb63b2e56	
mov dword ptr [esp+0x44], 0x8	
sub dword ptr [esp+0x44], ecx	
mov ecx, dword ptr [esp+0x44]	
add ecx, ebp	
mov dword ptr [esp+0x40], ecx	
mov eax, dword ptr [esp+0x44]	
add eax, dword ptr [esp+0x60]	
add edx, eax	
add edx, ebp	
sub eax, edx	
add edx, dword ptr [esp+0x34]	
and edx, dword ptr [esp+0x3c]	
add edx, eax	
js 0xb63b2f4b	
mov ebp, dword ptr [ebx-0x15c]	
mov dword ptr [esp], edx	
mov dword ptr [esp+0x28], edx	
call dword ptr [ebp]	
START: 0xb63b2e56
mov eax, dword ptr [esp+0x44]	
add eax, dword ptr [esp+0x60]	
add edx, eax	
add edx, ebp	
sub eax, edx	
add edx, dword ptr [esp+0x34]	
and edx, dword ptr [esp+0x3c]	
add edx, eax	
js 0xb63b2f4b	
mov ebp, dword ptr [ebx-0x15c]	
mov dword ptr [esp], edx	
mov dword ptr [esp+0x28], edx	
call dword ptr [ebp]	
START: 0xb6421ad6
mov eax, esi	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb63b2e84
mov edx, dword ptr [esp+0x28]	
test eax, eax	
mov ecx, eax	
jz 0xb63b2f24	
mov eax, dword ptr [ebx-0xd8]	
mov eax, dword ptr [eax]	
test eax, eax	
jz 0xb63b2eb0	
mov dword ptr [esp+0x28], edx	
mov dword ptr [esp+0x2c], ecx	
call eax	
START: 0xb63b2eb0
mov ebp, dword ptr [esp+0x40]	
mov dword ptr [esp+0x34], edx	
sub ecx, ebp	
mov eax, dword ptr [esp+0x34]	
add edx, ecx	
or edx, 0x1	
add eax, dword ptr [ebx+0x894]	
cmp byte ptr [esp+0x50], 0x0	
mov dword ptr [ebx+0x47c], ebp	
mov dword ptr [ebp+0x4], edx	
mov dword ptr [ebx+0x894], eax	
jz 0xb63b2b4b	
mov ecx, dword ptr [esp+0x60]	
sub ecx, 0x10	
mov edx, ecx	
or edx, 0x1	
cmp ecx, 0xf	
mov dword ptr [esi+0x4], edx	
mov dword ptr [esi+ecx*1+0x4], 0x9	
mov dword ptr [esi+ecx*1+0xc], 0x9	
jbe 0xb63b2b4b	
mov edx, esi	
lea eax, ptr [ebx+0x44c]	
mov dword ptr [esp], 0x1	
call 0xb63b15d0	_IO_str_pbackfail
START: 0xb63b2b4b
cmp eax, dword ptr [edi+0x44c]	
jbe 0xb63b2b59	
mov dword ptr [edi+0x44c], eax	
mov eax, dword ptr [ebp+0x4]	
and eax, 0xfffffff8	
cmp dword ptr [esp+0x54], eax	
jnbe 0xb63b27c4	
mov edx, dword ptr [esp+0x38]	
xor ecx, ecx	
sub eax, dword ptr [esp+0x38]	
mov esi, dword ptr [esp+0x38]	
add edx, ebp	
cmp edi, dword ptr [esp+0x58]	
mov dword ptr [edi+0x30], edx	
setnz cl	
or esi, 0x1	
shl ecx, 0x2	
or eax, 0x1	
or esi, ecx	
mov dword ptr [ebp+0x4], esi	
add ebp, 0x8	
mov dword ptr [edx+0x4], eax	
xor esi, esi	
test ebp, ebp	
jz 0xb63b217e	
START: 0xb63b2ba1
mov eax, dword ptr [ebx+0x1918]	
test eax, eax	
jnz 0xb63b2c89	
mov esi, ebp	
jmp 0xb63b217e	
START: 0xb63b217e
add esp, 0x8c	
mov eax, esi	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63b4dec
test eax, eax	
mov esi, eax	
jz 0xb63b4e48	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb63b4dfd	
lock sub dword ptr [edi], 0x1	
jnz 0xb63b6a63	
START: 0xb63b4dfd
sub dword ptr [edi], 0x1	
jnz 0xb63b6a63	
mov eax, dword ptr [esi-0x4]	
test al, 0x2	
jnz 0xb63b4e1f	
test al, 0x4	
lea edx, ptr [ebx+0x44c]	
jnz 0xb63b4e38	
START: 0xb63b4e17
cmp edx, edi	
jnz 0xb63b4f5e	
mov eax, esi	
mov ebx, dword ptr [esp+0x2c]	
mov esi, dword ptr [esp+0x30]	
mov edi, dword ptr [esp+0x34]	
mov ebp, dword ptr [esp+0x38]	
add esp, 0x3c	
ret 	
START: 0xb63b4f57
mov esi, eax	
jmp 0xb63b4e1f	
START: 0xb63b4e1f
mov eax, esi	
mov ebx, dword ptr [esp+0x2c]	
mov esi, dword ptr [esp+0x30]	
mov edi, dword ptr [esp+0x34]	
mov ebp, dword ptr [esp+0x38]	
add esp, 0x3c	
ret 	
START: 0x804851c
mov dword ptr [esp+0x28], eax	
mov eax, dword ptr [esp+0x28]	
mov dword ptr [esp], eax	
call 0x80483e0	.plt
START: 0x80483e0
jmp dword ptr [0x804a008]	
START: 0x80483e6
push 0x10	
jmp 0x80483b0	
START: 0xb63b5260
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63b5266
add ebx, 0x12ad8e	
sub esp, 0x18	
mov ecx, dword ptr [esp+0x20]	
mov eax, dword ptr [ebx-0xb8]	
mov eax, dword ptr [eax]	
test eax, eax	
jnz 0xb63b52ee	
test ecx, ecx	
jz 0xb63b5300	
lea edx, ptr [ecx-0x8]	
mov ecx, dword ptr [ecx-0x4]	
test cl, 0x2	
jnz 0xb63b52b8	
START: 0xb63b528e
and ecx, 0x4	
lea eax, ptr [ebx+0x44c]	
jz 0xb63b52a2	
mov eax, edx	
and eax, 0xfff00000	
mov eax, dword ptr [eax]	
mov dword ptr [esp+0x20], 0x0	
add esp, 0x18	
pop ebx	
jmp 0xb63b15d0	
START: 0xb63b52a2
mov dword ptr [esp+0x20], 0x0	
add esp, 0x18	
pop ebx	
jmp 0xb63b15d0	
START: 0xb63b15d0
push ebp	
push edi	
push esi	
mov esi, edx	
push ebx	
sub esp, 0x5c	
mov dword ptr [esp+0x38], eax	
mov eax, dword ptr [edx+0x4]	
mov ebp, dword ptr [esp+0x70]	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63b15e9
add ebx, 0x12ea0b	
mov edi, eax	
and edi, 0xfffffff8	
mov edx, edi	
neg edx	
cmp esi, edx	
mov dword ptr [esp+0x44], ebp	
jnbe 0xb63b1c64	
test esi, 0x7	
jnz 0xb63b1c64	
cmp edi, 0xf	
jbe 0xb63b1c90	
START: 0xb63b1619
cmp edi, dword ptr [ebx+0x1914]	
jnbe 0xb63b16d0	
lea edx, ptr [esi+edi*1]	
mov eax, dword ptr [edx+0x4]	
cmp eax, 0x8	
jbe 0xb63b1cc9	
mov ebp, dword ptr [esp+0x38]	
and eax, 0xfffffff8	
cmp eax, dword ptr [ebp+0x448]	
jnb 0xb63b1cc9	
START: 0xb63b16d0
test al, 0x2	
jnz 0xb63b1b00	
mov eax, dword ptr [esp+0x44]	
mov dword ptr [esp+0x48], 0x0	
test eax, eax	
jz 0xb63b19d8	
mov ecx, dword ptr [esp+0x38]	
mov eax, dword ptr [ecx+0x30]	
cmp esi, eax	
jz 0xb63b205b	
START: 0xb63b19d8
mov eax, dword ptr [esp+0x44]	
mov ecx, 0x1	
mov edx, dword ptr [esp+0x38]	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb63b19f0	
lock cmpxchg dword ptr [edx], ecx	
jnz 0xb63b68b6	
mov dword ptr [esp+0x48], 0x1	
jmp 0xb63b16ec	
START: 0xb63b19f0
cmpxchg dword ptr [edx], ecx	
jnz 0xb63b68b6	
mov dword ptr [esp+0x48], 0x1	
jmp 0xb63b16ec	
START: 0xb63b16ec
mov ecx, dword ptr [esp+0x38]	
mov eax, dword ptr [ecx+0x30]	
cmp esi, eax	
jz 0xb63b205b	
test byte ptr [ecx+0x4], 0x2	
lea ebp, ptr [esi+edi*1]	
jz 0xb63b206a	
mov ecx, dword ptr [ebp+0x4]	
test cl, 0x1	
jz 0xb63b2089	
START: 0xb63b206a
mov edx, dword ptr [eax+0x4]	
and edx, 0xfffffff8	
add eax, edx	
cmp ebp, eax	
jb 0xb63b1708	
lea edx, ptr [ebx-0x3f408]	
mov dword ptr [esp+0x2c], edx	
jmp 0xb63b1d42	
START: 0xb63b1708
mov ecx, dword ptr [ebp+0x4]	
test cl, 0x1	
jz 0xb63b2089	
cmp ecx, 0x8	
jbe 0xb63b1d38	
mov eax, dword ptr [esp+0x38]	
and ecx, 0xfffffff8	
cmp ecx, dword ptr [eax+0x448]	
jnb 0xb63b1d38	
START: 0xb63b1730
mov eax, dword ptr [ebx+0x1918]	
test eax, eax	
jnz 0xb63b1e09	
test byte ptr [esi+0x4], 0x1	
jnz 0xb63b1780	
mov eax, dword ptr [esi]	
sub esi, eax	
add edi, eax	
mov eax, dword ptr [esi+0x8]	
mov edx, dword ptr [esi+0xc]	
cmp esi, dword ptr [eax+0xc]	
jnz 0xb63b203a	
START: 0xb63b1780
mov eax, dword ptr [esp+0x38]	
cmp dword ptr [eax+0x30], ebp	
jz 0xb63b1b20	
test byte ptr [ebp+ecx*1+0x4], 0x1	
jz 0xb63b1a08	
and dword ptr [ebp+0x4], 0xfffffffe	
mov ecx, dword ptr [esp+0x38]	
mov edx, dword ptr [esp+0x38]	
mov eax, dword ptr [ecx+0x38]	
add edx, 0x30	
cmp edx, dword ptr [eax+0xc]	
jnz 0xb63b1eaa	
START: 0xb63b1b20
add edi, ecx	
mov eax, edi	
or eax, 0x1	
mov dword ptr [esi+0x4], eax	
mov eax, dword ptr [esp+0x38]	
mov dword ptr [eax+0x30], esi	
jmp 0xb63b17e4	
START: 0xb63b17e4
cmp edi, 0xffff	
jbe 0xb63b1ac8	
mov eax, dword ptr [esp+0x38]	
test byte ptr [eax+0x4], 0x1	
jz 0xb63b1b38	
lea eax, ptr [ebx+0x44c]	
cmp dword ptr [esp+0x38], eax	
jz 0xb63b1b42	
START: 0xb63b1b42
mov eax, dword ptr [ebx+0x47c]	
mov eax, dword ptr [eax+0x4]	
and eax, 0xfffffff8	
cmp eax, dword ptr [ebx+0x12c]	
jb 0xb63b1ac8	
mov edx, dword ptr [esp+0x38]	
lea eax, ptr [edx+0x448]	
mov dword ptr [esp], eax	
mov eax, dword ptr [ebx+0x130]	
lea edx, ptr [edx+0x30]	
call 0xb63b0d30	_IO_str_pbackfail
START: 0xb63b0d30
sub esp, 0x3c	
mov dword ptr [esp+0x34], edi	
mov edi, edx	
mov edx, dword ptr [edx]	
mov dword ptr [esp+0x2c], ebx	
mov dword ptr [esp+0x30], esi	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63b0d48
add ebx, 0x12f2ac	
mov esi, dword ptr [edx+0x4]	
mov dword ptr [esp+0x38], ebp	
xor ebp, ebp	
and esi, 0xfffffff8	
mov edx, esi	
sub edx, eax	
mov eax, dword ptr [ebx-0xfc]	
sub edx, 0x11	
mov eax, dword ptr [eax+0x10]	
neg eax	
and edx, eax	
mov dword ptr [esp+0x1c], edx	
jle 0xb63b0d8d	
mov edx, dword ptr [ebx-0x15c]	
mov dword ptr [esp], 0x0	
call dword ptr [edx]	
START: 0xb63b0d8d
mov eax, ebp	
mov ebx, dword ptr [esp+0x2c]	
mov esi, dword ptr [esp+0x30]	
mov edi, dword ptr [esp+0x34]	
mov ebp, dword ptr [esp+0x38]	
add esp, 0x3c	
ret 	
START: 0xb63b1b75
jmp 0xb63b1ac8	
START: 0xb63b1ac8
mov eax, dword ptr [esp+0x44]	
test eax, eax	
jnz 0xb63b16c2	
mov ebp, dword ptr [esp+0x48]	
test ebp, ebp	
jz 0xb63b1d75	
mov edx, dword ptr [esp+0x38]	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb63b1aef	
START: 0xb63b1aef
sub dword ptr [edx], 0x1	
jnz 0xb63b68c2	
add esp, 0x5c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0x804852c
mov eax, 0x8048650	
mov dword ptr [esp+0x4], 0x8048653	
mov dword ptr [esp], eax	
call 0x80483c0	.plt
START: 0x80483c0
jmp dword ptr [0x804a000]	
START: 0x80483c6
push 0x0	
jmp 0x80483b0	
START: 0xb6387ed0
push ebx	
sub esp, 0x18	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb6387ed9
add ebx, 0x15811b	
lea eax, ptr [esp+0x24]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esp+0x20]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [ebx-0x7c]	
mov eax, dword ptr [eax]	
mov dword ptr [esp], eax	
call 0xb637dab0	vfprintf
START: 0xb637dab0
push ebp	
mov eax, dword ptr gs:[0x0]	
mov ebp, esp	
push edi	
push esi	
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb637dac1
add ebx, 0x162533	
sub esp, 0x5ac	
mov esi, dword ptr [ebp+0x8]	
mov dword ptr [ebp-0x494], eax	
cmp byte ptr [esi+0x46], 0x0	
mov edx, dword ptr [ebx-0xf8]	
mov edx, dword ptr [eax+edx*1]	
mov dword ptr [ebp-0x4ac], edx	
jnz 0xb637db0b	
mov eax, dword ptr [ebx-0x118]	
test eax, eax	
jz 0xb637dc9e	
mov eax, dword ptr [esi+0x68]	
test eax, eax	
jnz 0xb637dcb0	
START: 0xb637db04
mov dword ptr [esi+0x68], 0xffffffff	
mov edx, dword ptr [esi]	
test dl, 0x8	
jnz 0xb637ded8	
mov eax, dword ptr [ebp+0xc]	
test eax, eax	
jz 0xb637deff	
cmp byte ptr [esi+0x46], 0x0	
jnz 0xb637db47	
START: 0xb637db27
mov eax, dword ptr [ebx-0x118]	
test eax, eax	
jz 0xb637dcc5	
mov eax, dword ptr [esi+0x68]	
test eax, eax	
jnz 0xb637dcd8	
mov dword ptr [esi+0x68], 0xffffffff	
and edx, 0x2	
mov ecx, dword ptr [ebp+0x10]	
jnz 0xb637dceb	
START: 0xb637dcd8
cmp eax, 0xffffffff	
jnz 0xb637dcb9	
mov edx, dword ptr [esi]	
mov ecx, dword ptr [ebp+0x10]	
and edx, 0x2	
jz 0xb637db53	
mov edx, dword ptr [ebp+0xc]	
mov eax, esi	
call 0xb6383080	vfprintf
START: 0xb637db53
mov dword ptr [ebp-0x24], ecx	
mov dword ptr [esp+0x4], 0x25	
mov edx, dword ptr [ebp+0xc]	
mov dword ptr [esp], edx	
call 0xb63bb880	strchrnul
START: 0xb63bb880
push edi	
mov eax, dword ptr [esp+0x8]	
mov edx, dword ptr [esp+0xc]	
mov dh, dl	
mov ecx, edx	
shl edx, 0x10	
mov dx, cx	
test al, 0x3	
jz 0xb63bb8e3	
mov cl, byte ptr [eax]	
cmp dl, cl	
jz 0xb63bb9dd	
test cl, cl	
jz 0xb63bb9dd	
START: 0xb63bb8e3
mov ecx, dword ptr [eax]	
xor ecx, edx	
mov edi, 0xfefefeff	
add edi, ecx	
jnb 0xb63bb9bf	
xor edi, ecx	
or edi, 0xfefefeff	
inc edi	
jnz 0xb63bb9bf	
xor ecx, edx	
mov edi, 0xfefefeff	
add edi, ecx	
jnb 0xb63bb9bf	
START: 0xb63bb9bf
test cl, cl	
jz 0xb63bb9dd	
cmp cl, dl	
jz 0xb63bb9dd	
inc eax	
test ch, ch	
jz 0xb63bb9dd	
START: 0xb63bb9dd
pop edi	
ret 	
START: 0xb637db69
mov dword ptr [ebp-0x4a0], 0x0	
mov dword ptr [ebp-0x4a4], eax	
mov eax, dword ptr [esi]	
test ah, 0x80	
jnz 0xb637dbd4	
mov ecx, dword ptr [ebx+0x3944]	
test ecx, ecx	
mov dword ptr [ebp-0x4a0], ecx	
jnz 0xb637de80	
mov eax, dword ptr [ebx-0x6c]	
mov dword ptr [ebp-0x7c], esi	
mov dword ptr [ebp-0x80], eax	
mov edx, dword ptr [esi+0x48]	
mov edi, dword ptr gs:[0x8]	
cmp edi, dword ptr [edx+0x8]	
jz 0xb637dbd0	
START: 0xb637dbaf
xor eax, eax	
mov ecx, 0x1	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb637dbc1	
lock cmpxchg dword ptr [edx], ecx	
jnz 0xb63832bc	
mov edx, dword ptr [esi+0x48]	
mov dword ptr [edx+0x8], edi	
add dword ptr [edx+0x4], 0x1	
mov eax, dword ptr [ebp-0x4a4]	
sub eax, dword ptr [ebp+0xc]	
mov dword ptr [ebp-0x490], eax	
movsx eax, byte ptr [esi+0x46]	
mov edx, dword ptr [ebp-0x490]	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [ebp+0xc]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], edx	
call dword ptr [eax+0x1c]	
START: 0xb637dbc1
cmpxchg dword ptr [edx], ecx	
jnz 0xb63832bc	
mov edx, dword ptr [esi+0x48]	
mov dword ptr [edx+0x8], edi	
add dword ptr [edx+0x4], 0x1	
mov eax, dword ptr [ebp-0x4a4]	
sub eax, dword ptr [ebp+0xc]	
mov dword ptr [ebp-0x490], eax	
movsx eax, byte ptr [esi+0x46]	
mov edx, dword ptr [ebp-0x490]	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp+0x8], edx	
mov edx, dword ptr [ebp+0xc]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], edx	
call dword ptr [eax+0x1c]	
START: 0xb63ac5d0
sub esp, 0x3c	
xor eax, eax	
mov dword ptr [esp+0x30], esi	
mov esi, dword ptr [esp+0x48]	
mov dword ptr [esp+0x2c], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63ac5e6
add ebx, 0x133a0e	
mov dword ptr [esp+0x34], edi	
mov edi, dword ptr [esp+0x44]	
test esi, esi	
mov dword ptr [esp+0x38], ebp	
jz 0xb63ac6f9	
mov ecx, dword ptr [esp+0x40]	
mov eax, dword ptr [ecx]	
and eax, 0xa00	
cmp eax, 0xa00	
jz 0xb63ac710	
mov ecx, dword ptr [esp+0x40]	
mov ebp, esi	
mov eax, dword ptr [ecx+0x18]	
mov edx, dword ptr [ecx+0x14]	
cmp eax, edx	
jnbe 0xb63ac6a0	
START: 0xb63ac6f9
mov ebx, dword ptr [esp+0x2c]	
mov esi, dword ptr [esp+0x30]	
mov edi, dword ptr [esp+0x34]	
mov ebp, dword ptr [esp+0x38]	
add esp, 0x3c	
ret 	
START: 0xb637dc05
cmp dword ptr [ebp-0x490], eax	
jz 0xb637dd10	
mov dword ptr [ebp-0x490], 0xffffffff	
mov dword ptr [ebp-0x4a8], 0x0	
mov dword ptr [ebp-0x49c], 0x0	
mov eax, dword ptr [ebp-0x4a8]	
mov dword ptr [esp], eax	
call 0xb6351ef0	.plt
START: 0xb637dd10
mov eax, dword ptr [ebp-0x490]	
test eax, eax	
js 0xb637dc11	
mov eax, dword ptr [ebp-0x4a4]	
cmp byte ptr [eax], 0x0	
jz 0xb637dc1b	
mov eax, dword ptr [ebx+0x37d4]	
test eax, eax	
jnz 0xb637eb52	
START: 0xb637dd3b
mov edi, dword ptr [ebx+0x37d8]	
test edi, edi	
jnz 0xb637eb52	
mov eax, dword ptr [ebx+0xef8]	
test eax, eax	
jnz 0xb637eb52	
mov edi, dword ptr [ebp-0x4a4]	
lea edx, ptr [ebx-0x15d488]	
mov byte ptr [ebp-0x4d8], 0x0	
mov dword ptr [ebp-0x4a8], 0x0	
mov dword ptr [ebp-0x504], 0x0	
mov dword ptr [ebp-0x4ec], 0x0	
mov dword ptr [ebp-0x4e4], 0xffffffff	
mov dword ptr [ebp-0x500], 0x0	
mov dword ptr [ebp-0x4b0], edx	
movzx eax, byte ptr [edi+0x1]	
lea ecx, ptr [edi+0x1]	
mov dword ptr [ebp-0x4dc], ecx	
mov edx, dword ptr [ebp-0x4b0]	
mov byte ptr [ebp-0x4c0], al	
sub eax, 0x20	
cmp al, 0x5a	
jbe 0xb637deb8	
START: 0xb637deb8
movsx eax, byte ptr [ebp-0x4c0]	
movzx eax, byte ptr [ebx+eax*1-0x4a1f4]	
add edx, dword ptr [ebx+eax*4-0x4a174]	
jmp 0xb637ddc6	
START: 0xb637ddc6
lea edi, ptr [ebp-0x94]	
mov dword ptr [ebp-0x49c], 0x0	
mov dword ptr [ebp-0x4bc], edi	
mov dword ptr [ebp-0x52c], 0x0	
mov dword ptr [ebp-0x528], 0x0	
mov dword ptr [ebp-0x520], 0x0	
mov dword ptr [ebp-0x524], 0x0	
mov dword ptr [ebp-0x51c], 0x0	
mov dword ptr [ebp-0x4f4], 0x0	
mov dword ptr [ebp-0x508], 0x0	
mov dword ptr [ebp-0x4fc], 0x0	
mov dword ptr [ebp-0x534], 0x0	
mov dword ptr [ebp-0x4f8], 0x0	
mov dword ptr [ebp-0x4e8], 0xffffffff	
mov dword ptr [ebp-0x530], 0x0	
mov byte ptr [ebp-0x518], 0x20	
jmp edx	
START: 0xb638196a
mov ecx, dword ptr [ebp+0x10]	
mov edi, dword ptr [ebp+0x10]	
mov ecx, dword ptr [ecx]	
add edi, 0x4	
mov dword ptr [ebp-0x4f4], edi	
mov dword ptr [ebp-0x4bc], ecx	
jmp 0xb637fc99	
START: 0xb637fc99
cmp dword ptr [ebp-0x4bc], 0x0	
jz 0xb63801aa	
cmp byte ptr [ebp-0x4c0], 0x53	
jz 0xb637ffe3	
cmp dword ptr [ebp-0x4fc], 0x0	
jnz 0xb637ffe3	
START: 0xb637fcc0
cmp dword ptr [ebp-0x4e8], 0xffffffff	
jz 0xb637fe19	
mov eax, dword ptr [ebx-0x158]	
mov edx, dword ptr [ebp-0x494]	
mov eax, dword ptr [edx+eax*1]	
mov eax, dword ptr [eax]	
cmp dword ptr [eax+0x58], 0x1	
jnz 0xb637fe35	
mov ecx, dword ptr [ebp-0x4e8]	
mov dword ptr [esp+0x4], ecx	
mov edi, dword ptr [ebp-0x4bc]	
mov dword ptr [esp], edi	
call 0xb6351f00	.plt
START: 0xb637fe19
mov edi, dword ptr [ebp-0x4bc]	
xor eax, eax	
xor edx, edx	
mov ecx, dword ptr [ebp-0x4e8]	
repne scasb byte ptr [edi]	
START: 0xb637fe29
repne scasb byte ptr [edi]	
START: 0xb637fe2b
not ecx	
lea edi, ptr [ecx-0x1]	
jmp 0xb637fd04	
START: 0xb637fd04
mov eax, dword ptr [ebp-0x4f8]	
sub eax, edi	
mov dword ptr [ebp-0x4c0], eax	
js 0xb637fdd6	
cmp dword ptr [ebp-0x520], 0x0	
jnz 0xb637fd7b	
cmp dword ptr [ebp-0x4c0], 0x0	
jz 0xb637fd7b	
START: 0xb637fdd6
cmp dword ptr [ebp-0x490], 0x0	
js 0xb637e3d5	
movsx eax, byte ptr [esi+0x46]	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp+0x8], edi	
mov edx, dword ptr [ebp-0x4bc]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], edx	
call dword ptr [eax+0x1c]	
START: 0xb63ac626
mov ecx, dword ptr [esp+0x40]	
movsx eax, byte ptr [ecx+0x46]	
mov eax, dword ptr [ecx+eax*1+0x94]	
mov dword ptr [esp+0x4], 0xffffffff	
mov dword ptr [esp], ecx	
call dword ptr [eax+0xc]	
START: 0xb63ad340
sub esp, 0x2c	
mov dword ptr [esp+0x20], esi	
mov esi, dword ptr [esp+0x30]	
mov dword ptr [esp+0x1c], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63ad354
add ebx, 0x132ca0	
mov dword ptr [esp+0x24], edi	
mov edi, dword ptr [esp+0x34]	
mov edx, dword ptr [esi]	
mov dword ptr [esp+0x28], ebp	
test dl, 0x8	
jnz 0xb63ad4d0	
test dh, 0x8	
jz 0xb63ad3d8	
mov eax, dword ptr [esi+0x10]	
test eax, eax	
jz 0xb63ad4f8	
START: 0xb63ad3d8
mov eax, dword ptr [esi+0x10]	
test eax, eax	
jz 0xb63ad4f8	
mov eax, dword ptr [esi+0x4]	
test dh, 0x1	
jnz 0xb63ad538	
mov ecx, dword ptr [esi+0x20]	
cmp ecx, eax	
jz 0xb63ad4c0	
START: 0xb63ad4f8
mov dword ptr [esp], esi	
call 0xb63ae3a0	_IO_doallocbuf
START: 0xb63ae3a0
sub esp, 0x1c	
mov dword ptr [esp+0x18], esi	
mov esi, dword ptr [esp+0x20]	
mov dword ptr [esp+0x14], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63ae3b4
add ebx, 0x131c40	
mov eax, dword ptr [esi+0x1c]	
test eax, eax	
jz 0xb63ae3d0	
mov ebx, dword ptr [esp+0x14]	
mov esi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb63ae3d0
test byte ptr [esi], 0x2	
jz 0xb63ae3dc	
mov eax, dword ptr [esi+0x68]	
test eax, eax	
jle 0xb63ae3f2	
movsx eax, byte ptr [esi+0x46]	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp], esi	
call dword ptr [eax+0x34]	
START: 0xb63ae3dc
movsx eax, byte ptr [esi+0x46]	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp], esi	
call dword ptr [eax+0x34]	
START: 0xb63a0140
sub esp, 0xac	
mov dword ptr [esp+0xa0], esi	
mov esi, dword ptr [esp+0xb0]	
mov dword ptr [esp+0x9c], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63a0160
add ebx, 0x13fe94	
mov dword ptr [esp+0xa4], edi	
mov edi, 0x2000	
mov eax, dword ptr [esi+0x38]	
mov dword ptr [esp+0xa8], ebp	
mov ebp, 0x2000	
test eax, eax	
js 0xb63a01d6	
movsx eax, byte ptr [esi+0x46]	
lea edx, ptr [esp+0x30]	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp+0x4], edx	
mov dword ptr [esp], esi	
call dword ptr [eax+0x48]	
START: 0xb63ad5f0
sub esp, 0x1c	
mov eax, dword ptr [esp+0x24]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esp+0x20]	
mov eax, dword ptr [eax+0x38]	
mov dword ptr [esp], 0x3	
mov dword ptr [esp+0x4], eax	
call 0xb64185a0	__fxstat64
START: 0xb64185a0
push ebx	
mov ecx, dword ptr [esp+0x10]	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb64185aa
add ebx, 0xc7a4a	
mov edx, dword ptr [esp+0xc]	
xchg ebx, edx	
mov eax, 0xc5	
call dword ptr gs:[0x10]	
START: 0xb64185c2
xchg ebx, edx	
cmp eax, 0xfffff000	
jnbe 0xb64185cd	
pop ebx	
ret 	
START: 0xb63ad612
add esp, 0x1c	
ret 	
START: 0xb63a019e
test eax, eax	
js 0xb63a01d6	
mov eax, dword ptr [esp+0x40]	
and eax, 0xf000	
cmp eax, 0x2000	
jz 0xb63a0258	
mov eax, dword ptr [esp+0x64]	
mov edi, 0x2000	
mov ebp, 0x2000	
test eax, eax	
jle 0xb63a01d6	
START: 0xb63a0258
mov ecx, dword ptr [esp+0x54]	
mov edx, dword ptr [esp+0x50]	
mov eax, ecx	
shrd edx, ecx, 0x8	
and eax, 0xfffff000	
and edx, 0xfff	
or eax, edx	
sub eax, 0x88	
cmp eax, 0x7	
jnbe 0xb63a0288	
or dword ptr [esi], 0x200	
jmp 0xb63a01b6	
START: 0xb63a01b6
mov eax, dword ptr [esp+0x64]	
mov edi, 0x2000	
mov ebp, 0x2000	
test eax, eax	
jle 0xb63a01d6	
lea edi, ptr [eax+0xfff]	
mov ebp, eax	
and edi, 0xfffff000	
mov dword ptr [esp+0x14], 0x0	
mov dword ptr [esp+0x10], 0xffffffff	
mov dword ptr [esp+0xc], 0x22	
mov dword ptr [esp+0x8], 0x3	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], 0x0	
call 0xb64260e0	mmap
START: 0xb64260e0
push ebp	
push ebx	
push esi	
push edi	
mov ebx, dword ptr [esp+0x14]	
mov ecx, dword ptr [esp+0x18]	
mov edx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
test ebp, 0xfff	
mov eax, 0xffffffea	
jnz 0xb6426118	
shr ebp, 0xc	
mov eax, 0xc0	
call dword ptr gs:[0x10]	
START: 0xb6426118
pop edi	
pop esi	
pop ebx	
pop ebp	
cmp eax, 0xfffff000	
jnbe 0xb6426124	
ret 	
START: 0xb63a0206
cmp eax, 0xffffffff	
jz 0xb63a02c0	
add ebp, eax	
mov dword ptr [esp+0x4], eax	
mov dword ptr [esp+0xc], 0x1	
mov dword ptr [esp+0x8], ebp	
mov dword ptr [esp], esi	
call 0xb63ae320	_IO_setb
START: 0xb63ae320
sub esp, 0x1c	
mov dword ptr [esp+0x18], esi	
mov esi, dword ptr [esp+0x20]	
mov dword ptr [esp+0x14], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63ae334
add ebx, 0x131cc0	
mov eax, dword ptr [esi+0x1c]	
test eax, eax	
jz 0xb63ae346	
test byte ptr [esi], 0x1	
jz 0xb63ae380	
mov eax, dword ptr [esp+0x24]	
mov dword ptr [esi+0x1c], eax	
mov eax, dword ptr [esp+0x28]	
mov dword ptr [esi+0x20], eax	
mov eax, dword ptr [esp+0x2c]	
test eax, eax	
jnz 0xb63ae370	
START: 0xb63ae346
mov eax, dword ptr [esp+0x24]	
mov dword ptr [esi+0x1c], eax	
mov eax, dword ptr [esp+0x28]	
mov dword ptr [esi+0x20], eax	
mov eax, dword ptr [esp+0x2c]	
test eax, eax	
jnz 0xb63ae370	
or dword ptr [esi], 0x1	
mov ebx, dword ptr [esp+0x14]	
mov esi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb63ae370
and dword ptr [esi], 0xfffffffe	
mov ebx, dword ptr [esp+0x14]	
mov esi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb63a0229
mov eax, 0x1	
mov ebx, dword ptr [esp+0x9c]	
mov esi, dword ptr [esp+0xa0]	
mov edi, dword ptr [esp+0xa4]	
mov ebp, dword ptr [esp+0xa8]	
add esp, 0xac	
ret 	
START: 0xb63ae3ed
cmp eax, 0xffffffff	
jnz 0xb63ae3c1	
lea eax, ptr [esi+0x48]	
mov dword ptr [esp+0x8], eax	
lea eax, ptr [esi+0x47]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0xc], 0x0	
mov dword ptr [esp+0x4], eax	
call 0xb63ae320	_IO_setb
START: 0xb63ae3c1
mov ebx, dword ptr [esp+0x14]	
mov esi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb63ad500
mov eax, dword ptr [esi+0x1c]	
mov edx, dword ptr [esi]	
mov dword ptr [esi+0xc], eax	
mov dword ptr [esi+0x4], eax	
mov dword ptr [esi+0x8], eax	
jmp 0xb63ad3e6	
START: 0xb63ad3e6
test dh, 0x1	
jnz 0xb63ad538	
mov ecx, dword ptr [esi+0x20]	
cmp ecx, eax	
jz 0xb63ad4c0	
mov ebp, dword ptr [esi+0x8]	
mov dword ptr [esi+0x4], ebp	
or dh, 0x8	
mov dword ptr [esi+0xc], ebp	
mov ebp, dword ptr [esi+0x68]	
mov dword ptr [esi+0x14], eax	
mov dword ptr [esi+0x10], eax	
mov dword ptr [esi+0x18], ecx	
test ebp, ebp	
mov dword ptr [esi], edx	
jnle 0xb63ad384	
START: 0xb63ad41c
and edx, 0x202	
jz 0xb63ad384	
mov dword ptr [esi+0x18], eax	
jmp 0xb63ad384	
START: 0xb63ad384
cmp edi, 0xffffffff	
jz 0xb63ad4a0	
cmp eax, dword ptr [esi+0x20]	
jz 0xb63ad458	
mov edx, edi	
mov byte ptr [eax], dl	
mov edx, dword ptr [esi]	
add eax, 0x1	
mov dword ptr [esi+0x14], eax	
test dl, 0x2	
jnz 0xb63ad430	
START: 0xb63ad4a0
mov edx, dword ptr [esi+0x10]	
mov dword ptr [esp], esi	
sub eax, edx	
mov dword ptr [esp+0x8], eax	
mov dword ptr [esp+0x4], edx	
call 0xb63ad0e0	_IO_do_write
START: 0xb63ad0e0
push esi	
xor eax, eax	
sub esp, 0x18	
mov esi, dword ptr [esp+0x28]	
test esi, esi	
jz 0xb63ad109	
mov edx, dword ptr [esp+0x24]	
mov eax, dword ptr [esp+0x20]	
mov dword ptr [esp], esi	
call 0xb63aba30	fwide
START: 0xb63ad109
add esp, 0x18	
pop esi	
ret 	
START: 0xb63ad4b5
jmp 0xb63ad3bd	
START: 0xb63ad3bd
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb63ac643
cmp eax, 0xffffffff	
jz 0xb63ac778	
mov ecx, dword ptr [esp+0x40]	
mov eax, dword ptr [esp+0x40]	
mov ecx, dword ptr [ecx+0x20]	
mov eax, dword ptr [eax+0x1c]	
sub ecx, eax	
mov dword ptr [esp+0x1c], ecx	
xor ecx, ecx	
cmp dword ptr [esp+0x1c], 0x7f	
jbe 0xb63ac673	
mov eax, ebp	
xor edx, edx	
div dword ptr [esp+0x1c]	
mov ecx, edx	
mov eax, ebp	
sub eax, ecx	
mov ecx, eax	
jnz 0xb63ac788	
START: 0xb63ac67f
test ebp, ebp	
jz 0xb63ac6f5	
add ecx, edi	
mov dword ptr [esp+0x4], ecx	
mov ecx, dword ptr [esp+0x40]	
mov dword ptr [esp+0x8], ebp	
mov dword ptr [esp], ecx	
call 0xb63ae470	_IO_default_xsputn
START: 0xb63ae470
push ebp	
xor eax, eax	
push edi	
push esi	
push ebx	
sub esp, 0x2c	
mov edx, dword ptr [esp+0x48]	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63ae482
add ebx, 0x131b72	
mov edi, dword ptr [esp+0x40]	
test edx, edx	
jz 0xb63ae536	
mov ebp, dword ptr [esp+0x48]	
mov esi, dword ptr [esp+0x44]	
lea esi, ptr [esi]	
mov ecx, dword ptr [edi+0x14]	
mov edx, dword ptr [edi+0x18]	
cmp ecx, edx	
jnb 0xb63ae4e5	
sub edx, ecx	
cmp ebp, edx	
cmovbe edx, ebp	
cmp edx, 0x14	
jnbe 0xb63ae510	
START: 0xb63ae4e5
test ebp, ebp	
jz 0xb63ae530	
movsx eax, byte ptr [edi+0x46]	
movzx edx, byte ptr [esi]	
mov eax, dword ptr [edi+eax*1+0x94]	
mov dword ptr [esp+0x4], edx	
mov dword ptr [esp], edi	
call dword ptr [eax+0xc]	
START: 0xb63ad381
mov eax, dword ptr [esi+0x14]	
cmp edi, 0xffffffff	
jz 0xb63ad4a0	
cmp eax, dword ptr [esi+0x20]	
jz 0xb63ad458	
mov edx, edi	
mov byte ptr [eax], dl	
mov edx, dword ptr [esi]	
add eax, 0x1	
mov dword ptr [esi+0x14], eax	
test dl, 0x2	
jnz 0xb63ad430	
START: 0xb63ad3ab
cmp edi, 0xa	
jnz 0xb63ad3b8	
and dh, 0x2	
jnz 0xb63ad430	
lea esi, ptr [esi]	
mov edx, edi	
movzx eax, dl	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb63ad3b8
mov edx, edi	
movzx eax, dl	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb63ae501
cmp eax, 0xffffffff	
jz 0xb63ae530	
add esi, 0x1	
sub ebp, 0x1	
jmp 0xb63ae4a0	
START: 0xb63ae4a0
mov ecx, dword ptr [edi+0x14]	
mov edx, dword ptr [edi+0x18]	
cmp ecx, edx	
jnb 0xb63ae4e5	
sub edx, ecx	
cmp ebp, edx	
cmovbe edx, ebp	
cmp edx, 0x14	
jnbe 0xb63ae510	
test edx, edx	
jz 0xb63ae4e3	
START: 0xb63ae530
mov eax, dword ptr [esp+0x48]	
sub eax, ebp	
add esp, 0x2c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63ac699
sub ebp, eax	
jmp 0xb63ac6f5	
START: 0xb63ac6f5
mov eax, esi	
sub eax, ebp	
mov ebx, dword ptr [esp+0x2c]	
mov esi, dword ptr [esp+0x30]	
mov edi, dword ptr [esp+0x34]	
mov ebp, dword ptr [esp+0x38]	
add esp, 0x3c	
ret 	
START: 0xb637fe02
cmp edi, eax	
jz 0xb6380084	
mov dword ptr [ebp-0x490], 0xffffffff	
jmp 0xb637e039	
START: 0xb6380084
mov eax, 0x7fffffff	
sub eax, dword ptr [ebp-0x490]	
cmp edi, eax	
jnbe 0xb63800b5	
add dword ptr [ebp-0x490], edi	
jmp 0xb637e25a	
START: 0xb637e25a
cmp dword ptr [ebp-0x49c], 0x0	
jnz 0xb637e34b	
mov ecx, dword ptr [ebp-0x4dc]	
mov dword ptr [esp+0x4], 0x25	
add ecx, 0x1	
mov dword ptr [esp], ecx	
mov dword ptr [ebp-0x590], ecx	
call 0xb63bb880	strchrnul
START: 0xb637e286
mov ecx, dword ptr [ebp-0x590]	
cmp dword ptr [ebp-0x490], 0x0	
mov edi, eax	
js 0xb637e321	
mov edx, eax	
movsx eax, byte ptr [esi+0x46]	
sub edx, ecx	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp+0x4], ecx	
mov dword ptr [esp], esi	
mov dword ptr [ebp-0x58c], edx	
call dword ptr [eax+0x1c]	
START: 0xb637e2be
mov edx, dword ptr [ebp-0x58c]	
cmp edx, eax	
jz 0xb637e2f0	
mov dword ptr [ebp-0x49c], 0x0	
mov dword ptr [ebp-0x490], 0xffffffff	
jmp 0xb637e039	
START: 0xb637e2f0
mov eax, 0x7fffffff	
sub eax, dword ptr [ebp-0x490]	
cmp edx, eax	
jnbe 0xb637e46d	
add dword ptr [ebp-0x490], edx	
cmp byte ptr [edi], 0x0	
jnz 0xb637e458	
mov dword ptr [ebp-0x49c], 0x0	
jmp 0xb637e039	
START: 0xb637e039
cmp byte ptr [ebp-0x4d8], 0x0	
jz 0xb637dc2f	
mov ecx, dword ptr [ebp-0x4b4]	
mov dword ptr [esp], ecx	
call 0xb6351ef0	.plt
START: 0xb637dc2f
mov eax, dword ptr [ebp-0x4a8]	
mov dword ptr [esp], eax	
call 0xb6351ef0	.plt
START: 0xb6351ef0
jmp dword ptr [ebx+0x30]	
START: 0xb6351ef6
push 0x30	
jmp 0xb6351e50	
START: 0xb6351e50
push dword ptr [ebx+0x4]	
jmp dword ptr [ebx+0x8]	
START: 0xb63b5300
add esp, 0x18	
pop ebx	
ret 	
START: 0xb637dc3d
mov eax, dword ptr [ebp-0x49c]	
mov dword ptr [esp], eax	
call 0xb6351ef0	.plt
START: 0xb637dc4b
mov eax, dword ptr [esi]	
test ah, 0x80	
jnz 0xb637dc66	
mov edx, dword ptr [esi+0x48]	
mov eax, dword ptr [edx+0x4]	
sub eax, 0x1	
test eax, eax	
mov dword ptr [edx+0x4], eax	
jz 0xb637de60	
mov edx, dword ptr [ebp-0x4a0]	
test edx, edx	
jz 0xb637dc90	
START: 0xb637de60
mov dword ptr [edx+0x8], 0x0	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb637de72	
lock sub dword ptr [edx], 0x1	
jnz 0xb63832c8	
jmp 0xb637dc66	
START: 0xb637de72
sub dword ptr [edx], 0x1	
jnz 0xb63832c8	
jmp 0xb637dc66	
START: 0xb637dc66
mov edx, dword ptr [ebp-0x4a0]	
test edx, edx	
jz 0xb637dc90	
lea edx, ptr [ebp-0x80]	
mov eax, dword ptr [ebx+0x3928]	
mov dword ptr [esp+0x4], 0x0	
ror eax, 0x9	
xor eax, dword ptr gs:[0x18]	
mov dword ptr [esp], edx	
call eax	
START: 0xb637dc90
mov eax, dword ptr [ebp-0x490]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb6387eff
add esp, 0x18	
pop ebx	
ret 	
START: 0x8048541
lea eax, ptr [esp+0x2c]	
mov dword ptr [esp], eax	
call 0x80483d0	.plt
START: 0x80483d0
jmp dword ptr [0x804a004]	
START: 0x80483d6
push 0x8	
jmp 0x80483b0	
START: 0xb63a1da0
sub esp, 0x4c	
mov dword ptr [esp+0x3c], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63a1dac
add ebx, 0x13e248	
mov dword ptr [esp+0x40], esi	
mov dword ptr [esp+0x44], edi	
mov edi, dword ptr [esp+0x50]	
mov dword ptr [esp+0x48], ebp	
mov esi, dword ptr [ebx+0xdb0]	
mov eax, dword ptr [esi]	
mov ecx, esi	
and eax, 0x8000	
jnz 0xb63a1e0b	
mov edx, dword ptr [esi+0x48]	
mov ebp, dword ptr gs:[0x8]	
cmp ebp, dword ptr [edx+0x8]	
jz 0xb63a1e07	
mov ecx, 0x1	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb63a1df2	
START: 0xb63a1df2
cmpxchg dword ptr [edx], ecx	
jnz 0xb63a1f28	
mov edx, dword ptr [esi+0x48]	
mov ecx, dword ptr [ebx+0xdb0]	
mov dword ptr [edx+0x8], ebp	
add dword ptr [edx+0x4], 0x1	
mov edx, dword ptr [ecx+0x4]	
cmp edx, dword ptr [ecx+0x8]	
jnb 0xb63a1edc	
movzx eax, byte ptr [edx]	
add edx, 0x1	
mov dword ptr [ecx+0x4], edx	
cmp eax, 0xa	
jz 0xb63a1ed8	
START: 0xb63a1edc
mov dword ptr [esp], ecx	
call 0xb63ae1d0	__uflow
START: 0xb63ae1d0
push esi	
push ebx	
sub esp, 0x14	
mov esi, dword ptr [esp+0x20]	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63ae1de
add ebx, 0x131e16	
cmp byte ptr [esi+0x46], 0x0	
jnz 0xb63ae20a	
mov eax, dword ptr [ebx-0x118]	
test eax, eax	
jz 0xb63ae298	
mov edx, dword ptr [esi+0x68]	
test edx, edx	
jnz 0xb63ae2b0	
START: 0xb63ae203
mov dword ptr [esi+0x68], 0xffffffff	
mov ecx, dword ptr [esi+0x68]	
test ecx, ecx	
jz 0xb63ae268	
mov eax, dword ptr [esi]	
test ah, 0x8	
jnz 0xb63ae284	
mov edx, dword ptr [esi+0x4]	
cmp edx, dword ptr [esi+0x8]	
jb 0xb63ae2e0	
START: 0xb63ae224
mov eax, dword ptr [esi]	
test ah, 0x1	
jnz 0xb63ae2c8	
mov eax, dword ptr [esi+0x30]	
test eax, eax	
jz 0xb63ae2f0	
mov edx, dword ptr [esi+0x8]	
mov eax, esi	
call 0xb63add00	_IO_link_in
START: 0xb63ae2f0
mov eax, dword ptr [esi+0x24]	
test eax, eax	
jz 0xb63ae24f	
mov dword ptr [esp], esi	
call 0xb63adfb0	_IO_free_backup_area
START: 0xb63ae24f
movsx eax, byte ptr [esi+0x46]	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp], esi	
call dword ptr [eax+0x14]	
START: 0xb63ae430
push esi	
sub esp, 0x18	
mov esi, dword ptr [esp+0x20]	
movsx eax, byte ptr [esi+0x46]	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp], esi	
call dword ptr [eax+0x10]	
START: 0xb63ad110
sub esp, 0x2c	
mov dword ptr [esp+0x20], esi	
mov esi, dword ptr [esp+0x30]	
mov dword ptr [esp+0x1c], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63ad124
add ebx, 0x132ed0	
mov dword ptr [esp+0x24], edi	
mov eax, dword ptr [esi]	
mov dword ptr [esp+0x28], ebp	
test al, 0x4	
jnz 0xb63ad2e0	
mov edx, dword ptr [esi+0x4]	
cmp edx, dword ptr [esi+0x8]	
jb 0xb63ad270	
mov edx, dword ptr [esi+0x1c]	
test edx, edx	
jz 0xb63ad288	
START: 0xb63ad288
mov eax, dword ptr [esi+0x24]	
test eax, eax	
jz 0xb63ad29d	
mov dword ptr [esp], eax	
call 0xb6351ef0	.plt
START: 0xb63ad29d
mov dword ptr [esp], esi	
call 0xb63ae3a0	_IO_doallocbuf
START: 0xb63ad2a5
mov eax, dword ptr [esi]	
jmp 0xb63ad153	
START: 0xb63ad153
test eax, 0x202	
jz 0xb63ad1f0	
mov edi, dword ptr [ebx+0xdac]	
mov edx, dword ptr [edi]	
mov ecx, edi	
mov eax, edx	
and eax, 0x8000	
jnz 0xb63ad1ab	
mov edx, dword ptr [edi+0x48]	
mov ebp, dword ptr gs:[0x8]	
cmp ebp, dword ptr [edx+0x8]	
jz 0xb63ad1a5	
START: 0xb63ad180
mov ecx, 0x1	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb63ad190	
lock cmpxchg dword ptr [edx], ecx	
jnz 0xb63ad815	
mov edx, dword ptr [edi+0x48]	
mov ecx, dword ptr [ebx+0xdac]	
mov dword ptr [edx+0x8], ebp	
add dword ptr [edx+0x4], 0x1	
mov edx, dword ptr [ecx]	
and edx, 0x288	
cmp edx, 0x280	
jz 0xb63ad2c0	
START: 0xb63ad190
cmpxchg dword ptr [edx], ecx	
jnz 0xb63ad815	
mov edx, dword ptr [edi+0x48]	
mov ecx, dword ptr [ebx+0xdac]	
mov dword ptr [edx+0x8], ebp	
add dword ptr [edx+0x4], 0x1	
mov edx, dword ptr [ecx]	
and edx, 0x288	
cmp edx, 0x280	
jz 0xb63ad2c0	
mov eax, dword ptr [edi]	
test ah, 0x80	
jnz 0xb63ad1f0	
START: 0xb63ad2c0
movsx eax, byte ptr [ecx+0x46]	
mov eax, dword ptr [ecx+eax*1+0x94]	
mov dword ptr [esp+0x4], 0xffffffff	
mov dword ptr [esp], ecx	
call dword ptr [eax+0xc]	
START: 0xb63aba30
sub esp, 0x2c	
mov dword ptr [esp+0x20], esi	
mov esi, eax	
mov eax, dword ptr [eax]	
mov dword ptr [esp+0x1c], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63aba44
add ebx, 0x1345b0	
mov dword ptr [esp+0x24], edi	
mov edi, edx	
test ah, 0x10	
mov dword ptr [esp+0x28], ebp	
jz 0xb63abad0	
mov dword ptr [esi+0x4c], 0xffffffff	
mov dword ptr [esi+0x50], 0xffffffff	
movsx eax, byte ptr [esi+0x46]	
mov edx, dword ptr [esp+0x30]	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], esi	
call dword ptr [eax+0x3c]	
START: 0xb63abad0
mov eax, dword ptr [esi+0x8]	
mov edx, dword ptr [esi+0x10]	
cmp eax, edx	
jz 0xb63aba67	
movsx ecx, byte ptr [esi+0x46]	
sub edx, eax	
xor ebp, ebp	
mov eax, edx	
sar eax, 0x1f	
mov ecx, dword ptr [esi+ecx*1+0x94]	
mov dword ptr [esp+0xc], 0x1	
mov dword ptr [esp+0x4], edx	
mov dword ptr [esp+0x8], eax	
mov dword ptr [esp], esi	
call dword ptr [ecx+0x40]	
START: 0xb63aba67
movsx eax, byte ptr [esi+0x46]	
mov edx, dword ptr [esp+0x30]	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], esi	
call dword ptr [eax+0x3c]	
START: 0xb63abb60
push ebp	
xor eax, eax	
push edi	
push esi	
sub esp, 0x20	
mov edi, dword ptr [esp+0x38]	
mov ebp, dword ptr [esp+0x30]	
mov esi, dword ptr [esp+0x34]	
test edi, edi	
jle 0xb63abbb5	
mov edx, edi	
jmp 0xb63abb88	
START: 0xb63abb88
test byte ptr [ebp+0x3c], 0x2	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp+0x4], esi	
mov eax, dword ptr [ebp+0x38]	
mov dword ptr [esp+0x1c], edx	
mov dword ptr [esp], eax	
jnz 0xb63abbde	
call 0xb64194c0	write
START: 0xb64194c0
cmp dword ptr gs:[0xc], 0x0	
jnz 0xb64194ec	
push ebx	
mov edx, dword ptr [esp+0x10]	
mov ecx, dword ptr [esp+0xc]	
mov ebx, dword ptr [esp+0x8]	
mov eax, 0x4	
call dword ptr gs:[0x10]	
START: 0xb64194e3
pop ebx	
cmp eax, 0xfffff001	
jnb 0xb641951d	
ret 	
START: 0xb63abba5
mov edx, dword ptr [esp+0x1c]	
test eax, eax	
jns 0xb63abb80	
or dword ptr [ebp], 0x20	
mov eax, edi	
sub eax, edx	
mov ecx, dword ptr [ebp+0x50]	
mov edx, dword ptr [ebp+0x4c]	
test ecx, ecx	
js 0xb63abbd0	
mov esi, eax	
mov edi, eax	
sar edi, 0x1f	
add esi, edx	
adc edi, ecx	
mov dword ptr [ebp+0x4c], esi	
mov dword ptr [ebp+0x50], edi	
add esp, 0x20	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63abb80
sub edx, eax	
add esi, eax	
test edx, edx	
jle 0xb63abbd8	
test byte ptr [ebp+0x3c], 0x2	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp+0x4], esi	
mov eax, dword ptr [ebp+0x38]	
mov dword ptr [esp+0x1c], edx	
mov dword ptr [esp], eax	
jnz 0xb63abbde	
call 0xb64194c0	write
START: 0xb63abbd8
mov eax, edi	
sub eax, edx	
jmp 0xb63abbb5	
START: 0xb63abbb5
mov ecx, dword ptr [ebp+0x50]	
mov edx, dword ptr [ebp+0x4c]	
test ecx, ecx	
js 0xb63abbd0	
mov esi, eax	
mov edi, eax	
sar edi, 0x1f	
add esi, edx	
adc edi, ecx	
mov dword ptr [ebp+0x4c], esi	
mov dword ptr [ebp+0x50], edi	
add esp, 0x20	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63abbd0
add esp, 0x20	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63aba84
mov ebp, eax	
movzx eax, word ptr [esi+0x44]	
test ebp, ebp	
jnz 0xb63abb18	
mov edi, dword ptr [esi+0x68]	
mov eax, dword ptr [esi+0x1c]	
test edi, edi	
mov dword ptr [esi+0xc], eax	
mov dword ptr [esi+0x4], eax	
mov dword ptr [esi+0x8], eax	
mov dword ptr [esi+0x14], eax	
mov dword ptr [esi+0x10], eax	
jle 0xb63abb48	
mov eax, dword ptr [esi+0x20]	
mov dword ptr [esi+0x18], eax	
mov eax, ebp	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb63abb18
test ax, ax	
jz 0xb63aba92	
movzx eax, ax	
sub eax, 0x1	
mov dword ptr [esp+0x8], ebp	
mov dword ptr [esp+0x4], edi	
mov dword ptr [esp], eax	
call 0xb63aeac0	_IO_adjust_column
START: 0xb63aba92
mov edi, dword ptr [esi+0x68]	
mov eax, dword ptr [esi+0x1c]	
test edi, edi	
mov dword ptr [esi+0xc], eax	
mov dword ptr [esi+0x4], eax	
mov dword ptr [esi+0x8], eax	
mov dword ptr [esi+0x14], eax	
mov dword ptr [esi+0x10], eax	
jle 0xb63abb48	
mov eax, dword ptr [esi+0x20]	
mov dword ptr [esi+0x18], eax	
mov eax, ebp	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb63abb48
test dword ptr [esi], 0x202	
jnz 0xb63abab2	
jmp 0xb63abaaf	
START: 0xb63abab2
mov dword ptr [esi+0x18], eax	
mov eax, ebp	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb63ad0fe
cmp esi, eax	
setz al	
movzx eax, al	
sub eax, 0x1	
add esp, 0x18	
pop esi	
ret 	
START: 0xb63ad2d9
jmp 0xb63ad1bd	
START: 0xb63ad1bd
mov eax, dword ptr [edi]	
test ah, 0x80	
jnz 0xb63ad1f0	
mov edx, dword ptr [edi+0x48]	
mov eax, dword ptr [edx+0x4]	
sub eax, 0x1	
test eax, eax	
mov dword ptr [edx+0x4], eax	
jnz 0xb63ad1f0	
mov dword ptr [edx+0x8], 0x0	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb63ad1e6	
START: 0xb63ad1e6
sub dword ptr [edx], 0x1	
jnz 0xb63ad821	
nop 	
mov dword ptr [esp], esi	
call 0xb63adf30	_IO_switch_to_get_mode
START: 0xb63adf30
push esi	
sub esp, 0x18	
mov esi, dword ptr [esp+0x20]	
mov eax, dword ptr [esi+0x14]	
cmp eax, dword ptr [esi+0x10]	
jnbe 0xb63adf78	
mov edx, dword ptr [esi]	
test dh, 0x1	
jnz 0xb63adf70	
mov ecx, dword ptr [esi+0x1c]	
cmp dword ptr [esi+0x8], eax	
mov dword ptr [esi+0xc], ecx	
jnb 0xb63adf55	
START: 0xb63adf55
and dh, 0xf7	
mov dword ptr [esi+0x4], eax	
mov dword ptr [esi+0x18], eax	
mov dword ptr [esi+0x10], eax	
xor eax, eax	
mov dword ptr [esi], edx	
add esp, 0x18	
pop esi	
ret 	
START: 0xb63ad1f8
mov eax, dword ptr [esi+0x1c]	
movsx edx, byte ptr [esi+0x46]	
mov dword ptr [esi+0x4], eax	
mov dword ptr [esi+0xc], eax	
mov dword ptr [esi+0x8], eax	
mov dword ptr [esi+0x18], eax	
mov dword ptr [esi+0x14], eax	
mov dword ptr [esi+0x10], eax	
mov ecx, dword ptr [esi+edx*1+0x94]	
mov edx, dword ptr [esi+0x20]	
mov dword ptr [esp+0x4], eax	
mov dword ptr [esp], esi	
sub edx, eax	
mov dword ptr [esp+0x8], edx	
call dword ptr [ecx+0x38]	
START: 0xb63ad570
mov eax, dword ptr [esp+0x4]	
mov edx, dword ptr [esp+0x8]	
mov ecx, dword ptr [esp+0xc]	
test byte ptr [eax+0x3c], 0x2	
jnz 0xb63ad596	
mov dword ptr [esp+0xc], ecx	
mov dword ptr [esp+0x8], edx	
mov eax, dword ptr [eax+0x38]	
mov dword ptr [esp+0x4], eax	
jmp 0xb6419440	
START: 0xb6419440
cmp dword ptr gs:[0xc], 0x0	
jnz 0xb641946c	
push ebx	
mov edx, dword ptr [esp+0x10]	
mov ecx, dword ptr [esp+0xc]	
mov ebx, dword ptr [esp+0x8]	
mov eax, 0x3	
call dword ptr gs:[0x10]	
START: 0xb6419463
pop ebx	
cmp eax, 0xfffff001	
jnb 0xb641949d	
ret 	
START: 0xb63ad22b
cmp eax, 0x0	
jle 0xb63ad278	
mov edi, dword ptr [esi+0x4c]	
mov ebp, dword ptr [esi+0x50]	
add dword ptr [esi+0x8], eax	
mov edx, edi	
and edx, ebp	
cmp edx, 0xffffffff	
jz 0xb63ad251	
mov edx, eax	
sar edx, 0x1f	
add eax, edi	
adc edx, ebp	
mov dword ptr [esi+0x4c], eax	
mov dword ptr [esi+0x50], edx	
mov eax, dword ptr [esi+0x4]	
movzx eax, byte ptr [eax]	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb63ad251
mov eax, dword ptr [esi+0x4]	
movzx eax, byte ptr [eax]	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb63ae449
cmp eax, 0xffffffff	
jz 0xb63ae460	
mov edx, dword ptr [esi+0x4]	
movzx eax, byte ptr [edx]	
add edx, 0x1	
mov dword ptr [esi+0x4], edx	
add esp, 0x18	
pop esi	
ret 	
START: 0xb63ae260
add esp, 0x14	
pop ebx	
pop esi	
ret 	
START: 0xb63a1ee4
xor edx, edx	
cmp eax, 0xffffffff	
jz 0xb63a1e8f	
jmp 0xb63a1e20	
START: 0xb63a1e20
cmp eax, 0xa	
jz 0xb63a1ed8	
mov edx, dword ptr [ebx+0xdb0]	
mov ecx, dword ptr [edx]	
mov dword ptr [esp+0x2c], ecx	
and ecx, 0xffffffdf	
mov dword ptr [edx], ecx	
mov byte ptr [edi], al	
lea eax, ptr [edi+0x1]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [ebx+0xdb0]	
mov dword ptr [esp+0x10], 0x0	
mov dword ptr [esp+0xc], 0xa	
mov dword ptr [esp+0x8], 0x7fffffff	
mov dword ptr [esp], eax	
call 0xb63a1ba0	_IO_getline
START: 0xb63a1ba0
push ebx	
sub esp, 0x28	
mov eax, dword ptr [esp+0x40]	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63a1bad
add ebx, 0x13e447	
mov dword ptr [esp+0x14], 0x0	
mov dword ptr [esp+0x10], eax	
mov eax, dword ptr [esp+0x3c]	
mov dword ptr [esp+0xc], eax	
mov eax, dword ptr [esp+0x38]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esp+0x34]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [esp+0x30]	
mov dword ptr [esp], eax	
call 0xb63a1bf0	_IO_getline_info
START: 0xb63a1bf0
push ebp	
push edi	
push esi	
push ebx	
sub esp, 0x2c	
mov eax, dword ptr [esp+0x54]	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63a1c00
add ebx, 0x13e3f4	
mov ebp, dword ptr [esp+0x40]	
mov edi, dword ptr [esp+0x48]	
test eax, eax	
jz 0xb63a1c1c	
mov edx, dword ptr [esp+0x54]	
mov dword ptr [edx], 0x0	
mov esi, dword ptr [ebp+0x68]	
test esi, esi	
jz 0xb63a1d70	
mov edx, dword ptr [esp+0x44]	
xor eax, eax	
test edi, edi	
mov dword ptr [esp+0x1c], edx	
jnz 0xb63a1c86	
START: 0xb63a1c1c
mov esi, dword ptr [ebp+0x68]	
test esi, esi	
jz 0xb63a1d70	
mov edx, dword ptr [esp+0x44]	
xor eax, eax	
test edi, edi	
mov dword ptr [esp+0x1c], edx	
jnz 0xb63a1c86	
jmp 0xb63a1cc8	
START: 0xb63a1c86
mov edx, dword ptr [ebp+0x4]	
mov esi, dword ptr [ebp+0x8]	
sub esi, edx	
test esi, esi	
jnle 0xb63a1c40	
mov dword ptr [esp], ebp	
call 0xb63ae1d0	__uflow
START: 0xb63a1c40
mov eax, dword ptr [esp+0x4c]	
cmp esi, edi	
cmovnb esi, edi	
mov dword ptr [esp], edx	
mov dword ptr [esp+0x8], esi	
mov dword ptr [esp+0x4], eax	
mov dword ptr [esp+0x18], edx	
call 0xb63b9aa0	strxfrm
START: 0xb63b9aa0
push esi	
push edi	
mov eax, dword ptr [esp+0xc]	
mov edx, dword ptr [esp+0x10]	
mov esi, dword ptr [esp+0x14]	
cmp esi, 0x4	
jb 0xb63b9bff	
mov dh, dl	
mov ecx, edx	
shl edx, 0x10	
mov dx, cx	
test al, 0x3	
jz 0xb63b9b96	
cmp byte ptr [eax], dl	
jz 0xb63b9c38	
START: 0xb63b9ad1
inc eax	
dec esi	
jz 0xb63b9c18	
test al, 0x3	
jz 0xb63b9b96	
cmp byte ptr [eax], dl	
jz 0xb63b9c38	
START: 0xb63b9ae9
inc eax	
dec esi	
jz 0xb63b9c18	
test al, 0x3	
jz 0xb63b9b96	
cmp byte ptr [eax], dl	
jz 0xb63b9c38	
START: 0xb63b9b01
inc eax	
dec esi	
jmp 0xb63b9b96	
START: 0xb63b9b96
sub esi, 0x10	
jnb 0xb63b9b10	
cmp esi, 0xfffffff4	
jb 0xb63b9bff	
mov ecx, dword ptr [eax]	
mov edi, 0xfefefeff	
xor ecx, edx	
add edi, ecx	
jnb 0xb63b9c25	
START: 0xb63b9bff
and esi, 0x3	
jz 0xb63b9c18	
cmp byte ptr [eax], dl	
jz 0xb63b9c38	
inc eax	
dec esi	
jz 0xb63b9c18	
START: 0xb63b9c38
pop edi	
pop esi	
ret 	
START: 0xb63a1c5d
mov edx, dword ptr [esp+0x18]	
test eax, eax	
jnz 0xb63a1cd0	
mov dword ptr [esp+0x4], edx	
mov edx, dword ptr [esp+0x1c]	
sub edi, esi	
mov dword ptr [esp+0x8], esi	
mov dword ptr [esp], edx	
call 0xb63ba750	memccpy
START: 0xb63a1cd0
mov esi, eax	
mov ecx, eax	
mov eax, dword ptr [esp+0x50]	
mov edi, dword ptr [esp+0x1c]	
sub esi, edx	
sub edi, dword ptr [esp+0x44]	
test eax, eax	
js 0xb63a1cf1	
add ecx, 0x1	
cmp dword ptr [esp+0x50], 0x1	
sbb esi, 0xffffffff	
mov dword ptr [esp+0x4], edx	
mov edx, dword ptr [esp+0x1c]	
mov dword ptr [esp+0x8], esi	
mov dword ptr [esp+0x18], ecx	
mov dword ptr [esp], edx	
call 0xb63ba750	memccpy
START: 0xb63ba750
mov eax, edi	
mov edi, dword ptr [esp+0x4]	
mov edx, esi	
mov esi, dword ptr [esp+0x8]	
mov ecx, edi	
xor ecx, esi	
and ecx, 0x3	
mov ecx, dword ptr [esp+0xc]	
cld 	
jnz 0xb63ba7a6	
cmp ecx, 0x3	
jbe 0xb63ba7a6	
test esi, 0x3	
jz 0xb63ba78d	
START: 0xb63ba7a6
shr ecx, 0x1	
jnb 0xb63ba7ab	
movsb byte ptr [edi], byte ptr [esi]	
shr ecx, 0x1	
jnb 0xb63ba7b1	
movsw word ptr [edi], word ptr [esi]	
rep movsd dword ptr [edi], dword ptr [esi]	
START: 0xb63ba7b3
jmp 0xb63ba79d	
START: 0xb63ba79d
mov edi, eax	
mov esi, edx	
mov eax, dword ptr [esp+0x4]	
ret 	
START: 0xb63a1d09
mov ecx, dword ptr [esp+0x18]	
lea eax, ptr [esi+edi*1]	
mov dword ptr [ebp+0x4], ecx	
add esp, 0x2c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63a1be3
add esp, 0x28	
pop ebx	
ret 	
START: 0xb63a1e69
mov ecx, dword ptr [ebx+0xdb0]	
xor edx, edx	
mov ebp, dword ptr [ecx]	
test ebp, 0x20	
jnz 0xb63a1e8f	
mov edx, dword ptr [esp+0x2c]	
add eax, 0x1	
and edx, 0x20	
or edx, ebp	
mov dword ptr [ecx], edx	
mov byte ptr [edi+eax*1], 0x0	
mov edx, edi	
mov eax, dword ptr [esi]	
test ah, 0x80	
jnz 0xb63a1ebd	
mov ecx, dword ptr [esi+0x48]	
mov eax, dword ptr [ecx+0x4]	
sub eax, 0x1	
test eax, eax	
mov dword ptr [ecx+0x4], eax	
jnz 0xb63a1ebd	
START: 0xb63a1ea6
mov dword ptr [ecx+0x8], 0x0	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb63a1eb8	
lock sub dword ptr [ecx], 0x1	
jnz 0xb63a1f34	
mov eax, edx	
mov ebx, dword ptr [esp+0x3c]	
mov esi, dword ptr [esp+0x40]	
mov edi, dword ptr [esp+0x44]	
mov ebp, dword ptr [esp+0x48]	
add esp, 0x4c	
ret 	
START: 0xb63a1eb8
sub dword ptr [ecx], 0x1	
jnz 0xb63a1f34	
mov eax, edx	
mov ebx, dword ptr [esp+0x3c]	
mov esi, dword ptr [esp+0x40]	
mov edi, dword ptr [esp+0x44]	
mov ebp, dword ptr [esp+0x48]	
add esp, 0x4c	
ret 	
START: 0x804854d
lea eax, ptr [esp+0x2c]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [esp+0x28]	
mov dword ptr [esp], eax	
call 0x8048400	.plt
START: 0x8048400
jmp dword ptr [0x804a010]	
START: 0x8048406
push 0x20	
jmp 0x80483b0	
START: 0xb7fec361
call eax	
START: 0xb63b8820
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63b8826
add ebx, 0x1277ce	
cmp dword ptr [ebx+0x368c], 0x0	
jnz 0xb63b883a	
call 0xb6354850	gnu_get_libc_version
START: 0xb63b883a
lea eax, ptr [ebx-0x127774]	
test dword ptr [ebx+0x36a0], 0x4000000	
jz 0xb63b8870	
lea eax, ptr [ebx-0x117e94]	
test dword ptr [ebx+0x36bc], 0x10	
jnz 0xb63b8870	
test dword ptr [ebx+0x369c], 0x200	
jz 0xb63b8870	
START: 0xb63b886a
lea eax, ptr [ebx-0x120734]	
pop ebx	
ret 	
START: 0xb7fec363
jmp 0xb7fec2cd	
START: 0xb7fec2cd
mov edx, dword ptr [ebx-0x328]	
test edx, edx	
jnz 0xb7fec2e2	
mov edx, dword ptr [esp+0x2c]	
mov ebp, dword ptr [esp+0x24]	
mov dword ptr [edx+ebp*1], eax	
add esp, 0x4c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63bf8c0
mov edx, dword ptr [esp+0x4]	
mov ecx, dword ptr [esp+0x8]	
cmp byte ptr [ecx], 0x0	
jz 0xb63c0fa0	
cmp byte ptr [ecx+0x1], 0x0	
jz 0xb63c0fb0	
cmp byte ptr [ecx+0x2], 0x0	
jz 0xb63c0fc0	
START: 0xb63bf8e5
cmp byte ptr [ecx+0x3], 0x0	
jz 0xb63c0fd0	
cmp byte ptr [ecx+0x4], 0x0	
jz 0xb63c0fe0	
cmp byte ptr [ecx+0x5], 0x0	
jz 0xb63c0ff0	
START: 0xb63c0fe0
mov eax, dword ptr [ecx]	
mov dword ptr [edx], eax	
mov al, byte ptr [ecx+0x4]	
mov byte ptr [edx+0x4], al	
mov eax, edx	
ret 	
START: 0x8048561
mov edx, dword ptr [esp+0x4c]	
xor edx, dword ptr gs:[0x14]	
jz 0x8048573	
call 0x80483f0	.plt
START: 0x8048573
leave 	
ret 	
START: 0xb63544d3
mov dword ptr [esp], eax	
call 0xb636dfb0	exit
START: 0xb636dfb0
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb636dfb6
add ebx, 0x17203e	
sub esp, 0x18	
mov dword ptr [esp+0x8], 0x1	
lea eax, ptr [ebx+0x3f0]	
mov dword ptr [esp+0x4], eax	
mov eax, dword ptr [esp+0x20]	
mov dword ptr [esp], eax	
call 0xb636dec0	__secure_getenv
START: 0xb636dec0
push ebp	
push edi	
push esi	
push ebx	
sub esp, 0x2c	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb636decc
add ebx, 0x172128	
movzx eax, byte ptr [esp+0x48]	
mov edi, dword ptr [esp+0x40]	
mov ebp, dword ptr [esp+0x44]	
mov byte ptr [esp+0x1f], al	
mov esi, dword ptr [ebp]	
test esi, esi	
jz 0xb636df79	
data16 nop 	
mov eax, dword ptr [esi+0x4]	
test eax, eax	
jz 0xb636df70	
sub eax, 0x1	
mov edx, eax	
shl edx, 0x4	
add edx, esi	
lea ecx, ptr [edx+0x8]	
mov edx, dword ptr [edx+0x8]	
mov dword ptr [esi+0x4], eax	
cmp edx, 0x3	
jz 0xb636df58	
START: 0xb636df0f
cmp edx, 0x4	
jz 0xb636df38	
cmp edx, 0x2	
jnz 0xb636def3	
mov edx, dword ptr [ecx+0x8]	
mov eax, dword ptr [ecx+0x4]	
mov dword ptr [esp], edi	
ror eax, 0x9	
xor eax, dword ptr gs:[0x18]	
mov dword ptr [esp+0x4], edx	
call eax	
START: 0xb636df38
mov eax, dword ptr [ecx+0x4]	
mov dword ptr [esp+0x4], edi	
mov edx, dword ptr [ecx+0x8]	
ror eax, 0x9	
xor eax, dword ptr gs:[0x18]	
mov dword ptr [esp], edx	
call eax	
START: 0xb7fed280
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fed28b
add ebx, 0x11d69	
lea esi, ptr [0x4ec]	
sub esp, 0x5c	
mov dword ptr [ebp-0x44], esi	
mov dword ptr [ebp-0x2c], 0x0	
mov dword ptr [ebp-0x40], 0x0	
mov dword ptr [ebp-0x20], 0x0	
lea esi, ptr [ebx+0x2c]	
mov dword ptr [ebp-0x4c], esi	
mov esi, dword ptr [ebp-0x44]	
mov eax, dword ptr [esi+ebx*1]	
sub eax, 0x1	
mov dword ptr [ebp-0x34], eax	
js 0xb7fed4a1	
mov esi, dword ptr [ebp-0x4c]	
imul eax, eax, 0x4c	
lea eax, ptr [esi+eax*1+0x4]	
lea esi, ptr [0x820]	
mov dword ptr [ebp-0x3c], esi	
lea esi, ptr [ebx+0x4f0]	
mov dword ptr [ebp-0x38], esi	
lea esi, ptr [ebx-0x6c22]	
mov dword ptr [ebp-0x30], eax	
mov dword ptr [ebp-0x48], esi	
jmp 0xb7fed318	
START: 0xb7fed318
mov esi, dword ptr [ebp-0x38]	
mov dword ptr [esp], esi	
mov esi, dword ptr [ebp-0x3c]	
call dword ptr [esi+ebx*1]	
START: 0xb7fed324
mov esi, dword ptr [ebp-0x30]	
mov edx, dword ptr [esi]	
test edx, edx	
jz 0xb7fed2f8	
mov eax, dword ptr [esi-0x4]	
movzx ecx, byte ptr [eax+0x195]	
shr cl, 0x3	
and ecx, 0x1	
cmp ecx, dword ptr [ebp-0x2c]	
jnz 0xb7fed2f8	
lea ecx, ptr [edx*4]	
cmp ecx, dword ptr [ebp-0x40]	
jbe 0xb7fed36e	
START: 0xb7fed34e
mov esi, dword ptr [ebp-0x40]	
test esi, esi	
jnz 0xb7fed510	
lea esi, ptr [ecx+0x1e]	
and esi, 0xfffffff0	
sub esp, esi	
lea esi, ptr [esp+0x1f]	
and esi, 0xfffffff0	
mov dword ptr [ebp-0x20], esi	
mov dword ptr [ebp-0x40], ecx	
test eax, eax	
mov dword ptr [ebp-0x1c], 0x0	
jz 0xb7fed3b1	
xor ecx, ecx	
mov esi, dword ptr [ebp-0x20]	
jmp 0xb7fed387	
START: 0xb7fed387
cmp dword ptr [eax+0x14], eax	
jnz 0xb7fed380	
cmp edx, ecx	
jbe 0xb7fed5a1	
mov dword ptr [esi+ecx*4], eax	
mov dword ptr [eax+0x20c], ecx	
add ecx, 0x1	
add dword ptr [eax+0x190], 0x1	
mov eax, dword ptr [eax+0xc]	
test eax, eax	
jnz 0xb7fed387	
START: 0xb7fed3ae
mov dword ptr [ebp-0x1c], ecx	
cmp dword ptr [ebp-0x1c], edx	
jnz 0xb7fed555	
mov esi, dword ptr [ebp-0x34]	
xor ecx, ecx	
mov edx, dword ptr [ebp-0x1c]	
mov eax, dword ptr [ebp-0x20]	
mov dword ptr [esp], esi	
call 0xb7fed050	_dl_rtld_di_serinfo
START: 0xb7fed050
push ebp	
mov ebp, esp	
push edi	
push esi	
push ebx	
sub esp, 0x4c	
call 0xb7ff6bab	realloc
START: 0xb7ff6bab
mov ebx, dword ptr [esp]	
ret 	
START: 0xb7fed05e
add ebx, 0x11f96	
cmp edx, 0x1	
mov dword ptr [ebp-0x3c], eax	
mov dword ptr [ebp-0x30], edx	
mov dword ptr [ebp-0x40], ecx	
mov dword ptr [ebp-0x48], esp	
jz 0xb7fed196	
mov ecx, dword ptr [ebp+0x8]	
xor edx, edx	
mov eax, dword ptr [ebp-0x30]	
test ecx, ecx	
setz dl	
add eax, 0x1e	
mov dword ptr [ebp-0x20], edx	
and eax, 0xfffffff0	
mov edx, dword ptr [ebp-0x30]	
sub esp, eax	
lea ecx, ptr [esp+0x1b]	
and ecx, 0xfffffff0	
mov dword ptr [ebp-0x28], ecx	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp], ecx	
mov dword ptr [esp+0x4], 0x0	
call 0xb7ff6920	realloc
START: 0xb7fed0b2
mov ecx, dword ptr [ebp-0x20]	
mov edx, dword ptr [ebp-0x30]	
add ecx, 0x1	
sub edx, 0x1	
mov dword ptr [ebp-0x24], ecx	
mov dword ptr [ebp-0x44], edx	
jmp 0xb7fed102	
START: 0xb7fed102
mov ecx, dword ptr [ebp-0x20]	
mov edx, dword ptr [ebp-0x28]	
movzx eax, byte ptr [edx+ecx*1]	
add eax, 0x1	
mov byte ptr [edx+ecx*1], al	
mov byte ptr [ebp-0x31], al	
mov eax, dword ptr [ebp-0x3c]	
lea eax, ptr [eax+ecx*4]	
mov edx, dword ptr [eax]	
mov dword ptr [ebp-0x38], eax	
mov ecx, dword ptr [edx+0x14]	
mov dword ptr [ebp-0x2c], edx	
cmp ecx, edx	
jnz 0xb7fed0c8	
cmp dword ptr [ecx+0x20c], 0xffffffff	
jz 0xb7fed0c8	
mov edx, dword ptr [ebp-0x44]	
cmp dword ptr [ebp-0x20], edx	
mov dword ptr [ebp-0x1c], edx	
jnb 0xb7fed0c8	
START: 0xb7fed13e
mov edx, dword ptr [ebp-0x30]	
mov eax, dword ptr [ebp-0x3c]	
lea esi, ptr [eax+edx*4-0x4]	
mov edi, dword ptr [esi]	
mov eax, dword ptr [edi+0x1f0]	
test eax, eax	
jnz 0xb7fed15f	
jmp 0xb7fed165	
START: 0xb7fed165
mov eax, dword ptr [edi+0x1f4]	
test eax, eax	
jnz 0xb7fed241	
sub dword ptr [ebp-0x1c], 0x1	
sub esi, 0x4	
mov edx, dword ptr [ebp-0x1c]	
cmp dword ptr [ebp-0x20], edx	
jb 0xb7fed148	
mov ecx, dword ptr [ebp-0x24]	
mov edx, dword ptr [ebp-0x30]	
mov dword ptr [ebp-0x20], ecx	
cmp ecx, edx	
jnz 0xb7fed0d9	
START: 0xb7fed148
mov edi, dword ptr [esi]	
mov eax, dword ptr [edi+0x1f0]	
test eax, eax	
jnz 0xb7fed15f	
jmp 0xb7fed165	
START: 0xb7fed15f
mov edx, dword ptr [eax]	
test edx, edx	
jnz 0xb7fed158	
mov eax, dword ptr [edi+0x1f4]	
test eax, eax	
jnz 0xb7fed241	
sub dword ptr [ebp-0x1c], 0x1	
sub esi, 0x4	
mov edx, dword ptr [ebp-0x1c]	
cmp dword ptr [ebp-0x20], edx	
jb 0xb7fed148	
START: 0xb7fed158
add eax, 0x4	
cmp ecx, edx	
jz 0xb7fed1a0	
mov edx, dword ptr [eax]	
test edx, edx	
jnz 0xb7fed158	
mov eax, dword ptr [edi+0x1f4]	
test eax, eax	
jnz 0xb7fed241	
START: 0xb7fed173
sub dword ptr [ebp-0x1c], 0x1	
sub esi, 0x4	
mov edx, dword ptr [ebp-0x1c]	
cmp dword ptr [ebp-0x20], edx	
jb 0xb7fed148	
mov ecx, dword ptr [ebp-0x24]	
mov edx, dword ptr [ebp-0x30]	
mov dword ptr [ebp-0x20], ecx	
cmp ecx, edx	
jnz 0xb7fed0d9	
mov esp, dword ptr [ebp-0x48]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0x4	
START: 0xb7fed0d9
mov edx, dword ptr [ebp-0x30]	
mov eax, dword ptr [ebp-0x28]	
sub edx, dword ptr [ebp-0x24]	
add eax, dword ptr [ebp-0x24]	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp], eax	
call 0xb7ff6920	realloc
START: 0xb7fed0f9
mov edx, dword ptr [ebp-0x24]	
add edx, 0x1	
mov dword ptr [ebp-0x24], edx	
mov ecx, dword ptr [ebp-0x20]	
mov edx, dword ptr [ebp-0x28]	
movzx eax, byte ptr [edx+ecx*1]	
add eax, 0x1	
mov byte ptr [edx+ecx*1], al	
mov byte ptr [ebp-0x31], al	
mov eax, dword ptr [ebp-0x3c]	
lea eax, ptr [eax+ecx*4]	
mov edx, dword ptr [eax]	
mov dword ptr [ebp-0x38], eax	
mov ecx, dword ptr [edx+0x14]	
mov dword ptr [ebp-0x2c], edx	
cmp ecx, edx	
jnz 0xb7fed0c8	
cmp dword ptr [ecx+0x20c], 0xffffffff	
jz 0xb7fed0c8	
mov edx, dword ptr [ebp-0x44]	
cmp dword ptr [ebp-0x20], edx	
mov dword ptr [ebp-0x1c], edx	
jnb 0xb7fed0c8	
START: 0xb7ff693e
stosb byte ptr [edi]	
dec ecx	
jz 0xb7ff695d	
xor edx, 0x1	
jnz 0xb7ff6949	
stosb byte ptr [edi]	
dec ecx	
mov edx, ecx	
shr ecx, 0x2	
and edx, 0x3	
imul eax, eax, 0x1010101	
rep stosd dword ptr [edi]	
START: 0xb7fed0c8
mov ecx, dword ptr [ebp-0x24]	
mov edx, dword ptr [ebp-0x30]	
mov dword ptr [ebp-0x20], ecx	
cmp ecx, edx	
jz 0xb7fed193	
mov edx, dword ptr [ebp-0x30]	
mov eax, dword ptr [ebp-0x28]	
sub edx, dword ptr [ebp-0x24]	
add eax, dword ptr [ebp-0x24]	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp+0x8], edx	
mov dword ptr [esp], eax	
call 0xb7ff6920	realloc
START: 0xb7fed193
mov esp, dword ptr [ebp-0x48]	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 0x4	
START: 0xb7fed3cd
mov esi, dword ptr [ebp-0x38]	
sub esp, 0x4	
mov dword ptr [esp], esi	
call dword ptr [ebx+0x824]	
START: 0xb7fed3dc
mov ecx, dword ptr [ebp-0x1c]	
test ecx, ecx	
jz 0xb7fed304	
xor edi, edi	
lea esi, ptr [esi]	
mov eax, dword ptr [ebp-0x20]	
mov esi, dword ptr [eax+edi*4]	
movzx eax, byte ptr [esi+0x194]	
test al, 0x8	
jz 0xb7fed480	
and eax, 0xfffffff7	
mov byte ptr [esi+0x194], al	
mov eax, dword ptr [esi+0x88]	
test eax, eax	
jz 0xb7fed4c8	
START: 0xb7fed4c8
mov edx, dword ptr [esi+0x54]	
test edx, edx	
jz 0xb7fed465	
test byte ptr [ebx-0x354], 0x2	
jz 0xb7fed425	
mov eax, dword ptr [esi+0x4]	
cmp byte ptr [eax], 0x0	
jnz 0xb7fed4ec	
START: 0xb7fed425
test eax, eax	
jz 0xb7fed457	
mov edx, dword ptr [eax+0x4]	
mov eax, dword ptr [esi+0x90]	
add edx, dword ptr [esi]	
mov eax, dword ptr [eax+0x4]	
shr eax, 0x2	
test eax, eax	
jz 0xb7fed457	
mov dword ptr [ebp-0x24], esi	
mov esi, eax	
mov dword ptr [ebp-0x28], edi	
mov edi, edx	
call dword ptr [edi+esi*4-0x4]	
START: 0xb7fed457
mov eax, dword ptr [esi+0x54]	
test eax, eax	
jz 0xb7fed465	
mov eax, dword ptr [eax+0x4]	
add eax, dword ptr [esi]	
call eax	
START: 0x804862c
push ebx	
sub esp, 0x8	
call 0x8048635	_fini
START: 0x8048635
pop ebx	
add ebx, 0x19bf	
call 0x8048470	__do_global_dtors_aux
START: 0x8048470
push ebp	
mov ebp, esp	
push ebx	
sub esp, 0x4	
cmp byte ptr [0x804a028], 0x0	
jnz 0x80484bf	
mov eax, dword ptr [0x804a02c]	
mov ebx, 0x8049f20	
sub ebx, 0x8049f1c	
sar ebx, 0x2	
sub ebx, 0x1	
cmp eax, ebx	
jnb 0x80484b8	
lea esi, ptr [esi]	
add eax, 0x1	
mov dword ptr [0x804a02c], eax	
call dword ptr [eax*4+0x8049f1c]	
START: 0x80484b8
mov byte ptr [0x804a028], 0x1	
add esp, 0x4	
pop ebx	
pop ebp	
ret 	
START: 0x8048641
add esp, 0x8	
pop ebx	
ret 	
START: 0xb7fed465
mov eax, dword ptr [ebp-0x2c]	
test eax, eax	
jnz 0xb7fed480	
mov eax, dword ptr [ebx-0x198]	
lea edx, ptr [0xfffffe68]	
test eax, eax	
jnz 0xb7fed5cb	
sub dword ptr [esi+0x190], 0x1	
add edi, 0x1	
cmp edi, dword ptr [ebp-0x1c]	
jnz 0xb7fed3f0	
START: 0xb7fed3f0
mov eax, dword ptr [ebp-0x20]	
mov esi, dword ptr [eax+edi*4]	
movzx eax, byte ptr [esi+0x194]	
test al, 0x8	
jz 0xb7fed480	
and eax, 0xfffffff7	
mov byte ptr [esi+0x194], al	
mov eax, dword ptr [esi+0x88]	
test eax, eax	
jz 0xb7fed4c8	
test byte ptr [ebx-0x354], 0x2	
jnz 0xb7fed4dc	
START: 0xb7fed480
sub dword ptr [esi+0x190], 0x1	
add edi, 0x1	
cmp edi, dword ptr [ebp-0x1c]	
jnz 0xb7fed3f0	
sub dword ptr [ebp-0x30], 0x4c	
sub dword ptr [ebp-0x34], 0x1	
jns 0xb7fed318	
mov edi, dword ptr [ebp-0x2c]	
test edi, edi	
jnz 0xb7fed540	
START: 0xb7fed465
mov eax, dword ptr [ebp-0x2c]	
test eax, eax	
jnz 0xb7fed480	
mov eax, dword ptr [ebx-0x198]	
lea edx, ptr [0xfffffe68]	
test eax, eax	
jnz 0xb7fed5cb	
sub dword ptr [esi+0x190], 0x1	
add edi, 0x1	
cmp edi, dword ptr [ebp-0x1c]	
jnz 0xb7fed3f0	
START: 0xb7fed493
sub dword ptr [ebp-0x30], 0x4c	
sub dword ptr [ebp-0x34], 0x1	
jns 0xb7fed318	
mov edi, dword ptr [ebp-0x2c]	
test edi, edi	
jnz 0xb7fed540	
mov esi, dword ptr [ebx-0x198]	
test esi, esi	
jz 0xb7fed540	
START: 0xb7fed540
test byte ptr [ebx-0x354], 0x80	
jnz 0xb7fed610	
lea esp, ptr [ebp-0xc]	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb636df51
jmp 0xb636def0	
START: 0xb636def0
mov eax, dword ptr [esi+0x4]	
test eax, eax	
jz 0xb636df70	
sub eax, 0x1	
mov edx, eax	
shl edx, 0x4	
add edx, esi	
lea ecx, ptr [edx+0x8]	
mov edx, dword ptr [edx+0x8]	
mov dword ptr [esi+0x4], eax	
cmp edx, 0x3	
jz 0xb636df58	
cmp edx, 0x4	
jz 0xb636df38	
START: 0xb636df70
mov eax, dword ptr [esi]	
test eax, eax	
mov dword ptr [ebp], eax	
jnz 0xb636dfa1	
cmp byte ptr [esp+0x1f], 0x0	
jz 0xb636df99	
lea esi, ptr [ebx-0x1dac]	
lea ebp, ptr [ebx-0x1da8]	
cmp esi, ebp	
jnb 0xb636df99	
START: 0xb636df90
call dword ptr [esi]	
START: 0xb63aed70
push ebp	
push edi	
push esi	
push ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63aed79
add ebx, 0x13127b	
sub esp, 0x2c	
mov dword ptr [esp], 0x0	
call 0xb63aeb00	_IO_adjust_column
START: 0xb63aeb00
push ebp	
push edi	
push esi	
push ebx	
sub esp, 0x3c	
mov edi, dword ptr [esp+0x50]	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63aeb10
add ebx, 0x1314e4	
mov dword ptr [esp+0x1c], 0x0	
test edi, edi	
jz 0xb63aeb81	
mov edx, dword ptr [ebx+0x3944]	
test edx, edx	
mov dword ptr [esp+0x1c], edx	
jnz 0xb63aed38	
lea eax, ptr [ebx-0x1327b4]	
mov dword ptr [esp+0x20], eax	
mov dword ptr [esp+0x24], 0x0	
mov edx, dword ptr gs:[0x8]	
cmp edx, dword ptr [ebx+0x18a4]	
jz 0xb63aeb7a	
START: 0xb63aeb81
mov esi, dword ptr [ebx+0x96c]	
mov ebp, dword ptr [ebx+0x18ac]	
mov dword ptr [esp+0x14], 0x0	
test esi, esi	
jz 0xb63aecab	
mov edx, dword ptr gs:[0x8]	
mov dword ptr [esp+0x18], edx	
jmp 0xb63aebc0	
START: 0xb63aebc0
test edi, edi	
mov dword ptr [ebx+0x18a8], esi	
jz 0xb63aec06	
mov eax, dword ptr [esi]	
and eax, 0x8000	
jnz 0xb63aec06	
mov edx, dword ptr [esi+0x48]	
mov ecx, dword ptr [esp+0x18]	
cmp ecx, dword ptr [edx+0x8]	
jz 0xb63aec02	
START: 0xb63aec06
mov eax, dword ptr [esi+0x68]	
test eax, eax	
jle 0xb63aecf8	
cmp byte ptr [esi+0x46], 0x0	
jnz 0xb63aec51	
test eax, eax	
jle 0xb63aec51	
START: 0xb63aecf8
mov edx, dword ptr [esi+0x10]	
cmp dword ptr [esi+0x14], edx	
jbe 0xb63aec11	
movzx eax, byte ptr [esi+0x46]	
jmp 0xb63aec28	
START: 0xb63aec11
cmp byte ptr [esi+0x46], 0x0	
jnz 0xb63aec51	
test eax, eax	
jle 0xb63aec51	
mov eax, dword ptr [esi+0x58]	
mov ecx, dword ptr [eax+0xc]	
cmp dword ptr [eax+0x10], ecx	
jbe 0xb63aec51	
START: 0xb63aec51
test edi, edi	
jz 0xb63aec88	
mov eax, dword ptr [esi]	
test ah, 0x80	
jnz 0xb63aec88	
mov edx, dword ptr [esi+0x48]	
mov eax, dword ptr [edx+0x4]	
sub eax, 0x1	
test eax, eax	
mov dword ptr [edx+0x4], eax	
jnz 0xb63aec88	
START: 0xb63aec88
mov eax, dword ptr [ebx+0x18ac]	
mov dword ptr [ebx+0x18a8], 0x0	
cmp ebp, eax	
jnz 0xb63aebb0	
mov esi, dword ptr [esi+0x34]	
test esi, esi	
jnz 0xb63aebc0	
test edi, edi	
jz 0xb63aecc2	
START: 0xb63aecc2
mov ecx, dword ptr [esp+0x1c]	
test ecx, ecx	
jz 0xb63aeceb	
lea edx, ptr [esp+0x20]	
mov eax, dword ptr [ebx+0x3928]	
mov dword ptr [esp+0x4], 0x0	
ror eax, 0x9	
xor eax, dword ptr gs:[0x18]	
mov dword ptr [esp], edx	
call eax	
START: 0xb63aeceb
mov eax, dword ptr [esp+0x14]	
add esp, 0x3c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63aed8e
mov esi, dword ptr [ebx+0x96c]	
test esi, esi	
mov dword ptr [esp+0x1c], eax	
jz 0xb63aee42	
mov ebp, dword ptr gs:[0x8]	
nop 	
mov eax, dword ptr [esi]	
test al, 0x2	
jnz 0xb63aee30	
and eax, 0x1008	
cmp eax, 0x8	
jz 0xb63aee30	
START: 0xb63aee30
mov dword ptr [esi+0x68], 0xffffffff	
mov esi, dword ptr [esi+0x34]	
test esi, esi	
jnz 0xb63aeda8	
mov eax, dword ptr [esp+0x1c]	
add esp, 0x2c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63aeda8
mov eax, dword ptr [esi]	
test al, 0x2	
jnz 0xb63aee30	
and eax, 0x1008	
cmp eax, 0x8	
jz 0xb63aee30	
mov edi, dword ptr [esi+0x68]	
test edi, edi	
jz 0xb63aee30	
START: 0xb63aedc3
xor edi, edi	
mov edx, dword ptr [esi+0x48]	
test edx, edx	
jz 0xb63aedfb	
cmp ebp, dword ptr [edx+0x8]	
jz 0xb63aeec8	
xor eax, eax	
mov ecx, 0x1	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb63aede7	
START: 0xb63aede7
cmpxchg dword ptr [edx], ecx	
test eax, eax	
jnz 0xb63aee50	
mov eax, dword ptr [esi+0x48]	
mov dword ptr [eax+0x8], ebp	
mov dword ptr [eax+0x4], 0x1	
cmp byte ptr [ebx+0x18b0], 0x0	
jnz 0xb63aee0a	
mov eax, dword ptr [esi]	
test al, 0x1	
jz 0xb63aee68	
START: 0xb63aee68
or eax, 0x1	
mov edx, dword ptr [esi+0x1c]	
mov dword ptr [esi], eax	
mov eax, dword ptr [ebx+0x18b4]	
mov dword ptr [ebx+0x18b4], esi	
mov dword ptr [esi+0x60], edx	
mov dword ptr [esi+0x5c], eax	
mov eax, dword ptr [esi+0x20]	
sub eax, edx	
mov dword ptr [esi+0x64], eax	
jmp 0xb63aee0a	
START: 0xb63aee0a
movsx eax, byte ptr [esi+0x46]	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp+0x8], 0x0	
mov dword ptr [esp+0x4], 0x0	
mov dword ptr [esp], esi	
call dword ptr [eax+0x2c]	
START: 0xb63ac300
sub esp, 0x1c	
mov eax, dword ptr [esp+0x28]	
mov dword ptr [esp+0x14], ebx	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63ac310
add ebx, 0x133ce4	
mov dword ptr [esp+0x18], esi	
mov esi, dword ptr [esp+0x20]	
mov dword ptr [esp+0x8], eax	
mov eax, dword ptr [esp+0x24]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], eax	
call 0xb63ae620	_IO_default_xsgetn
START: 0xb63ae620
sub esp, 0x2c	
mov dword ptr [esp+0x20], esi	
mov esi, dword ptr [esp+0x30]	
mov dword ptr [esp+0x1c], ebx	
mov dword ptr [esp+0x24], edi	
mov edi, dword ptr [esp+0x34]	
mov dword ptr [esp+0x28], ebp	
mov ebp, dword ptr [esp+0x38]	
movsx eax, byte ptr [esi+0x46]	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63ae648
add ebx, 0x1319ac	
mov eax, dword ptr [esi+eax*1+0x94]	
mov dword ptr [esp], esi	
call dword ptr [eax+0x30]	
START: 0xb63ac210
push esi	
push ebx	
sub esp, 0x14	
mov esi, dword ptr [esp+0x20]	
call 0xb6465f83	__frame_state_for
START: 0xb6465f83
mov ebx, dword ptr [esp]	
ret 	
START: 0xb63ac21e
add ebx, 0x133dd6	
mov edx, dword ptr [esi+0x14]	
mov eax, dword ptr [esi+0x10]	
cmp edx, eax	
jbe 0xb63ac265	
mov ecx, dword ptr [esi+0x68]	
test ecx, ecx	
jle 0xb63ac2c0	
mov eax, dword ptr [esi+0x58]	
mov edx, dword ptr [eax+0xc]	
mov eax, dword ptr [eax+0x10]	
mov dword ptr [esp], esi	
mov dword ptr [esp+0x4], edx	
sub eax, edx	
sar eax, 0x2	
mov dword ptr [esp+0x8], eax	
call 0xb63a8c10	_IO_wdo_write
START: 0xb63ac265
mov eax, dword ptr [esi+0x4]	
sub eax, dword ptr [esi+0x8]	
jnz 0xb63ac288	
mov dword ptr [esi+0x4c], 0xffffffff	
xor eax, eax	
mov dword ptr [esi+0x50], 0xffffffff	
add esp, 0x14	
pop ebx	
pop esi	
ret 	
START: 0xb63ae65b
cmp eax, 0xffffffff	
jz 0xb63ae6f0	
test ebp, ebp	
jz 0xb63ae66c	
test edi, edi	
jnz 0xb63ae6d0	
START: 0xb63ae66c
or dword ptr [esi], 0x2	
lea eax, ptr [esi+0x48]	
mov dword ptr [esp+0x8], eax	
lea eax, ptr [esi+0x47]	
mov dword ptr [esp+0xc], 0x0	
mov dword ptr [esp+0x4], eax	
mov dword ptr [esp], esi	
call 0xb63ae320	_IO_setb
START: 0xb63ae35c
or dword ptr [esi], 0x1	
mov ebx, dword ptr [esp+0x14]	
mov esi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb63ae68d
mov dword ptr [esi+0x18], 0x0	
mov dword ptr [esi+0x14], 0x0	
mov dword ptr [esi+0x10], 0x0	
mov dword ptr [esi+0x8], 0x0	
mov dword ptr [esi+0x4], 0x0	
mov dword ptr [esi+0xc], 0x0	
mov eax, esi	
mov ebx, dword ptr [esp+0x1c]	
mov esi, dword ptr [esp+0x20]	
mov edi, dword ptr [esp+0x24]	
mov ebp, dword ptr [esp+0x28]	
add esp, 0x2c	
ret 	
START: 0xb63ac332
test eax, eax	
jz 0xb63ac360	
mov eax, dword ptr [esi+0x1c]	
mov dword ptr [esi+0x18], eax	
mov dword ptr [esi+0x14], eax	
mov dword ptr [esi+0x10], eax	
mov dword ptr [esi+0xc], eax	
mov dword ptr [esi+0x4], eax	
mov dword ptr [esi+0x8], eax	
mov eax, esi	
mov ebx, dword ptr [esp+0x14]	
mov esi, dword ptr [esp+0x18]	
add esp, 0x1c	
ret 	
START: 0xb63aee2b
cmp edi, 0x2	
jnz 0xb63aee90	
mov dword ptr [esi+0x68], 0xffffffff	
mov esi, dword ptr [esi+0x34]	
test esi, esi	
jnz 0xb63aeda8	
mov eax, dword ptr [esp+0x1c]	
add esp, 0x2c	
pop ebx	
pop esi	
pop edi	
pop ebp	
ret 	
START: 0xb63aee90
mov edx, dword ptr [esi+0x48]	
test edx, edx	
jz 0xb63aee30	
mov eax, dword ptr [edx+0x4]	
sub eax, 0x1	
test eax, eax	
mov dword ptr [edx+0x4], eax	
jnz 0xb63aee30	
mov dword ptr [edx+0x8], 0x0	
cmp dword ptr gs:[0xc], 0x0	
jz 0xb63aeeb6	
START: 0xb63aeeb6
sub dword ptr [edx], 0x1	
jnz 0xb63af65e	
jmp 0xb63aee30	
START: 0xb636df92
add esi, 0x4	
cmp esi, ebp	
jb 0xb636df90	
mov dword ptr [esp], edi	
call 0xb63f32c8	_exit
START: 0xb63f32c8
mov ebx, dword ptr [esp+0x4]	
mov eax, 0xfc	
call dword ptr gs:[0x10]	
